{"hash":"71764d59ae6433ae3f8c30c378d76a68dc8ad275","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, NgModule, forwardRef, InjectionToken, Pipe, ContentChildren, Directive, TemplateRef, ContentChild, Optional } from '@angular/core';\nimport Control from 'ol/control/Control';\nimport { CommonModule } from '@angular/common';\nimport MousePosition from 'ol/control/MousePosition';\nimport ScaleLine from 'ol/control/ScaleLine';\nimport Zoom from 'ol/control/Zoom';\nimport { modulo } from 'ol/math';\nimport { padNumber } from 'ol/string';\nimport { format } from 'ol/coordinate';\nimport { fromLonLat, toLonLat, transformExtent } from 'ol/proj';\nimport Draw from 'ol/interaction/Draw';\nimport Interaction from 'ol/interaction/Interaction';\nimport { Subject } from 'rxjs';\nimport PointerInteraction from 'ol/interaction/Pointer';\nimport Modify from 'ol/interaction/Modify';\nimport PinchZoom from 'ol/interaction/PinchZoom';\nimport Select from 'ol/interaction/Select';\nimport Snap from 'ol/interaction/Snap';\nimport BaseImageLayer from 'ol/layer/BaseImage';\nimport Layer from 'ol/layer/Layer';\nimport { takeUntil, startWith, map, distinctUntilChanged, filter } from 'rxjs/operators';\nimport BaseLayer from 'ol/layer/Base';\nimport BaseTileLayer from 'ol/layer/BaseTile';\nimport BaseVectorLayer from 'ol/layer/BaseVector';\nimport VectorSource from 'ol/source/Vector';\nimport Style from 'ol/style/Style';\nimport GroupLayer from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorTileLayer from 'ol/layer/VectorTile';\nimport VectorTile from 'ol/source/VectorTile';\nimport UrlTile from 'ol/source/UrlTile';\nimport WebGLTileLayer from 'ol/layer/WebGLTile';\nimport GeoTIFFSource from 'ol/source/GeoTIFF';\nimport DataTileSource from 'ol/source/DataTile';\nimport { Map } from 'ol';\nimport { defaults } from 'ol/interaction';\nimport { DomPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport Overlay from 'ol/Overlay';\nimport Cluster from 'ol/source/Cluster';\nimport ImageWMS from 'ol/source/ImageWMS';\nimport OSM from 'ol/source/OSM';\nimport XYZSource from 'ol/source/XYZ';\nimport TileImageSource from 'ol/source/TileImage';\nimport CircleStyle from 'ol/style/Circle';\nimport RegularShape from 'ol/style/RegularShape';\nimport Fill from 'ol/style/Fill';\nimport Text from 'ol/style/Text';\nimport Icon from 'ol/style/Icon';\nimport Stroke from 'ol/style/Stroke';\nimport View from 'ol/View';\n\nclass ControlComponent {\n    constructor(elementRef, ngZone) {\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.change$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this.target)\n            this.target = this.elementRef.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new Control(this);\n            }\n            this.instance.on('change', (event) => this.change$.emit(event));\n            this.instance.on('error', (event) => this.error$.emit(event));\n            this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const value = changes[key].currentValue;\n                switch (key) {\n                    case 'target':\n                        this.instance.setTarget(value);\n                        break;\n                    default:\n                        properties[key] = value;\n                        break;\n                }\n            }\n        }\n        if (Object.keys(properties).length) {\n            this.instance.setProperties(properties);\n        }\n    }\n}\nControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ControlComponent, selector: \"ol-control\", inputs: { element: [\"olElement\", \"element\"], render: [\"olRender\", \"render\"], target: [\"olTarget\", \"target\"] }, outputs: { change$: \"olChange\", error$: \"olError\", propertychange$: \"olPropertychange\" }, exportAs: [\"olControl\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-control',\n                    exportAs: 'olControl',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { element: [{\n                type: Input,\n                args: ['olElement']\n            }], render: [{\n                type: Input,\n                args: ['olRender']\n            }], target: [{\n                type: Input,\n                args: ['olTarget']\n            }], change$: [{\n                type: Output,\n                args: ['olChange']\n            }], error$: [{\n                type: Output,\n                args: ['olError']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olPropertychange']\n            }] } });\n\nclass ControlModule {\n}\nControlModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nControlModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlModule, declarations: [ControlComponent], imports: [CommonModule], exports: [ControlComponent] });\nControlModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ControlComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ControlComponent\n                    ]\n                }]\n        }] });\n\nclass MousePositionComponent extends ControlComponent {\n    constructor(elementRef, ngZone) {\n        super(elementRef, ngZone);\n        this.changeCoordinateFormat$ = new EventEmitter();\n        this.changeProjection$ = new EventEmitter();\n        this.elementRef.nativeElement.classList.add('ol-mouse-position');\n    }\n    ngOnInit() {\n        if (!this.target)\n            this.target = this.elementRef.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new MousePosition(this);\n            this.instance.on('change:coordinateFormat', (event) => this.changeCoordinateFormat$.emit(event));\n            this.instance.on('change:projection', (event) => this.changeProjection$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { coordinateFormat, projection, ...others } = changes;\n        if (this.instance && coordinateFormat)\n            this.instance.setCoordinateFormat(coordinateFormat.currentValue);\n        if (this.instance && projection)\n            this.instance.setProjection(projection.currentValue);\n        super.ngOnChanges(others);\n    }\n}\nMousePositionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMousePositionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: MousePositionComponent, selector: \"ol-mouse-position\", inputs: { className: [\"olClassName\", \"className\"], coordinateFormat: [\"olCoordinateFormat\", \"coordinateFormat\"], projection: [\"olProjection\", \"projection\"], undefinedHTML: [\"olUndefinedHTML\", \"undefinedHTML\"] }, outputs: { changeCoordinateFormat$: \"olChangeCoordinateFormat\", changeProjection$: \"olChangeProjection\" }, providers: [\n        {\n            provide: ControlComponent,\n            useExisting: forwardRef(() => MousePositionComponent),\n            multi: true\n        }\n    ], exportAs: [\"olMousePosition\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [\".ol-mouse-position{display:inline-block}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ol-mouse-position', exportAs: 'olMousePosition', template: `<ng-content></ng-content>`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: ControlComponent,\n                            useExisting: forwardRef(() => MousePositionComponent),\n                            multi: true\n                        }\n                    ], styles: [\".ol-mouse-position{display:inline-block}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { className: [{\n                type: Input,\n                args: ['olClassName']\n            }], coordinateFormat: [{\n                type: Input,\n                args: ['olCoordinateFormat']\n            }], projection: [{\n                type: Input,\n                args: ['olProjection']\n            }], undefinedHTML: [{\n                type: Input,\n                args: ['olUndefinedHTML']\n            }], changeCoordinateFormat$: [{\n                type: Output,\n                args: ['olChangeCoordinateFormat']\n            }], changeProjection$: [{\n                type: Output,\n                args: ['olChangeProjection']\n            }] } });\n\nclass MousePositionModule {\n}\nMousePositionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMousePositionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionModule, declarations: [MousePositionComponent], imports: [CommonModule], exports: [MousePositionComponent] });\nMousePositionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        MousePositionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        MousePositionComponent\n                    ]\n                }]\n        }] });\n\nclass ScaleLineComponent extends ControlComponent {\n    constructor(elementRef, ngZone) {\n        super(elementRef, ngZone);\n        this.changeUnits$ = new EventEmitter();\n        this.elementRef.nativeElement.classList.add('ol-control-scale-line');\n    }\n    ngOnInit() {\n        if (!this.target)\n            this.target = this.elementRef.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new ScaleLine(this);\n            this.instance.on('change:units', (event) => this.changeUnits$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { dpi, units, ...others } = changes;\n        if (this.instance && dpi)\n            this.instance.setDpi(dpi.currentValue);\n        if (this.instance && units)\n            this.instance.setUnits(units.currentValue);\n        super.ngOnChanges(changes);\n    }\n}\nScaleLineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nScaleLineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ScaleLineComponent, selector: \"ol-scale-line\", inputs: { className: [\"olClassName\", \"className\"], minWidth: [\"olMinWidth\", \"minWidth\"], units: [\"olUnits\", \"units\"], bar: [\"olBar\", \"bar\"], steps: [\"olSteps\", \"steps\"], text: [\"olText\", \"text\"], dpi: [\"olDpi\", \"dpi\"] }, outputs: { changeUnits$: \"olChangeUnits\" }, providers: [\n        {\n            provide: ControlComponent,\n            useExisting: forwardRef(() => ScaleLineComponent),\n            multi: true\n        }\n    ], exportAs: [\"olScaleLine\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [\".ol-control-scale-line{display:inline-block}.ol-control-scale-line .ol-scale-line{background:transparent;padding:2px}.ol-control-scale-line .ol-scale-line-inner{border:1px solid #595959;border-top:none;color:#595959;font-size:12px;line-height:12px;text-align:center;will-change:contents,width;transition:all .25s}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ol-scale-line', exportAs: 'olScaleLine', template: `<ng-content></ng-content>`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: ControlComponent,\n                            useExisting: forwardRef(() => ScaleLineComponent),\n                            multi: true\n                        }\n                    ], styles: [\".ol-control-scale-line{display:inline-block}.ol-control-scale-line .ol-scale-line{background:transparent;padding:2px}.ol-control-scale-line .ol-scale-line-inner{border:1px solid #595959;border-top:none;color:#595959;font-size:12px;line-height:12px;text-align:center;will-change:contents,width;transition:all .25s}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { className: [{\n                type: Input,\n                args: ['olClassName']\n            }], minWidth: [{\n                type: Input,\n                args: ['olMinWidth']\n            }], units: [{\n                type: Input,\n                args: ['olUnits']\n            }], bar: [{\n                type: Input,\n                args: ['olBar']\n            }], steps: [{\n                type: Input,\n                args: ['olSteps']\n            }], text: [{\n                type: Input,\n                args: ['olText']\n            }], dpi: [{\n                type: Input,\n                args: ['olDpi']\n            }], changeUnits$: [{\n                type: Output,\n                args: ['olChangeUnits']\n            }] } });\n\nclass ScaleLineModule {\n}\nScaleLineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nScaleLineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineModule, declarations: [ScaleLineComponent], imports: [CommonModule], exports: [ScaleLineComponent] });\nScaleLineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ScaleLineComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ScaleLineComponent\n                    ]\n                }]\n        }] });\n\nclass ZoomComponent extends ControlComponent {\n    constructor(elementRef, ngZone) {\n        super(elementRef, ngZone);\n        this.elementRef.nativeElement.classList.add('ol-control-zoom');\n    }\n    ngOnInit() {\n        if (!this.target)\n            this.target = this.elementRef.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Zoom(this);\n            super.ngOnInit();\n        });\n    }\n}\nZoomComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nZoomComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ZoomComponent, selector: \"ol-zoom\", inputs: { duration: [\"olDuration\", \"duration\"], className: [\"olClassName\", \"className\"], zoomInClassName: [\"olZoomInClassName\", \"zoomInClassName\"], zoomOutClassName: [\"olZoomOutClassName\", \"zoomOutClassName\"], zoomInLabel: [\"olZoomInLabel\", \"zoomInLabel\"], zoomOutLabel: [\"olZoomOutLabel\", \"zoomOutLabel\"], zoomInTipLabel: [\"olZoomInTipLabel\", \"zoomInTipLabel\"], zoomOutTipLabel: [\"olZoomOutTipLabel\", \"zoomOutTipLabel\"], delta: [\"olDelta\", \"delta\"] }, providers: [\n        {\n            provide: ControlComponent,\n            useExisting: forwardRef(() => ZoomComponent),\n            multi: true\n        }\n    ], exportAs: [\"olZoom\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [\".ol-control-zoom{display:block}.ol-control-zoom .ol-zoom{border-radius:4px;box-shadow:0 2px 8px #00000026}.ol-control-zoom .ol-zoom>.ol-zoom-in,.ol-control-zoom .ol-zoom>.ol-zoom-out{display:block;width:32px;height:32px;border:0;font-size:22px;text-align:center;line-height:32px;color:#8c8c8c;background-color:#fff;transition:all .3s cubic-bezier(.645,.045,.355,1);outline:none;cursor:pointer}.ol-control-zoom .ol-zoom>.ol-zoom-in:hover,.ol-control-zoom .ol-zoom>.ol-zoom-out:hover{color:#1890ff}.ol-control-zoom .ol-zoom>.ol-zoom-in{border-radius:4px 4px 0 0;border-bottom:1px solid rgba(0,0,0,.15)}.ol-control-zoom .ol-zoom>.ol-zoom-out{border-radius:0 0 4px 4px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ol-zoom', exportAs: 'olZoom', template: `<ng-content></ng-content>`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: ControlComponent,\n                            useExisting: forwardRef(() => ZoomComponent),\n                            multi: true\n                        }\n                    ], styles: [\".ol-control-zoom{display:block}.ol-control-zoom .ol-zoom{border-radius:4px;box-shadow:0 2px 8px #00000026}.ol-control-zoom .ol-zoom>.ol-zoom-in,.ol-control-zoom .ol-zoom>.ol-zoom-out{display:block;width:32px;height:32px;border:0;font-size:22px;text-align:center;line-height:32px;color:#8c8c8c;background-color:#fff;transition:all .3s cubic-bezier(.645,.045,.355,1);outline:none;cursor:pointer}.ol-control-zoom .ol-zoom>.ol-zoom-in:hover,.ol-control-zoom .ol-zoom>.ol-zoom-out:hover{color:#1890ff}.ol-control-zoom .ol-zoom>.ol-zoom-in{border-radius:4px 4px 0 0;border-bottom:1px solid rgba(0,0,0,.15)}.ol-control-zoom .ol-zoom>.ol-zoom-out{border-radius:0 0 4px 4px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { duration: [{\n                type: Input,\n                args: ['olDuration']\n            }], className: [{\n                type: Input,\n                args: ['olClassName']\n            }], zoomInClassName: [{\n                type: Input,\n                args: ['olZoomInClassName']\n            }], zoomOutClassName: [{\n                type: Input,\n                args: ['olZoomOutClassName']\n            }], zoomInLabel: [{\n                type: Input,\n                args: ['olZoomInLabel']\n            }], zoomOutLabel: [{\n                type: Input,\n                args: ['olZoomOutLabel']\n            }], zoomInTipLabel: [{\n                type: Input,\n                args: ['olZoomInTipLabel']\n            }], zoomOutTipLabel: [{\n                type: Input,\n                args: ['olZoomOutTipLabel']\n            }], delta: [{\n                type: Input,\n                args: ['olDelta']\n            }] } });\n\nclass ZoomModule {\n}\nZoomModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nZoomModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomModule, declarations: [ZoomComponent], imports: [CommonModule], exports: [ZoomComponent] });\nZoomModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ZoomComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ZoomComponent\n                    ]\n                }]\n        }] });\n\nclass BaseLayerRef {\n}\n\nconst LAYER_PROVIDER = new InjectionToken('Layer Provider');\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} string.\n */\nfunction degreesToStringHDMS(hemispheres, degrees, options) {\n    const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    const x = Math.abs(3600 * normalizedDegrees);\n    const template = options && typeof options.template === 'string'\n        ? options.template\n        : '{H} {D}\\u00b0{M}\\u2032{S}\\u2033';\n    const dflPrecision = options && typeof options.fractionDigits === 'number' ? options.fractionDigits : 0;\n    const precision = Math.pow(10, dflPrecision);\n    let deg = Math.floor(x / 3600);\n    let min = Math.floor((x - deg * 3600) / 60);\n    let sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return template\n        .replace('{H}', normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n        .replace('{D}', `${deg}`)\n        .replace('{M}', padNumber(min, 2))\n        .replace('{S}', padNumber(sec, 2, dflPrecision));\n}\nclass CoordinateToStringHdmsPipe {\n    transform(value, opt_fractionDigits) {\n        return [\n            degreesToStringHDMS('EW', value[0], { fractionDigits: opt_fractionDigits }),\n            degreesToStringHDMS('NS', value[1], { fractionDigits: opt_fractionDigits })\n        ]\n            .join(', ');\n    }\n}\nCoordinateToStringHdmsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nCoordinateToStringHdmsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsPipe, name: \"coordinateToStringHdms\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'coordinateToStringHdms'\n                }]\n        }] });\n\nclass CoordinateToStringHdmsModule {\n}\nCoordinateToStringHdmsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCoordinateToStringHdmsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsModule, declarations: [CoordinateToStringHdmsPipe], imports: [CommonModule], exports: [CoordinateToStringHdmsPipe] });\nCoordinateToStringHdmsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CoordinateToStringHdmsPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        CoordinateToStringHdmsPipe\n                    ]\n                }]\n        }] });\n\nclass CoordinateToStringXYPipe {\n    transform(value, opt_fractionDigits) {\n        return format(value, `{x}º, {y}º`, opt_fractionDigits);\n    }\n}\nCoordinateToStringXYPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nCoordinateToStringXYPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYPipe, name: \"coordinateToStringXY\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'coordinateToStringXY',\n                    pure: true\n                }]\n        }] });\n\nclass CoordinateToStringXYModule {\n}\nCoordinateToStringXYModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCoordinateToStringXYModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYModule, declarations: [CoordinateToStringXYPipe], imports: [CommonModule], exports: [CoordinateToStringXYPipe] });\nCoordinateToStringXYModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CoordinateToStringXYPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        CoordinateToStringXYPipe\n                    ]\n                }]\n        }] });\n\nclass FromLonLatPipe {\n    transform(coordinate, opt_projection) {\n        return fromLonLat(coordinate, opt_projection);\n    }\n}\nFromLonLatPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nFromLonLatPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatPipe, name: \"fromLonLat\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'fromLonLat',\n                    pure: true\n                }]\n        }] });\n\nclass FromLonLatModule {\n}\nFromLonLatModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFromLonLatModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatModule, declarations: [FromLonLatPipe], imports: [CommonModule], exports: [FromLonLatPipe] });\nFromLonLatModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        FromLonLatPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        FromLonLatPipe\n                    ]\n                }]\n        }] });\n\nclass InheritExtentPipe {\n    transform(value, inheritExtent) {\n        return value === 'inherit' ? inheritExtent : value;\n    }\n}\nInheritExtentPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nInheritExtentPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentPipe, name: \"inheritExtent\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'inheritExtent'\n                }]\n        }] });\n\nclass InheritExtentModule {\n}\nInheritExtentModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInheritExtentModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentModule, declarations: [InheritExtentPipe], imports: [CommonModule], exports: [InheritExtentPipe] });\nInheritExtentModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        InheritExtentPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        InheritExtentPipe\n                    ]\n                }]\n        }] });\n\nclass ToLonLatPipe {\n    transform(value, opt_projection) {\n        return toLonLat(value, opt_projection);\n    }\n}\nToLonLatPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nToLonLatPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatPipe, name: \"toLonLat\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'toLonLat'\n                }]\n        }] });\n\nclass ToLonLatModule {\n}\nToLonLatModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToLonLatModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatModule, declarations: [ToLonLatPipe], imports: [CommonModule], exports: [ToLonLatPipe] });\nToLonLatModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ToLonLatPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ToLonLatPipe\n                    ]\n                }]\n        }] });\n\nclass TransformExtentPipe {\n    transform(extent, ...args) {\n        const source = args[0] !== undefined ? args[0] : 'EPSG:4326';\n        const destination = args[1] !== undefined ? args[1] : 'EPSG:3857';\n        const stops = args[2];\n        return transformExtent(extent, source, destination, stops);\n    }\n}\nTransformExtentPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nTransformExtentPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentPipe, name: \"transformExtent\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'transformExtent',\n                    pure: true\n                }]\n        }] });\n\nclass TransformExtentModule {\n}\nTransformExtentModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTransformExtentModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentModule, declarations: [TransformExtentPipe], imports: [CommonModule], exports: [TransformExtentPipe] });\nTransformExtentModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TransformExtentPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        TransformExtentPipe\n                    ]\n                }]\n        }] });\n\nclass InteractionComponent {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.active = true;\n        this.change$ = new EventEmitter();\n        this.changeActive$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new Interaction(this);\n            }\n            this.instance.setActive(this.active);\n            this.instance.on('change', (event) => this.change$.emit(event));\n            this.instance.on('change:active', (event) => this.changeActive$.emit(event));\n            this.instance.on('error', (event) => this.error$.emit(event));\n            this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const value = changes[key].currentValue;\n                if (key === 'active') {\n                    this.instance.setActive(value);\n                }\n                else {\n                    properties[key] = value;\n                }\n            }\n        }\n        if (Object.keys(properties).length) {\n            this.instance.setProperties(properties);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: InteractionComponent, selector: \"ol-interaction\", inputs: { handleEvent: [\"olHandleEvent\", \"handleEvent\"], active: [\"olActive\", \"active\"] }, outputs: { change$: \"olChange\", changeActive$: \"olChangeActive\", error$: \"olError\", propertychange$: \"olPropertychange\" }, exportAs: [\"olInteraction\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-interaction',\n                    exportAs: 'olInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { handleEvent: [{\n                type: Input,\n                args: ['olHandleEvent']\n            }], active: [{\n                type: Input,\n                args: ['olActive']\n            }], change$: [{\n                type: Output,\n                args: ['olChange']\n            }], changeActive$: [{\n                type: Output,\n                args: ['olChangeActive']\n            }], error$: [{\n                type: Output,\n                args: ['olError']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olPropertychange']\n            }] } });\n\nclass InteractionModule {\n}\nInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionModule, declarations: [InteractionComponent], imports: [CommonModule], exports: [InteractionComponent] });\nInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        InteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        InteractionComponent\n                    ]\n                }]\n        }] });\n\nclass PointerInteractionComponent extends InteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new PointerInteraction(this);\n            }\n            super.ngOnInit();\n        });\n    }\n}\nPointerInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nPointerInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: PointerInteractionComponent, selector: \"ol-pointer-interaction\", inputs: { handleDownEvent: [\"olHandleDownEvent\", \"handleDownEvent\"], handleDragEvent: [\"olHandleDragEvent\", \"handleDragEvent\"], handleMoveEvent: [\"olHandleMoveEvent\", \"handleMoveEvent\"], handleUpEvent: [\"olHandleUpEvent\", \"handleUpEvent\"], stopDown: [\"olStopDown\", \"stopDown\"] }, providers: [{\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => PointerInteractionComponent),\n            multi: true\n        }], exportAs: [\"olPointerInteraction\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-pointer-interaction',\n                    exportAs: 'olPointerInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => PointerInteractionComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { handleDownEvent: [{\n                type: Input,\n                args: ['olHandleDownEvent']\n            }], handleDragEvent: [{\n                type: Input,\n                args: ['olHandleDragEvent']\n            }], handleMoveEvent: [{\n                type: Input,\n                args: ['olHandleMoveEvent']\n            }], handleUpEvent: [{\n                type: Input,\n                args: ['olHandleUpEvent']\n            }], stopDown: [{\n                type: Input,\n                args: ['olStopDown']\n            }] } });\n\nclass PointerInteractionModule {\n}\nPointerInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPointerInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionModule, declarations: [PointerInteractionComponent], imports: [CommonModule], exports: [PointerInteractionComponent] });\nPointerInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        PointerInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        PointerInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass DrawInteractionComponent extends PointerInteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.drawabort$ = new EventEmitter();\n        this.drawend$ = new EventEmitter();\n        this.drawstart$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            const type = this.type;\n            this.instance = new Draw({ ...this, type });\n            this.instance.on('drawabort', (event) => this.drawabort$.emit(event));\n            this.instance.on('drawend', (event) => this.drawend$.emit(event));\n            this.instance.on('drawstart', (event) => this.drawstart$.emit(event));\n            super.ngOnInit();\n        });\n    }\n}\nDrawInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nDrawInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: DrawInteractionComponent, selector: \"ol-draw-interaction\", inputs: { type: [\"olType\", \"type\"], clickTolerance: [\"olClickTolerance\", \"clickTolerance\"], features: [\"olFeatures\", \"features\"], source: [\"olSource\", \"source\"], dragVertexDelay: [\"olDragVertexDelay\", \"dragVertexDelay\"], snapTolerance: [\"olSnapTolerance\", \"snapTolerance\"], stopClick: [\"olStopClick\", \"stopClick\"], maxPoints: [\"olMaxPoints\", \"maxPoints\"], minPoints: [\"olMinPoints\", \"minPoints\"], finishCondition: [\"olFinishCondition\", \"finishCondition\"], style: [\"olStyle\", \"style\"], geometryFunction: [\"olGeometryFunction\", \"geometryFunction\"], geometryName: [\"olGeometryName\", \"geometryName\"], condition: [\"olCondition\", \"condition\"], freehand: [\"olFreehand\", \"freehand\"], freehandCondition: [\"olFreehandCondition\", \"freehandCondition\"], wrapX: [\"olWrapX\", \"wrapX\"] }, outputs: { drawabort$: \"olDrawabort\", drawend$: \"olDrawend\", drawstart$: \"olDrawstart\" }, providers: [\n        {\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => DrawInteractionComponent),\n            multi: true\n        },\n        {\n            provide: PointerInteractionComponent,\n            useExisting: forwardRef(() => DrawInteractionComponent),\n            multi: true\n        }\n    ], exportAs: [\"olDrawInteraction\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-draw-interaction',\n                    exportAs: 'olDrawInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => DrawInteractionComponent),\n                            multi: true\n                        },\n                        {\n                            provide: PointerInteractionComponent,\n                            useExisting: forwardRef(() => DrawInteractionComponent),\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { type: [{\n                type: Input,\n                args: ['olType']\n            }], clickTolerance: [{\n                type: Input,\n                args: ['olClickTolerance']\n            }], features: [{\n                type: Input,\n                args: ['olFeatures']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], dragVertexDelay: [{\n                type: Input,\n                args: ['olDragVertexDelay']\n            }], snapTolerance: [{\n                type: Input,\n                args: ['olSnapTolerance']\n            }], stopClick: [{\n                type: Input,\n                args: ['olStopClick']\n            }], maxPoints: [{\n                type: Input,\n                args: ['olMaxPoints']\n            }], minPoints: [{\n                type: Input,\n                args: ['olMinPoints']\n            }], finishCondition: [{\n                type: Input,\n                args: ['olFinishCondition']\n            }], style: [{\n                type: Input,\n                args: ['olStyle']\n            }], geometryFunction: [{\n                type: Input,\n                args: ['olGeometryFunction']\n            }], geometryName: [{\n                type: Input,\n                args: ['olGeometryName']\n            }], condition: [{\n                type: Input,\n                args: ['olCondition']\n            }], freehand: [{\n                type: Input,\n                args: ['olFreehand']\n            }], freehandCondition: [{\n                type: Input,\n                args: ['olFreehandCondition']\n            }], wrapX: [{\n                type: Input,\n                args: ['olWrapX']\n            }], drawabort$: [{\n                type: Output,\n                args: ['olDrawabort']\n            }], drawend$: [{\n                type: Output,\n                args: ['olDrawend']\n            }], drawstart$: [{\n                type: Output,\n                args: ['olDrawstart']\n            }] } });\n\nclass DrawInteractionModule {\n}\nDrawInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDrawInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionModule, declarations: [DrawInteractionComponent], imports: [CommonModule], exports: [DrawInteractionComponent] });\nDrawInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        DrawInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        DrawInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass ModifyInteractionComponent extends PointerInteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.modifyend$ = new EventEmitter();\n        this.modifystart$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Modify(this);\n            this.instance.on('modifyend', (event) => this.modifyend$.emit(event));\n            this.instance.on('modifystart', (event) => this.modifystart$.emit(event));\n        });\n    }\n}\nModifyInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nModifyInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ModifyInteractionComponent, selector: \"ol-modify-interaction\", inputs: { condition: [\"olCondition\", \"condition\"], deleteCondition: [\"olCeleteCondition\", \"deleteCondition\"], insertVertexCondition: [\"olInsertVertexCondition\", \"insertVertexCondition\"], pixelTolerance: [\"olPixelTolerance\", \"pixelTolerance\"], style: [\"olStyle\", \"style\"], source: [\"olSource\", \"source\"], hitDetection: [\"olHitDetection\", \"hitDetection\"], features: [\"olFeatures\", \"features\"], wrapX: [\"olWrapX\", \"wrapX\"] }, outputs: { modifyend$: \"olModifyend\", modifystart$: \"olModifystart\" }, providers: [\n        {\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => ModifyInteractionComponent),\n            multi: true\n        },\n        {\n            provide: PointerInteractionComponent,\n            useExisting: forwardRef(() => ModifyInteractionComponent),\n            multi: true\n        }\n    ], exportAs: [\"olModifyInteraction\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-modify-interaction',\n                    exportAs: 'olModifyInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => ModifyInteractionComponent),\n                            multi: true\n                        },\n                        {\n                            provide: PointerInteractionComponent,\n                            useExisting: forwardRef(() => ModifyInteractionComponent),\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { condition: [{\n                type: Input,\n                args: ['olCondition']\n            }], deleteCondition: [{\n                type: Input,\n                args: ['olCeleteCondition']\n            }], insertVertexCondition: [{\n                type: Input,\n                args: ['olInsertVertexCondition']\n            }], pixelTolerance: [{\n                type: Input,\n                args: ['olPixelTolerance']\n            }], style: [{\n                type: Input,\n                args: ['olStyle']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], hitDetection: [{\n                type: Input,\n                args: ['olHitDetection']\n            }], features: [{\n                type: Input,\n                args: ['olFeatures']\n            }], wrapX: [{\n                type: Input,\n                args: ['olWrapX']\n            }], modifyend$: [{\n                type: Output,\n                args: ['olModifyend']\n            }], modifystart$: [{\n                type: Output,\n                args: ['olModifystart']\n            }] } });\n\nclass ModifyInteractionModule {\n}\nModifyInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nModifyInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionModule, declarations: [ModifyInteractionComponent], imports: [CommonModule], exports: [ModifyInteractionComponent] });\nModifyInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ModifyInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ModifyInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass PinchZoomInteractionComponent extends PointerInteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new PinchZoom(this);\n            super.ngOnInit();\n        });\n    }\n}\nPinchZoomInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nPinchZoomInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: PinchZoomInteractionComponent, selector: \"ol-pinch-zoom-interaction\", inputs: { duration: [\"olDuration\", \"duration\"] }, providers: [{\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => PinchZoomInteractionComponent),\n            multi: true\n        }], exportAs: [\"olPinchZoomInteraction\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-pinch-zoom-interaction',\n                    exportAs: 'olPinchZoomInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => PinchZoomInteractionComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { duration: [{\n                type: Input,\n                args: ['olDuration']\n            }] } });\n\nclass PinchZoomInteractionModule {\n}\nPinchZoomInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPinchZoomInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionModule, declarations: [PinchZoomInteractionComponent], imports: [CommonModule], exports: [PinchZoomInteractionComponent] });\nPinchZoomInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        PinchZoomInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        PinchZoomInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass SelectInteractionComponent extends InteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.select$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Select(this);\n            this.instance.on('select', (event) => this.select$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { hitTolerance, ...others } = changes;\n        if (this.instance) {\n            if (hitTolerance)\n                this.instance.setHitTolerance(hitTolerance.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nSelectInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nSelectInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: SelectInteractionComponent, selector: \"ol-select-interaction\", inputs: { addCondition: [\"olAddCondition\", \"addCondition\"], condition: [\"olCondition\", \"condition\"], layers: [\"olLayers\", \"layers\"], style: [\"olStyle\", \"style\"], removeCondition: [\"olRemoveCondition\", \"removeCondition\"], toggleCondition: [\"olToggleCondition\", \"toggleCondition\"], multi: [\"olMulti\", \"multi\"], features: [\"olFeatures\", \"features\"], filter: [\"olFilter\", \"filter\"], hitTolerance: [\"olHitTolerance\", \"hitTolerance\"] }, outputs: { select$: \"olSelect\" }, providers: [{\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => SelectInteractionComponent),\n            multi: true\n        }], exportAs: [\"olSelectInteraction\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-select-interaction',\n                    exportAs: 'olSelectInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => SelectInteractionComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { addCondition: [{\n                type: Input,\n                args: ['olAddCondition']\n            }], condition: [{\n                type: Input,\n                args: ['olCondition']\n            }], layers: [{\n                type: Input,\n                args: ['olLayers']\n            }], style: [{\n                type: Input,\n                args: ['olStyle']\n            }], removeCondition: [{\n                type: Input,\n                args: ['olRemoveCondition']\n            }], toggleCondition: [{\n                type: Input,\n                args: ['olToggleCondition']\n            }], multi: [{\n                type: Input,\n                args: ['olMulti']\n            }], features: [{\n                type: Input,\n                args: ['olFeatures']\n            }], filter: [{\n                type: Input,\n                args: ['olFilter']\n            }], hitTolerance: [{\n                type: Input,\n                args: ['olHitTolerance']\n            }], select$: [{\n                type: Output,\n                args: ['olSelect']\n            }] } });\n\nclass SelectInteractionModule {\n}\nSelectInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSelectInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionModule, declarations: [SelectInteractionComponent], imports: [CommonModule], exports: [SelectInteractionComponent] });\nSelectInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SelectInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        SelectInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass SnapInteractionComponent extends PointerInteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Snap(this);\n        });\n    }\n}\nSnapInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nSnapInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: SnapInteractionComponent, selector: \"ol-snap-interaction\", inputs: { features: [\"olFeatures\", \"features\"], edge: [\"olEdge\", \"edge\"], vertex: [\"olVertex\", \"vertex\"], pixelTolerance: [\"olPixelTolerance\", \"pixelTolerance\"], source: [\"olSource\", \"source\"] }, providers: [\n        {\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => SnapInteractionComponent),\n            multi: true\n        },\n        {\n            provide: PointerInteractionComponent,\n            useExisting: forwardRef(() => SnapInteractionComponent),\n            multi: true\n        }\n    ], exportAs: [\"olSnapInteraction\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-snap-interaction',\n                    exportAs: 'olSnapInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => SnapInteractionComponent),\n                            multi: true\n                        },\n                        {\n                            provide: PointerInteractionComponent,\n                            useExisting: forwardRef(() => SnapInteractionComponent),\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { features: [{\n                type: Input,\n                args: ['olFeatures']\n            }], edge: [{\n                type: Input,\n                args: ['olEdge']\n            }], vertex: [{\n                type: Input,\n                args: ['olVertex']\n            }], pixelTolerance: [{\n                type: Input,\n                args: ['olPixelTolerance']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }] } });\n\nclass SnapInteractionModule {\n}\nSnapInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSnapInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionModule, declarations: [SnapInteractionComponent], imports: [CommonModule], exports: [SnapInteractionComponent] });\nSnapInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SnapInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        SnapInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass SourceComponent {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.change$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.instance.on('change', (event) => this.change$.emit(event));\n        this.instance.on('error', (event) => this.error$.emit(event));\n        this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                if (key === 'attributions') {\n                    this.instance.setAttributions(val);\n                }\n                else if (key === 'state') {\n                    this.instance.setState(val);\n                }\n                else {\n                    properties[key] = val;\n                }\n            }\n        }\n        if (Object.keys(properties).length > 0) {\n            this.instance.setProperties(properties);\n        }\n    }\n}\nSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: SourceComponent, selector: \"ol-source\", inputs: { attributions: [\"olAttributions\", \"attributions\"], attributionsCollapsible: [\"olAttributionsCollapsible\", \"attributionsCollapsible\"], projection: [\"olProjection\", \"projection\"], state: [\"olState\", \"state\"], wrapX: [\"olWrapX\", \"wrapX\"] }, outputs: { change$: \"olOnChange\", error$: \"olOnError\", propertychange$: \"olOnPropertychange\" }, exportAs: [\"olSource\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-source',\n                    exportAs: 'olSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { attributions: [{\n                type: Input,\n                args: ['olAttributions']\n            }], attributionsCollapsible: [{\n                type: Input,\n                args: ['olAttributionsCollapsible']\n            }], projection: [{\n                type: Input,\n                args: ['olProjection']\n            }], state: [{\n                type: Input,\n                args: ['olState']\n            }], wrapX: [{\n                type: Input,\n                args: ['olWrapX']\n            }], change$: [{\n                type: Output,\n                args: ['olOnChange']\n            }], error$: [{\n                type: Output,\n                args: ['olOnError']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olOnPropertychange']\n            }] } });\n\nclass SourceModule {\n}\nSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceModule, declarations: [SourceComponent], imports: [CommonModule], exports: [SourceComponent] });\nSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        SourceComponent\n                    ]\n                }]\n        }] });\n\nclass ImageSourceComponent extends SourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.imageloadend$ = new EventEmitter();\n        this.imageloaderror$ = new EventEmitter();\n        this.imageloadstart$ = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this.instance) {\n            this.instance.on('imageloadend', (event) => this.imageloadend$.emit(event));\n            this.instance.on('imageloaderror', (event) => this.imageloaderror$.emit(event));\n            this.instance.on('imageloadstart', (event) => this.imageloadstart$.emit(event));\n        }\n        super.ngOnInit();\n    }\n}\nImageSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nImageSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ImageSourceComponent, selector: \"ol-image-source\", inputs: { imageSmoothing: [\"olImageSmoothing\", \"imageSmoothing\"], resolutions: [\"olResolutions\", \"resolutions\"] }, outputs: { imageloadend$: \"imageloadend\", imageloaderror$: \"imageloaderror\", imageloadstart$: \"imageloadstart\" }, exportAs: [\"olImageSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-image-source',\n                    exportAs: 'olImageSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { imageSmoothing: [{\n                type: Input,\n                args: ['olImageSmoothing']\n            }], resolutions: [{\n                type: Input,\n                args: ['olResolutions']\n            }], imageloadend$: [{\n                type: Output,\n                args: ['imageloadend']\n            }], imageloaderror$: [{\n                type: Output,\n                args: ['imageloaderror']\n            }], imageloadstart$: [{\n                type: Output,\n                args: ['imageloadstart']\n            }] } });\n\nclass ImageSourceModule {\n}\nImageSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nImageSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceModule, declarations: [ImageSourceComponent], imports: [CommonModule], exports: [ImageSourceComponent] });\nImageSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ImageSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ImageSourceComponent\n                    ]\n                }]\n        }] });\n\nclass BaseLayerComponent {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.change$ = new EventEmitter();\n        this.changeExtent$ = new EventEmitter();\n        this.changeMaxResolution$ = new EventEmitter();\n        this.changeMaxZoom$ = new EventEmitter();\n        this.changeMinResolution$ = new EventEmitter();\n        this.changeMinZoom$ = new EventEmitter();\n        this.changeOpacity$ = new EventEmitter();\n        this.changeSource$ = new EventEmitter();\n        this.changeVisible$ = new EventEmitter();\n        this.changeZIndex$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new BaseLayer(this);\n            }\n            this.instance.on('change', (event) => this.change$.emit(event));\n            this.instance.on('change:extent', (event) => this.changeExtent$.emit(event));\n            this.instance.on('change:maxResolution', (event) => this.changeMaxResolution$.emit(event));\n            this.instance.on('change:maxZoom', (event) => this.changeMaxZoom$.emit(event));\n            this.instance.on('change:minResolution', (event) => this.changeMinResolution$.emit(event));\n            this.instance.on('change:minZoom', (event) => this.changeMinZoom$.emit(event));\n            this.instance.on('change:opacity', (event) => this.changeOpacity$.emit(event));\n            this.instance.on('change:visible', (event) => this.changeVisible$.emit(event));\n            this.instance.on('change:zIndex', (event) => this.changeZIndex$.emit(event));\n            this.instance.on('error', (event) => this.error$.emit(event));\n            this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'extent':\n                        this.instance.setExtent(val);\n                        break;\n                    case 'maxResolution':\n                        this.instance.setMaxResolution(val);\n                        break;\n                    case 'maxZoom':\n                        this.instance.setMaxZoom(val);\n                        break;\n                    case 'minResolution':\n                        this.instance.setMinResolution(val);\n                        break;\n                    case 'minZoom':\n                        this.instance.setMinZoom(val);\n                        break;\n                    case 'opacity':\n                        this.instance.setOpacity(val);\n                        break;\n                    case 'visible':\n                        this.instance.setVisible(val);\n                        break;\n                    case 'zIndex':\n                        this.instance.setZIndex(val);\n                        break;\n                    default:\n                        properties[key] = val;\n                        break;\n                }\n            }\n        }\n        if (Object.keys(properties).length > 0) {\n            this.instance.setProperties(properties);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nBaseLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nBaseLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: BaseLayerComponent, selector: \"ol-base-layer\", inputs: { className: [\"olClassName\", \"className\"], opacity: [\"olOpacity\", \"opacity\"], visible: [\"olVisible\", \"visible\"], extent: [\"olExtent\", \"extent\"], zIndex: [\"olZIndex\", \"zIndex\"], minResolution: [\"olMinResolution\", \"minResolution\"], maxResolution: [\"olMaxResolution\", \"maxResolution\"], minZoom: [\"olMinZoom\", \"minZoom\"], maxZoom: [\"olMaxZoom\", \"maxZoom\"] }, outputs: { change$: \"olOnChange\", changeExtent$: \"olOnChangeExtent\", changeMaxResolution$: \"olOnChangeMaxResolution\", changeMaxZoom$: \"olOnChangeMaxZoom\", changeMinResolution$: \"olOnChangeMinResolution\", changeMinZoom$: \"olOnChangeMinZoom\", changeOpacity$: \"olOnChangeOpacity\", changeSource$: \"olOnChangeSource\", changeVisible$: \"olOnChangeVisible\", changeZIndex$: \"olOnChangeZIndex\", error$: \"olOnError\", propertychange$: \"olOnPropertychange\" }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => BaseLayerComponent),\n            multi: true\n        }], exportAs: [\"olBaseLayer\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-base-layer',\n                    exportAs: 'olBaseLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => BaseLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { className: [{\n                type: Input,\n                args: ['olClassName']\n            }], opacity: [{\n                type: Input,\n                args: ['olOpacity']\n            }], visible: [{\n                type: Input,\n                args: ['olVisible']\n            }], extent: [{\n                type: Input,\n                args: ['olExtent']\n            }], zIndex: [{\n                type: Input,\n                args: ['olZIndex']\n            }], minResolution: [{\n                type: Input,\n                args: ['olMinResolution']\n            }], maxResolution: [{\n                type: Input,\n                args: ['olMaxResolution']\n            }], minZoom: [{\n                type: Input,\n                args: ['olMinZoom']\n            }], maxZoom: [{\n                type: Input,\n                args: ['olMaxZoom']\n            }], change$: [{\n                type: Output,\n                args: ['olOnChange']\n            }], changeExtent$: [{\n                type: Output,\n                args: ['olOnChangeExtent']\n            }], changeMaxResolution$: [{\n                type: Output,\n                args: ['olOnChangeMaxResolution']\n            }], changeMaxZoom$: [{\n                type: Output,\n                args: ['olOnChangeMaxZoom']\n            }], changeMinResolution$: [{\n                type: Output,\n                args: ['olOnChangeMinResolution']\n            }], changeMinZoom$: [{\n                type: Output,\n                args: ['olOnChangeMinZoom']\n            }], changeOpacity$: [{\n                type: Output,\n                args: ['olOnChangeOpacity']\n            }], changeSource$: [{\n                type: Output,\n                args: ['olOnChangeSource']\n            }], changeVisible$: [{\n                type: Output,\n                args: ['olOnChangeVisible']\n            }], changeZIndex$: [{\n                type: Output,\n                args: ['olOnChangeZIndex']\n            }], error$: [{\n                type: Output,\n                args: ['olOnError']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olOnPropertychange']\n            }] } });\n\nclass BaseLayerModule {\n}\nBaseLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBaseLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerModule, declarations: [BaseLayerComponent], imports: [CommonModule], exports: [BaseLayerComponent] });\nBaseLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        BaseLayerComponent\n                    ],\n                    exports: [\n                        BaseLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });\n\nclass LayerComponent extends BaseLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.postrender$ = new EventEmitter();\n        this.prerender$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new Layer(this);\n            }\n            this.instance.on('postrender', (event) => this.postrender$.emit(event));\n            this.instance.on('prerender', (event) => this.prerender$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { source, map, ...others } = changes;\n        if (this.instance && source)\n            this.instance.setSource(source.currentValue);\n        if (this.instance && map)\n            this.instance.setMap(source.currentValue);\n        super.ngOnChanges(others);\n    }\n    ngAfterContentInit() {\n        this.sourceComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.sourceComponents), map((sources) => sources.last?.instance), distinctUntilChanged())\n            .subscribe(source => this.instance.setSource(source));\n    }\n}\nLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: LayerComponent, selector: \"ol-layer\", inputs: { source: [\"olSource\", \"source\"], map: [\"olMap\", \"map\"], render: [\"olRender\", \"render\"] }, outputs: { postrender$: \"olOnPostrender\", prerender$: \"olOnPrerender\" }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => LayerComponent),\n            multi: true\n        }], queries: [{ propertyName: \"sourceComponents\", predicate: SourceComponent }], exportAs: [\"olLayer\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-layer',\n                    exportAs: 'olLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => LayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { source: [{\n                type: Input,\n                args: ['olSource']\n            }], map: [{\n                type: Input,\n                args: ['olMap']\n            }], render: [{\n                type: Input,\n                args: ['olRender']\n            }], postrender$: [{\n                type: Output,\n                args: ['olOnPostrender']\n            }], prerender$: [{\n                type: Output,\n                args: ['olOnPrerender']\n            }], sourceComponents: [{\n                type: ContentChildren,\n                args: [SourceComponent]\n            }] } });\n\nclass LayerModule {\n}\nLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerModule, declarations: [LayerComponent], imports: [CommonModule], exports: [LayerComponent] });\nLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        LayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        LayerComponent\n                    ]\n                }]\n        }] });\n\nclass BaseImageLayerComponent extends LayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        if (!this.instance) {\n            this.ngZone.runOutsideAngular(() => this.instance = new BaseImageLayer(this));\n        }\n        super.ngOnInit();\n    }\n}\nBaseImageLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nBaseImageLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: BaseImageLayerComponent, selector: \"ol-base-image-layer\", inputs: { source: [\"olSource\", \"source\"] }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => BaseImageLayerComponent),\n            multi: true\n        }], queries: [{ propertyName: \"sources\", predicate: ImageSourceComponent }], exportAs: [\"olBaseImageLayer\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-base-image-layer',\n                    exportAs: 'olBaseImageLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => BaseImageLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { source: [{\n                type: Input,\n                args: ['olSource']\n            }], sources: [{\n                type: ContentChildren,\n                args: [ImageSourceComponent]\n            }] } });\n\nclass BaseImageLayerModule {\n}\nBaseImageLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBaseImageLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerModule, declarations: [BaseImageLayerComponent], imports: [CommonModule], exports: [BaseImageLayerComponent] });\nBaseImageLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        BaseImageLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        BaseImageLayerComponent\n                    ]\n                }]\n        }] });\n\nclass TileSourceComponent extends SourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n}\nTileSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nTileSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: TileSourceComponent, selector: \"ol-tile-source\", inputs: { cacheSize: \"cacheSize\", opaque: \"opaque\", tilePixelRatio: \"tilePixelRatio\", tileGrid: \"tileGrid\", transition: \"transition\", key: \"key\", zDirection: \"zDirection\" }, exportAs: [\"olTileSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-tile-source',\n                    exportAs: 'olTileSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { cacheSize: [{\n                type: Input\n            }], opaque: [{\n                type: Input\n            }], tilePixelRatio: [{\n                type: Input\n            }], tileGrid: [{\n                type: Input\n            }], transition: [{\n                type: Input\n            }], key: [{\n                type: Input\n            }], zDirection: [{\n                type: Input\n            }] } });\n\nclass TileSourceModule {\n}\nTileSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTileSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceModule, declarations: [TileSourceComponent], imports: [CommonModule], exports: [TileSourceComponent] });\nTileSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TileSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        TileSourceComponent\n                    ]\n                }]\n        }] });\n\nclass BaseTileLayerComponent extends LayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.changePreload$ = new EventEmitter();\n        this.changeUseInterimTilesOnError$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new BaseTileLayer(this);\n            }\n            this.instance.on('change:preload', (event) => this.changePreload$.emit(event));\n            this.instance.on('change:useInterimTilesOnError', (event) => this.changeUseInterimTilesOnError$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { preload, useInterimTilesOnError, ...others } = changes;\n        if (this.instance && preload)\n            this.instance.setPreload(preload.currentValue);\n        if (this.instance && useInterimTilesOnError)\n            this.instance.setUseInterimTilesOnError(useInterimTilesOnError.currentValue);\n        super.ngOnChanges(others);\n    }\n}\nBaseTileLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nBaseTileLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: BaseTileLayerComponent, selector: \"ol-base-tile-layer\", inputs: { preload: [\"olPreload\", \"preload\"], source: [\"olSource\", \"source\"], useInterimTilesOnError: [\"olUseInterimTilesOnError\", \"useInterimTilesOnError\"] }, outputs: { changePreload$: \"olOnChangePreload\", changeUseInterimTilesOnError$: \"olOnChangeUseInterimTilesOnError\" }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => BaseTileLayerComponent),\n            multi: true\n        }], queries: [{ propertyName: \"sourceComponents\", predicate: TileSourceComponent }], exportAs: [\"olBaseTileLayer\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-base-tile-layer',\n                    exportAs: 'olBaseTileLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => BaseTileLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { preload: [{\n                type: Input,\n                args: ['olPreload']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], useInterimTilesOnError: [{\n                type: Input,\n                args: ['olUseInterimTilesOnError']\n            }], changePreload$: [{\n                type: Output,\n                args: ['olOnChangePreload']\n            }], changeUseInterimTilesOnError$: [{\n                type: Output,\n                args: ['olOnChangeUseInterimTilesOnError']\n            }], sourceComponents: [{\n                type: ContentChildren,\n                args: [TileSourceComponent]\n            }] } });\n\nclass BaseTileLayerModule {\n}\nBaseTileLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBaseTileLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerModule, declarations: [BaseTileLayerComponent], imports: [CommonModule], exports: [BaseTileLayerComponent] });\nBaseTileLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        BaseTileLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        BaseTileLayerComponent\n                    ]\n                }]\n        }] });\n\nclass VectorSourceComponent extends SourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.addfeature$ = new EventEmitter();\n        this.changefeature$ = new EventEmitter();\n        this.clear$ = new EventEmitter();\n        this.featuresloadend$ = new EventEmitter();\n        this.featuresloaderror$ = new EventEmitter();\n        this.featuresloadstart$ = new EventEmitter();\n        this.removefeature$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new VectorSource(this);\n            }\n            this.instance.on('addfeature', (event) => this.addfeature$.emit(event));\n            this.instance.on('changefeature', (event) => this.changefeature$.emit(event));\n            this.instance.on('clear', (event) => this.clear$.emit(event));\n            this.instance.on('featuresloadend', (event) => this.featuresloadend$.emit(event));\n            this.instance.on('featuresloaderror', (event) => this.featuresloaderror$.emit(event));\n            this.instance.on('featuresloadstart', (event) => this.featuresloadstart$.emit(event));\n            this.instance.on('removefeature', (event) => this.removefeature$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { loader, url, features, ...others } = changes;\n        if (this.instance) {\n            if (loader)\n                this.instance.setLoader(loader.currentValue);\n            if (url)\n                this.instance.setUrl(url.currentValue);\n            if (features) {\n                this.instance.clear();\n                this.instance.addFeatures(features.currentValue);\n            }\n        }\n        super.ngOnChanges(others);\n    }\n}\nVectorSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nVectorSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: VectorSourceComponent, selector: \"ol-vector-source\", inputs: { features: [\"olFeatures\", \"features\"], format: [\"olFormat\", \"format\"], loader: [\"olLoader\", \"loader\"], overlaps: [\"olOverlaps\", \"overlaps\"], strategy: [\"olStrategy\", \"strategy\"], url: [\"olUrl\", \"url\"], useSpatialIndex: [\"olUseSpatialIndex\", \"useSpatialIndex\"] }, outputs: { addfeature$: \"olOnAddfeature\", changefeature$: \"olOnChangefeature\", clear$: \"olOnClear\", featuresloadend$: \"olOnFeaturesloadend\", featuresloaderror$: \"olOnFeaturesloaderror\", featuresloadstart$: \"olOnFeaturesloadstart\", removefeature$: \"olOnRemovefeature\" }, exportAs: [\"olVectorSource\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-vector-source',\n                    exportAs: 'olVectorSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { features: [{\n                type: Input,\n                args: ['olFeatures']\n            }], format: [{\n                type: Input,\n                args: ['olFormat']\n            }], loader: [{\n                type: Input,\n                args: ['olLoader']\n            }], overlaps: [{\n                type: Input,\n                args: ['olOverlaps']\n            }], strategy: [{\n                type: Input,\n                args: ['olStrategy']\n            }], url: [{\n                type: Input,\n                args: ['olUrl']\n            }], useSpatialIndex: [{\n                type: Input,\n                args: ['olUseSpatialIndex']\n            }], addfeature$: [{\n                type: Output,\n                args: ['olOnAddfeature']\n            }], changefeature$: [{\n                type: Output,\n                args: ['olOnChangefeature']\n            }], clear$: [{\n                type: Output,\n                args: ['olOnClear']\n            }], featuresloadend$: [{\n                type: Output,\n                args: ['olOnFeaturesloadend']\n            }], featuresloaderror$: [{\n                type: Output,\n                args: ['olOnFeaturesloaderror']\n            }], featuresloadstart$: [{\n                type: Output,\n                args: ['olOnFeaturesloadstart']\n            }], removefeature$: [{\n                type: Output,\n                args: ['olOnRemovefeature']\n            }] } });\n\nclass VectorSourceModule {\n}\nVectorSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVectorSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceModule, declarations: [VectorSourceComponent], imports: [CommonModule], exports: [VectorSourceComponent] });\nVectorSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        VectorSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        VectorSourceComponent\n                    ]\n                }]\n        }] });\n\nclass StyleComponent {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Style(this);\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'geometry':\n                        this.instance.setGeometry(val);\n                        break;\n                    case 'fill':\n                        this.instance.setFill(val);\n                        break;\n                    case 'image':\n                        this.instance.setImage(val);\n                        break;\n                    case 'renderer':\n                        this.instance.setRenderer(val);\n                        break;\n                    case 'stroke':\n                        this.instance.setStroke(val);\n                        break;\n                    case 'text':\n                        this.instance.setText(val);\n                        break;\n                    case 'zIndex':\n                        this.instance.setZIndex(val);\n                        break;\n                }\n            }\n        }\n    }\n}\nStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: StyleComponent, selector: \"ol-style\", inputs: { geometry: [\"olGeometry\", \"geometry\"], fill: [\"olFill\", \"fill\"], image: [\"olImage\", \"image\"], renderer: [\"olRenderer\", \"renderer\"], stroke: [\"olStroke\", \"stroke\"], text: [\"olText\", \"text\"], zIndex: [\"olZIndex\", \"zIndex\"] }, exportAs: [\"olStyle\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-style',\n                    exportAs: 'olStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { geometry: [{\n                type: Input,\n                args: ['olGeometry']\n            }], fill: [{\n                type: Input,\n                args: ['olFill']\n            }], image: [{\n                type: Input,\n                args: ['olImage']\n            }], renderer: [{\n                type: Input,\n                args: ['olRenderer']\n            }], stroke: [{\n                type: Input,\n                args: ['olStroke']\n            }], text: [{\n                type: Input,\n                args: ['olText']\n            }], zIndex: [{\n                type: Input,\n                args: ['olZIndex']\n            }] } });\n\nclass StyleModule {\n}\nStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleModule, declarations: [StyleComponent], imports: [CommonModule], exports: [StyleComponent] });\nStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        StyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        StyleComponent\n                    ]\n                }]\n        }] });\n\nclass BaseVectorLayerComponent extends LayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new BaseVectorLayer(this);\n            }\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { style, ...others } = changes;\n        if (this.instance && style) {\n            this.instance.setStyle(style.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n    ngAfterContentInit() {\n        this.styles.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.styles), map((styles) => styles.map(s => s.instance)), map((styles) => styles && styles.length ? styles : this.style), distinctUntilChanged())\n            .subscribe(styles => this.instance.setStyle(styles));\n        super.ngAfterContentInit();\n    }\n}\nBaseVectorLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nBaseVectorLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: BaseVectorLayerComponent, selector: \"ol-base-vector-layer\", inputs: { renderOrder: [\"olRenderOrder\", \"renderOrder\"], renderBuffer: [\"olRenderBuffer\", \"renderBuffer\"], source: [\"olSource\", \"source\"], declutter: [\"olDeclutter\", \"declutter\"], style: [\"olStyle\", \"style\"], updateWhileAnimating: [\"olUpdateWhileAnimating\", \"updateWhileAnimating\"], updateWhileInteracting: [\"olUpdateWhileInteracting\", \"updateWhileInteracting\"] }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => BaseVectorLayerComponent),\n            multi: true\n        }], queries: [{ propertyName: \"sources\", predicate: VectorSourceComponent }, { propertyName: \"styles\", predicate: StyleComponent }], exportAs: [\"olBaseVectorLayer\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-base-vector-layer',\n                    exportAs: 'olBaseVectorLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => BaseVectorLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { renderOrder: [{\n                type: Input,\n                args: ['olRenderOrder']\n            }], renderBuffer: [{\n                type: Input,\n                args: ['olRenderBuffer']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], declutter: [{\n                type: Input,\n                args: ['olDeclutter']\n            }], style: [{\n                type: Input,\n                args: ['olStyle']\n            }], updateWhileAnimating: [{\n                type: Input,\n                args: ['olUpdateWhileAnimating']\n            }], updateWhileInteracting: [{\n                type: Input,\n                args: ['olUpdateWhileInteracting']\n            }], sources: [{\n                type: ContentChildren,\n                args: [VectorSourceComponent]\n            }], styles: [{\n                type: ContentChildren,\n                args: [StyleComponent]\n            }] } });\n\nclass BaseVectorLayerModule {\n}\nBaseVectorLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBaseVectorLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerModule, declarations: [BaseVectorLayerComponent], imports: [CommonModule], exports: [BaseVectorLayerComponent] });\nBaseVectorLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        BaseVectorLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        BaseVectorLayerComponent\n                    ]\n                }]\n        }] });\n\nclass GroupLayerComponent extends BaseLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.changeLayers$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new GroupLayer(this);\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { layers, ...others } = changes;\n        if (this.instance && layers)\n            this.instance.setLayers(layers.currentValue);\n        super.ngOnChanges(others);\n    }\n    ngAfterContentInit() {\n        this.layerComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.layerComponents), map((components) => components.map(c => c.instance)), distinctUntilChanged())\n            .subscribe(layers => {\n            const collection = this.instance.getLayers();\n            collection.clear();\n            collection.extend(layers);\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nGroupLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nGroupLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: GroupLayerComponent, selector: \"ol-group-layer\", inputs: { layers: [\"olLayers\", \"layers\"] }, outputs: { changeLayers$: \"olOnChangeLayers\" }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => GroupLayerComponent),\n            multi: true\n        }], queries: [{ propertyName: \"layerComponents\", predicate: LAYER_PROVIDER }], exportAs: [\"olGroupLayer\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-group-layer',\n                    exportAs: 'olGroupLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => GroupLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { layers: [{\n                type: Input,\n                args: ['olLayers']\n            }], changeLayers$: [{\n                type: Output,\n                args: ['olOnChangeLayers']\n            }], layerComponents: [{\n                type: ContentChildren,\n                args: [LAYER_PROVIDER]\n            }] } });\n\nclass GroupLayerModule {\n}\nGroupLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGroupLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerModule, declarations: [GroupLayerComponent], imports: [CommonModule], exports: [GroupLayerComponent] });\nGroupLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        GroupLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        GroupLayerComponent\n                    ]\n                }]\n        }] });\n\nclass ImageLayerComponent extends BaseImageLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => this.instance = new ImageLayer(this));\n        super.ngOnInit();\n    }\n}\nImageLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nImageLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ImageLayerComponent, selector: \"ol-image-layer\", providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => ImageLayerComponent),\n            multi: true\n        }, {\n            provide: BaseImageLayerComponent,\n            useExisting: forwardRef(() => ImageLayerComponent),\n            multi: false\n        }], exportAs: [\"olImageLayer\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-image-layer',\n                    exportAs: 'olImageLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => ImageLayerComponent),\n                            multi: true\n                        }, {\n                            provide: BaseImageLayerComponent,\n                            useExisting: forwardRef(() => ImageLayerComponent),\n                            multi: false\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\nclass ImageLayerModule {\n}\nImageLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nImageLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerModule, declarations: [ImageLayerComponent], imports: [CommonModule], exports: [ImageLayerComponent] });\nImageLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ImageLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ImageLayerComponent\n                    ]\n                }]\n        }] });\n\nclass TileLayerComponent extends BaseTileLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new TileLayer(this);\n            super.ngOnInit();\n        });\n    }\n}\nTileLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nTileLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: TileLayerComponent, selector: \"ol-tile-layer\", providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => TileLayerComponent),\n            multi: true\n        }, {\n            provide: BaseTileLayerComponent,\n            useExisting: forwardRef(() => TileLayerComponent),\n            multi: false\n        }], exportAs: [\"olTileLayer\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-tile-layer',\n                    exportAs: 'olTileLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => TileLayerComponent),\n                            multi: true\n                        }, {\n                            provide: BaseTileLayerComponent,\n                            useExisting: forwardRef(() => TileLayerComponent),\n                            multi: false\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\nclass TileLayerModule {\n}\nTileLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTileLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerModule, declarations: [TileLayerComponent], imports: [CommonModule], exports: [TileLayerComponent] });\nTileLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TileLayerComponent\n                    ],\n                    exports: [\n                        TileLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });\n\nclass VectorLayerComponent extends BaseVectorLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new VectorLayer(this);\n            }\n            super.ngOnInit();\n        });\n    }\n}\nVectorLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nVectorLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: VectorLayerComponent, selector: \"ol-vector-layer\", providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => VectorLayerComponent),\n            multi: true\n        }], exportAs: [\"olVectorLayer\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-vector-layer',\n                    exportAs: 'olVectorLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => VectorLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\nclass VectorLayerModule {\n}\nVectorLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVectorLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerModule, declarations: [VectorLayerComponent], imports: [CommonModule], exports: [VectorLayerComponent] });\nVectorLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        VectorLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        VectorLayerComponent\n                    ]\n                }]\n        }] });\n\nclass UrlTileSourceComponent extends TileSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.tileloadend$ = new EventEmitter();\n        this.tileloaderror$ = new EventEmitter();\n        this.tileloadstart$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new UrlTile(this);\n            }\n            this.instance.on('tileloadend', (event) => this.tileloadend$.emit(event));\n            this.instance.on('tileloaderror', (event) => this.tileloaderror$.emit(event));\n            this.instance.on('tileloadstart', (event) => this.tileloadstart$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { tileLoadFunction, tileUrlFunction, url, urls, ...others } = changes;\n        if (this.instance) {\n            if (tileLoadFunction)\n                this.instance.setTileLoadFunction(tileLoadFunction.currentValue);\n            if (tileUrlFunction)\n                this.instance.setTileUrlFunction(tileUrlFunction.currentValue);\n            if (url)\n                this.instance.setUrl(url.currentValue);\n            if (urls)\n                this.instance.setUrls(urls.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nUrlTileSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nUrlTileSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: UrlTileSourceComponent, selector: \"ol-url-tile-source\", inputs: { tileLoadFunction: [\"olTileLoadFunction\", \"tileLoadFunction\"], tileUrlFunction: [\"olTileUrlFunction\", \"tileUrlFunction\"], url: [\"olUrl\", \"url\"], urls: [\"olUrls\", \"urls\"] }, outputs: { tileloadend$: \"olOnTileloadend\", tileloaderror$: \"olOnTileloaderror\", tileloadstart$: \"olOnTileloadstart\" }, exportAs: [\"olUrlTileSource\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-url-tile-source',\n                    exportAs: 'olUrlTileSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { tileLoadFunction: [{\n                type: Input,\n                args: ['olTileLoadFunction']\n            }], tileUrlFunction: [{\n                type: Input,\n                args: ['olTileUrlFunction']\n            }], url: [{\n                type: Input,\n                args: ['olUrl']\n            }], urls: [{\n                type: Input,\n                args: ['olUrls']\n            }], tileloadend$: [{\n                type: Output,\n                args: ['olOnTileloadend']\n            }], tileloaderror$: [{\n                type: Output,\n                args: ['olOnTileloaderror']\n            }], tileloadstart$: [{\n                type: Output,\n                args: ['olOnTileloadstart']\n            }] } });\n\nclass UrlTileSourceModule {\n}\nUrlTileSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nUrlTileSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceModule, declarations: [UrlTileSourceComponent], imports: [CommonModule], exports: [UrlTileSourceComponent] });\nUrlTileSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        UrlTileSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        UrlTileSourceComponent\n                    ]\n                }]\n        }] });\n\nclass VectorTileSourceComponent extends UrlTileSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new VectorTile(this);\n            }\n            super.ngOnInit();\n        });\n    }\n}\nVectorTileSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nVectorTileSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: VectorTileSourceComponent, selector: \"ol-vector-tile-source\", inputs: { extent: [\"olExtent\", \"extent\"], format: [\"olFormat\", \"format\"], overlaps: [\"olOverlaps\", \"overlaps\"], tileClass: [\"olTileClass\", \"tileClass\"], maxZoom: [\"olMaxZoom\", \"maxZoom\"], minZoom: [\"olMinZoom\", \"minZoom\"], tileSize: [\"olTileSize\", \"tileSize\"], maxResolution: [\"olMaxResolution\", \"maxResolution\"] }, exportAs: [\"olVectorTileSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-vector-tile-source',\n                    exportAs: 'olVectorTileSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { extent: [{\n                type: Input,\n                args: ['olExtent']\n            }], format: [{\n                type: Input,\n                args: ['olFormat']\n            }], overlaps: [{\n                type: Input,\n                args: ['olOverlaps']\n            }], tileClass: [{\n                type: Input,\n                args: ['olTileClass']\n            }], maxZoom: [{\n                type: Input,\n                args: ['olMaxZoom']\n            }], minZoom: [{\n                type: Input,\n                args: ['olMinZoom']\n            }], tileSize: [{\n                type: Input,\n                args: ['olTileSize']\n            }], maxResolution: [{\n                type: Input,\n                args: ['olMaxResolution']\n            }] } });\n\nclass VectorTileSourceModule {\n}\nVectorTileSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVectorTileSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceModule, declarations: [VectorTileSourceComponent], imports: [CommonModule], exports: [VectorTileSourceComponent] });\nVectorTileSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        VectorTileSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        VectorTileSourceComponent\n                    ]\n                }]\n        }] });\n\nclass VectorTileLayerComponent extends BaseVectorLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.onPreload$ = new EventEmitter();\n        this.onUseInterimTilesOnError$ = new EventEmitter();\n    }\n    ngOnInit() {\n        super.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new VectorTileLayer(this);\n            }\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { preload, useInterimTilesOnError, ...others } = changes;\n        if (this.instance) {\n            if (preload)\n                this.instance.setPreload(preload.currentValue);\n            if (useInterimTilesOnError)\n                this.instance.setUseInterimTilesOnError(useInterimTilesOnError.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nVectorTileLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nVectorTileLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: VectorTileLayerComponent, selector: \"ol-vector-tile-layer\", inputs: { renderMode: [\"olRenderMode\", \"renderMode\"], source: [\"olSource\", \"source\"], preload: [\"olPreload\", \"preload\"], useInterimTilesOnError: [\"olUseInterimTilesOnError\", \"useInterimTilesOnError\"] }, outputs: { onPreload$: \"olOnPreload\", onUseInterimTilesOnError$: \"olOnUseInterimTilesOnError\" }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => VectorTileLayerComponent),\n            multi: true\n        }, {\n            provide: BaseVectorLayerComponent,\n            useExisting: forwardRef(() => VectorTileLayerComponent),\n            multi: false\n        }], queries: [{ propertyName: \"sources\", predicate: VectorTileSourceComponent }], exportAs: [\"olVectorTileLayer\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-vector-tile-layer',\n                    exportAs: 'olVectorTileLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => VectorTileLayerComponent),\n                            multi: true\n                        }, {\n                            provide: BaseVectorLayerComponent,\n                            useExisting: forwardRef(() => VectorTileLayerComponent),\n                            multi: false\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { renderMode: [{\n                type: Input,\n                args: ['olRenderMode']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], preload: [{\n                type: Input,\n                args: ['olPreload']\n            }], useInterimTilesOnError: [{\n                type: Input,\n                args: ['olUseInterimTilesOnError']\n            }], onPreload$: [{\n                type: Output,\n                args: ['olOnPreload']\n            }], onUseInterimTilesOnError$: [{\n                type: Output,\n                args: ['olOnUseInterimTilesOnError']\n            }], sources: [{\n                type: ContentChildren,\n                args: [VectorTileSourceComponent]\n            }] } });\n\nclass VectorTileLayerModule {\n}\nVectorTileLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVectorTileLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerModule, declarations: [VectorTileLayerComponent], imports: [CommonModule], exports: [VectorTileLayerComponent] });\nVectorTileLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        VectorTileLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        VectorTileLayerComponent\n                    ]\n                }]\n        }] });\n\nclass DataTileSourceComponent extends TileSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.tileloadend$ = new EventEmitter();\n        this.tileloaderror$ = new EventEmitter();\n        this.tileloadstart$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new DataTileSource(this);\n            }\n            this.instance.on('tileloadend', (event) => this.tileloadend$.emit(event));\n            this.instance.on('tileloaderror', (event) => this.tileloaderror$.emit(event));\n            this.instance.on('tileloadstart', (event) => this.tileloadstart$.emit(event));\n            super.ngOnInit();\n        });\n    }\n}\nDataTileSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nDataTileSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: DataTileSourceComponent, selector: \"ol-data-tile-source\", inputs: { loader: [\"olLoader\", \"loader\"], maxZoom: [\"olMaxZoom\", \"maxZoom\"], minZoom: [\"olMinZoom\", \"minZoom\"], tileSize: [\"olTileSize\", \"tileSize\"], maxResolution: [\"olMaxResolution\", \"maxResolution\"], bandCount: [\"olBandCount\", \"bandCount\"] }, outputs: { tileloadend$: \"olTileloadend\", tileloaderror$: \"olTileloaderror\", tileloadstart$: \"olTileloadstart\" }, exportAs: [\"olDataTileSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-data-tile-source',\n                    exportAs: 'olDataTileSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { loader: [{\n                type: Input,\n                args: ['olLoader']\n            }], maxZoom: [{\n                type: Input,\n                args: ['olMaxZoom']\n            }], minZoom: [{\n                type: Input,\n                args: ['olMinZoom']\n            }], tileSize: [{\n                type: Input,\n                args: ['olTileSize']\n            }], maxResolution: [{\n                type: Input,\n                args: ['olMaxResolution']\n            }], bandCount: [{\n                type: Input,\n                args: ['olBandCount']\n            }], tileloadend$: [{\n                type: Output,\n                args: ['olTileloadend']\n            }], tileloaderror$: [{\n                type: Output,\n                args: ['olTileloaderror']\n            }], tileloadstart$: [{\n                type: Output,\n                args: ['olTileloadstart']\n            }] } });\n\nclass DataTileSourceModule {\n}\nDataTileSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDataTileSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceModule, declarations: [DataTileSourceComponent], imports: [CommonModule], exports: [DataTileSourceComponent] });\nDataTileSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        DataTileSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        DataTileSourceComponent\n                    ]\n                }]\n        }] });\n\nclass GeoTIFFSourceComponent extends DataTileSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.sources = [];\n        this.convertToRGB = false;\n        this.normalize = true;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new GeoTIFFSource(this);\n            super.ngOnInit();\n        });\n    }\n}\nGeoTIFFSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nGeoTIFFSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: GeoTIFFSourceComponent, selector: \"ol-geo-tiff-source\", inputs: { sources: [\"olSources\", \"sources\"], convertToRGB: [\"olConvertToRGB\", \"convertToRGB\"], normalize: [\"olNormalize\", \"normalize\"] }, exportAs: [\"olGeoTIFFSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-geo-tiff-source',\n                    exportAs: 'olGeoTIFFSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { sources: [{\n                type: Input,\n                args: ['olSources']\n            }], convertToRGB: [{\n                type: Input,\n                args: ['olConvertToRGB']\n            }], normalize: [{\n                type: Input,\n                args: ['olNormalize']\n            }] } });\n\nclass GeoTIFFSourceModule {\n}\nGeoTIFFSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGeoTIFFSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceModule, declarations: [GeoTIFFSourceComponent], imports: [CommonModule], exports: [GeoTIFFSourceComponent] });\nGeoTIFFSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        GeoTIFFSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        GeoTIFFSourceComponent\n                    ]\n                }]\n        }] });\n\nclass WebGLTileLayerComponent extends BaseTileLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new WebGLTileLayer(this);\n            super.ngOnInit();\n        });\n    }\n}\nWebGLTileLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nWebGLTileLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: WebGLTileLayerComponent, selector: \"ol-webgl-tile-layer\", inputs: { style: [\"olStyle\", \"style\"], cacheSize: [\"olCacheSize\", \"cacheSize\"], sources: [\"olSources\", \"sources\"] }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => WebGLTileLayerComponent),\n            multi: true\n        }, {\n            provide: BaseTileLayerComponent,\n            useExisting: forwardRef(() => WebGLTileLayerComponent),\n            multi: false\n        }], queries: [{ propertyName: \"sourceComponents\", predicate: GeoTIFFSourceComponent }], exportAs: [\"olWebGLTileLayer\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-webgl-tile-layer',\n                    exportAs: 'olWebGLTileLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => WebGLTileLayerComponent),\n                            multi: true\n                        }, {\n                            provide: BaseTileLayerComponent,\n                            useExisting: forwardRef(() => WebGLTileLayerComponent),\n                            multi: false\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { style: [{\n                type: Input,\n                args: ['olStyle']\n            }], cacheSize: [{\n                type: Input,\n                args: ['olCacheSize']\n            }], sources: [{\n                type: Input,\n                args: ['olSources']\n            }], sourceComponents: [{\n                type: ContentChildren,\n                args: [GeoTIFFSourceComponent]\n            }] } });\n\nclass WebGLTileLayerModule {\n}\nWebGLTileLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nWebGLTileLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerModule, declarations: [WebGLTileLayerComponent], imports: [CommonModule], exports: [WebGLTileLayerComponent] });\nWebGLTileLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        WebGLTileLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        WebGLTileLayerComponent\n                    ]\n                }]\n        }] });\n\nclass OverlayContentDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nOverlayContentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayContentDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nOverlayContentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.11\", type: OverlayContentDirective, selector: \"[olOverlayContent]\", exportAs: [\"olOverlayContent\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayContentDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[olOverlayContent]',\n                    exportAs: 'olOverlayContent'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass OverlayComponent {\n    constructor(cfr, appRef, viewContainerRef, injector) {\n        this.cfr = cfr;\n        this.appRef = appRef;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n    }\n    ngAfterViewInit() {\n        const element = this.element || document.createElement('div');\n        const portalOutlet = new DomPortalOutlet(element, this.cfr, this.appRef, this.injector);\n        const portal = new TemplatePortal(this.content, this.viewContainerRef);\n        const componentRef = portalOutlet.attach(portal);\n        this.instance = new Overlay({ ...this, element });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'element':\n                        this.instance.setElement(val);\n                        break;\n                    case 'offset':\n                        this.instance.setOffset(val);\n                        break;\n                    case 'position':\n                        this.instance.setPosition(val);\n                        break;\n                    case 'positioning':\n                        this.instance.setPositioning(val);\n                        break;\n                    default:\n                        properties[key] = val;\n                        break;\n                }\n            }\n        }\n        if (Object.keys(properties).length > 0) {\n            this.instance.setProperties(properties);\n        }\n    }\n}\nOverlayComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayComponent, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.ViewContainerRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nOverlayComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: OverlayComponent, selector: \"ol-overlay\", inputs: { id: [\"olId\", \"id\"], element: [\"olElement\", \"element\"], offset: [\"olOffset\", \"offset\"], position: [\"olPosition\", \"position\"], positioning: [\"olPositioning\", \"positioning\"], stopEvent: [\"olStopEvent\", \"stopEvent\"], insertFirst: [\"olInsertFirst\", \"insertFirst\"], autoPan: [\"olAutoPan\", \"autoPan\"], autoPanAnimation: [\"olAutoPanAnimation\", \"autoPanAnimation\"], autoPanMargin: [\"olAutoPanMargin\", \"autoPanMargin\"], autoPanOptions: [\"olAutoPanOptions\", \"autoPanOptions\"], className: [\"olClassName\", \"className\"] }, queries: [{ propertyName: \"content\", first: true, predicate: OverlayContentDirective, descendants: true, read: TemplateRef, static: true }], exportAs: [\"olOverlay\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-overlay',\n                    exportAs: 'olOverlay',\n                    template: `<ng-content></ng-content>`,\n                    styles: [],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.ViewContainerRef }, { type: i0.Injector }]; }, propDecorators: { id: [{\n                type: Input,\n                args: ['olId']\n            }], element: [{\n                type: Input,\n                args: ['olElement']\n            }], offset: [{\n                type: Input,\n                args: ['olOffset']\n            }], position: [{\n                type: Input,\n                args: ['olPosition']\n            }], positioning: [{\n                type: Input,\n                args: ['olPositioning']\n            }], stopEvent: [{\n                type: Input,\n                args: ['olStopEvent']\n            }], insertFirst: [{\n                type: Input,\n                args: ['olInsertFirst']\n            }], autoPan: [{\n                type: Input,\n                args: ['olAutoPan']\n            }], autoPanAnimation: [{\n                type: Input,\n                args: ['olAutoPanAnimation']\n            }], autoPanMargin: [{\n                type: Input,\n                args: ['olAutoPanMargin']\n            }], autoPanOptions: [{\n                type: Input,\n                args: ['olAutoPanOptions']\n            }], className: [{\n                type: Input,\n                args: ['olClassName']\n            }], content: [{\n                type: ContentChild,\n                args: [OverlayContentDirective, { static: true, read: TemplateRef }]\n            }] } });\n\nclass OverlayModule {\n}\nOverlayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOverlayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayModule, declarations: [OverlayComponent,\n        OverlayContentDirective], imports: [CommonModule], exports: [OverlayComponent,\n        OverlayContentDirective] });\nOverlayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        OverlayComponent,\n                        OverlayContentDirective\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        OverlayComponent,\n                        OverlayContentDirective\n                    ]\n                }]\n        }] });\n\nclass MapComponent {\n    constructor(elementRef, ngZone) {\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.width = '100%';\n        this.height = '100%';\n        this.change$ = new EventEmitter();\n        this.changeLayerGroup$ = new EventEmitter();\n        this.changeSize$ = new EventEmitter();\n        this.changeTarget$ = new EventEmitter();\n        this.changeView$ = new EventEmitter();\n        this.click$ = new EventEmitter();\n        this.dblclick$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.moveend$ = new EventEmitter();\n        this.movestart$ = new EventEmitter();\n        this.pointerdrag$ = new EventEmitter();\n        this.pointermove$ = new EventEmitter();\n        this.postcompose$ = new EventEmitter();\n        this.postrender$ = new EventEmitter();\n        this.precompose$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n        this.rendercomplete$ = new EventEmitter();\n        this.singleclick$ = new EventEmitter();\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.createInstance();\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                if (key === 'target') {\n                    this.ngZone.runOutsideAngular(() => {\n                        this.instance.setTarget(val);\n                    });\n                }\n                else if (key === 'view') {\n                    this.ngZone.runOutsideAngular(() => {\n                        this.instance.setView(val);\n                    });\n                }\n                else {\n                    properties[key] = val;\n                }\n            }\n        }\n        if (Object.keys(properties).length > 0) {\n            this.ngZone.runOutsideAngular(() => {\n                this.instance.setProperties(properties);\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this.layerComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.layerComponents), filter(() => !this.layers), map((components) => components.map(c => c.instance)), distinctUntilChanged())\n            .subscribe(layers => {\n            const collection = this.instance.getLayers();\n            collection.clear();\n            collection.extend(layers);\n        });\n        this.interactionComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.interactionComponents), filter(() => !this.interactions), map((components) => components.map(c => c.instance)), map((interactions) => defaults().extend(interactions).getArray()), distinctUntilChanged())\n            .subscribe(interactions => {\n            const collection = this.instance.getInteractions();\n            collection.clear();\n            collection.extend(interactions);\n        });\n        this.controlComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.controlComponents), filter(() => !this.controls), map((components) => components.map(c => c.instance)), distinctUntilChanged())\n            .subscribe(controls => {\n            const collection = this.instance.getControls();\n            collection.clear();\n            collection.extend(controls);\n        });\n        this.overlayComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.overlayComponents), filter(() => !this.overlays), map((components) => components.map(c => c.instance)), distinctUntilChanged())\n            .subscribe(overlays => {\n            const collection = this.instance.getOverlays();\n            collection.clear();\n            collection.extend(overlays);\n        });\n    }\n    ngAfterViewInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance.updateSize();\n        });\n    }\n    ngOnDestroy() {\n        this.instance.setTarget(undefined);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    createInstance() {\n        const target = this.elementRef.nativeElement.firstElementChild;\n        this.instance = new Map({ ...this, target });\n        this.instance.on('change', (event) => this.change$.emit(event));\n        this.instance.on('change:layergroup', (event) => this.changeLayerGroup$.emit(event));\n        this.instance.on('change:size', (event) => this.changeSize$.emit(event));\n        this.instance.on('change:target', (event) => this.changeTarget$.emit(event));\n        this.instance.on('change:view', (event) => this.changeView$.emit(event));\n        this.instance.on('click', (event) => this.click$.emit(event));\n        this.instance.on('dblclick', (event) => this.dblclick$.emit(event));\n        this.instance.on('error', (event) => this.error$.emit(event));\n        this.instance.on('moveend', (event) => this.moveend$.emit(event));\n        this.instance.on('movestart', (event) => this.movestart$.emit(event));\n        this.instance.on('pointerdrag', (event) => this.pointerdrag$.emit(event));\n        this.instance.on('pointermove', (event) => this.pointermove$.emit(event));\n        this.instance.on('postcompose', (event) => this.postcompose$.emit(event));\n        this.instance.on('postrender', (event) => this.postrender$.emit(event));\n        this.instance.on('precompose', (event) => this.precompose$.emit(event));\n        this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n        this.instance.on('rendercomplete', (event) => this.rendercomplete$.emit(event));\n        this.instance.on('singleclick', (event) => this.singleclick$.emit(event));\n    }\n}\nMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: MapComponent, selector: \"ol-map\", inputs: { width: [\"olWidth\", \"width\"], height: [\"olHeight\", \"height\"], controls: [\"olControls\", \"controls\"], pixelRatio: [\"olPixelRatio\", \"pixelRatio\"], interactions: [\"olInteractions\", \"interactions\"], keyboardEventTarget: [\"olKeyboardEventTarget\", \"keyboardEventTarget\"], layers: [\"olLayers\", \"layers\"], maxTilesLoading: [\"olMaxTilesLoading\", \"maxTilesLoading\"], moveTolerance: [\"olMoveTolerance\", \"moveTolerance\"], overlays: [\"olVverlays\", \"overlays\"], target: [\"olTarget\", \"target\"], view: [\"olView\", \"view\"] }, outputs: { change$: \"olOnChange\", changeLayerGroup$: \"olOnChangeLayerGroup\", changeSize$: \"olOnChangeSize\", changeTarget$: \"olOnChangeTarget\", changeView$: \"olOnChangeView\", click$: \"olOnClick\", dblclick$: \"olOnDblclick\", error$: \"olOnError\", moveend$: \"olOnMoveend\", movestart$: \"olOnMovestart\", pointerdrag$: \"olOnPointerdrag\", pointermove$: \"olOnPointermove\", postcompose$: \"olOnPostcompose\", postrender$: \"olOnPostrender\", precompose$: \"olOnPrecompose\", propertychange$: \"olOnPropertychange\", rendercomplete$: \"olOnRendercomplete\", singleclick$: \"olOnSingleclick\" }, host: { properties: { \"style.display\": \"'block'\", \"style.width\": \"width\", \"style.height\": \"height\" } }, queries: [{ propertyName: \"layerComponents\", predicate: LAYER_PROVIDER }, { propertyName: \"interactionComponents\", predicate: InteractionComponent, descendants: true }, { propertyName: \"controlComponents\", predicate: ControlComponent, descendants: true }, { propertyName: \"overlayComponents\", predicate: OverlayComponent, descendants: true }], exportAs: [\"olMap\"], usesOnChanges: true, ngImport: i0, template: `\n    <div [style.width]=\"'100%'\" [style.height]=\"'100%'\"></div>\n    <ng-content></ng-content>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-map',\n                    exportAs: 'olMap',\n                    template: `\n    <div [style.width]=\"'100%'\" [style.height]=\"'100%'\"></div>\n    <ng-content></ng-content>\n  `,\n                    styles: [],\n                    host: {\n                        '[style.display]': `'block'`,\n                        '[style.width]': `width`,\n                        '[style.height]': `height`\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { width: [{\n                type: Input,\n                args: ['olWidth']\n            }], height: [{\n                type: Input,\n                args: ['olHeight']\n            }], controls: [{\n                type: Input,\n                args: ['olControls']\n            }], pixelRatio: [{\n                type: Input,\n                args: ['olPixelRatio']\n            }], interactions: [{\n                type: Input,\n                args: ['olInteractions']\n            }], keyboardEventTarget: [{\n                type: Input,\n                args: ['olKeyboardEventTarget']\n            }], layers: [{\n                type: Input,\n                args: ['olLayers']\n            }], maxTilesLoading: [{\n                type: Input,\n                args: ['olMaxTilesLoading']\n            }], moveTolerance: [{\n                type: Input,\n                args: ['olMoveTolerance']\n            }], overlays: [{\n                type: Input,\n                args: ['olVverlays']\n            }], target: [{\n                type: Input,\n                args: ['olTarget']\n            }], view: [{\n                type: Input,\n                args: ['olView']\n            }], change$: [{\n                type: Output,\n                args: ['olOnChange']\n            }], changeLayerGroup$: [{\n                type: Output,\n                args: ['olOnChangeLayerGroup']\n            }], changeSize$: [{\n                type: Output,\n                args: ['olOnChangeSize']\n            }], changeTarget$: [{\n                type: Output,\n                args: ['olOnChangeTarget']\n            }], changeView$: [{\n                type: Output,\n                args: ['olOnChangeView']\n            }], click$: [{\n                type: Output,\n                args: ['olOnClick']\n            }], dblclick$: [{\n                type: Output,\n                args: ['olOnDblclick']\n            }], error$: [{\n                type: Output,\n                args: ['olOnError']\n            }], moveend$: [{\n                type: Output,\n                args: ['olOnMoveend']\n            }], movestart$: [{\n                type: Output,\n                args: ['olOnMovestart']\n            }], pointerdrag$: [{\n                type: Output,\n                args: ['olOnPointerdrag']\n            }], pointermove$: [{\n                type: Output,\n                args: ['olOnPointermove']\n            }], postcompose$: [{\n                type: Output,\n                args: ['olOnPostcompose']\n            }], postrender$: [{\n                type: Output,\n                args: ['olOnPostrender']\n            }], precompose$: [{\n                type: Output,\n                args: ['olOnPrecompose']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olOnPropertychange']\n            }], rendercomplete$: [{\n                type: Output,\n                args: ['olOnRendercomplete']\n            }], singleclick$: [{\n                type: Output,\n                args: ['olOnSingleclick']\n            }], layerComponents: [{\n                type: ContentChildren,\n                args: [LAYER_PROVIDER]\n            }], interactionComponents: [{\n                type: ContentChildren,\n                args: [InteractionComponent, { descendants: true }]\n            }], controlComponents: [{\n                type: ContentChildren,\n                args: [ControlComponent, { descendants: true }]\n            }], overlayComponents: [{\n                type: ContentChildren,\n                args: [OverlayComponent, { descendants: true }]\n            }] } });\n\nclass MapModule {\n}\nMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapModule, declarations: [MapComponent], imports: [CommonModule], exports: [MapComponent] });\nMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        MapComponent\n                    ],\n                    exports: [\n                        MapComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });\n\nclass ClusterSourceComponent extends VectorSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Cluster(this);\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { distance, source, ...others } = changes;\n        if (this.instance) {\n            if (distance)\n                this.instance.setDistance(distance.currentValue);\n            if (source)\n                this.instance.setSource(source.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n    ngAfterContentInit() {\n        this.sources.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.sources), map((sources) => sources.last?.instance), distinctUntilChanged())\n            .subscribe(source => this.instance.setSource(source));\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nClusterSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nClusterSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ClusterSourceComponent, selector: \"ol-cluster-source\", inputs: { distance: [\"olDistance\", \"distance\"], geometryFunction: [\"olGeometryFunction\", \"geometryFunction\"], source: [\"olSource\", \"source\"] }, providers: [{\n            provide: VectorSourceComponent,\n            useExisting: forwardRef(() => ClusterSourceComponent),\n            multi: true\n        }], queries: [{ propertyName: \"sources\", predicate: VectorSourceComponent }], exportAs: [\"olClusterSource\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-cluster-source',\n                    exportAs: 'olClusterSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: VectorSourceComponent,\n                            useExisting: forwardRef(() => ClusterSourceComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { distance: [{\n                type: Input,\n                args: ['olDistance']\n            }], geometryFunction: [{\n                type: Input,\n                args: ['olGeometryFunction']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], sources: [{\n                type: ContentChildren,\n                args: [VectorSourceComponent]\n            }] } });\n\nclass ClusterSourceModule {\n}\nClusterSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nClusterSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceModule, declarations: [ClusterSourceComponent], imports: [CommonModule], exports: [ClusterSourceComponent] });\nClusterSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ClusterSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ClusterSourceComponent\n                    ]\n                }]\n        }] });\n\nclass ImageWMSSourceComponent extends ImageSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new ImageWMS(this);\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { imageLoadFunction, url, ...others } = changes;\n        if (this.instance) {\n            imageLoadFunction && this.instance.setImageLoadFunction(imageLoadFunction.currentValue);\n            url && this.instance.setUrl(url.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nImageWMSSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nImageWMSSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ImageWMSSourceComponent, selector: \"ol-image-wms-source\", inputs: { crossOrigin: [\"olCrossOrigin\", \"crossOrigin\"], hidpi: [\"olHidpi\", \"hidpi\"], serverType: [\"olServerType\", \"serverType\"], imageLoadFunction: [\"olImageLoadFunction\", \"imageLoadFunction\"], params: [\"olParams\", \"params\"], ratio: [\"olRatio\", \"ratio\"], url: [\"olUrl\", \"url\"] }, providers: [{\n            provide: ImageSourceComponent,\n            useExisting: forwardRef(() => ImageWMSSourceComponent),\n            multi: true\n        }], exportAs: [\"olImageWMSSource\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-image-wms-source',\n                    exportAs: 'olImageWMSSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: ImageSourceComponent,\n                            useExisting: forwardRef(() => ImageWMSSourceComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { crossOrigin: [{\n                type: Input,\n                args: ['olCrossOrigin']\n            }], hidpi: [{\n                type: Input,\n                args: ['olHidpi']\n            }], serverType: [{\n                type: Input,\n                args: ['olServerType']\n            }], imageLoadFunction: [{\n                type: Input,\n                args: ['olImageLoadFunction']\n            }], params: [{\n                type: Input,\n                args: ['olParams']\n            }], ratio: [{\n                type: Input,\n                args: ['olRatio']\n            }], url: [{\n                type: Input,\n                args: ['olUrl']\n            }] } });\n\nclass ImageWMSSourceModule {\n}\nImageWMSSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nImageWMSSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceModule, declarations: [ImageWMSSourceComponent], imports: [CommonModule], exports: [ImageWMSSourceComponent] });\nImageWMSSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ImageWMSSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ImageWMSSourceComponent\n                    ]\n                }]\n        }] });\n\nclass TileImageSourceComponent extends UrlTileSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new TileImageSource(this);\n            }\n            super.ngOnInit();\n        });\n    }\n}\nTileImageSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nTileImageSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: TileImageSourceComponent, selector: \"ol-tile-image-source\", inputs: { crossOrigin: \"crossOrigin\", imageSmoothing: \"imageSmoothing\", reprojectionErrorThreshold: \"reprojectionErrorThreshold\", tileClass: \"tileClass\" }, exportAs: [\"olTileImageSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-tile-image-source',\n                    exportAs: 'olTileImageSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { crossOrigin: [{\n                type: Input\n            }], imageSmoothing: [{\n                type: Input\n            }], reprojectionErrorThreshold: [{\n                type: Input\n            }], tileClass: [{\n                type: Input\n            }] } });\n\nclass TileImageSourceModule {\n}\nTileImageSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTileImageSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceModule, declarations: [TileImageSourceComponent], imports: [CommonModule], exports: [TileImageSourceComponent] });\nTileImageSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TileImageSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        TileImageSourceComponent\n                    ]\n                }]\n        }] });\n\nclass XYZSourceComponent extends TileImageSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new XYZSource(this);\n            }\n            super.ngOnInit();\n        });\n    }\n}\nXYZSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nXYZSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: XYZSourceComponent, selector: \"ol-xyz-source\", inputs: { maxZoom: [\"olMaxZoom\", \"maxZoom\"], minZoom: [\"olMinZoom\", \"minZoom\"], maxResolution: [\"olMaxResolution\", \"maxResolution\"], tileSize: [\"olTileSize\", \"tileSize\"] }, providers: [{\n            provide: TileSourceComponent,\n            useExisting: forwardRef(() => XYZSourceComponent),\n            multi: true\n        }], exportAs: [\"olXYZSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-xyz-source',\n                    exportAs: 'olXYZSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: TileSourceComponent,\n                            useExisting: forwardRef(() => XYZSourceComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { maxZoom: [{\n                type: Input,\n                args: ['olMaxZoom']\n            }], minZoom: [{\n                type: Input,\n                args: ['olMinZoom']\n            }], maxResolution: [{\n                type: Input,\n                args: ['olMaxResolution']\n            }], tileSize: [{\n                type: Input,\n                args: ['olTileSize']\n            }] } });\n\nclass XYZSourceModule {\n}\nXYZSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nXYZSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceModule, declarations: [XYZSourceComponent], imports: [CommonModule], exports: [XYZSourceComponent] });\nXYZSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        XYZSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        XYZSourceComponent\n                    ]\n                }]\n        }] });\n\nclass OSMSourceComponent extends XYZSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new OSM(this);\n            super.ngOnInit();\n        });\n    }\n}\nOSMSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nOSMSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: OSMSourceComponent, selector: \"ol-osm-source\", providers: [{\n            provide: TileSourceComponent,\n            useExisting: forwardRef(() => OSMSourceComponent),\n            multi: true\n        }], exportAs: [\"olOSMSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-osm-source',\n                    exportAs: 'olOSMSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: TileSourceComponent,\n                            useExisting: forwardRef(() => OSMSourceComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\nclass OSMSourceModule {\n}\nOSMSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOSMSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceModule, declarations: [OSMSourceComponent], imports: [CommonModule], exports: [OSMSourceComponent] });\nOSMSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        OSMSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        OSMSourceComponent\n                    ]\n                }]\n        }] });\n\nclass ImageStyleComponent {\n    constructor(ngZone, host) {\n        this.ngZone = ngZone;\n        this.host = host;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.host.instance.setImage(this.instance);\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'opacity':\n                        this.instance.setOpacity(val);\n                        break;\n                    case 'rotateWithView':\n                        this.instance.setRotateWithView(val);\n                        break;\n                    case 'rotation':\n                        this.instance.setRotation(val);\n                        break;\n                    case 'scale':\n                        this.instance.setScale(val);\n                        break;\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.host.instance.setImage(null);\n    }\n}\nImageStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent }], target: i0.ɵɵFactoryTarget.Component });\nImageStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ImageStyleComponent, selector: \"ol-image-style\", inputs: { opacity: [\"olOpacity\", \"opacity\"], rotateWithView: [\"olRotateWithView\", \"rotateWithView\"], rotation: [\"olRotation\", \"rotation\"], scale: [\"olScale\", \"scale\"], displacement: [\"olDisplacement\", \"displacement\"], declutterMode: [\"olDeclutterMode\", \"declutterMode\"] }, exportAs: [\"olImageStyle\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-image-style',\n                    exportAs: 'olImageStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent }]; }, propDecorators: { opacity: [{\n                type: Input,\n                args: ['olOpacity']\n            }], rotateWithView: [{\n                type: Input,\n                args: ['olRotateWithView']\n            }], rotation: [{\n                type: Input,\n                args: ['olRotation']\n            }], scale: [{\n                type: Input,\n                args: ['olScale']\n            }], displacement: [{\n                type: Input,\n                args: ['olDisplacement']\n            }], declutterMode: [{\n                type: Input,\n                args: ['olDeclutterMode']\n            }] } });\n\nclass ImageStyleModule {\n}\nImageStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nImageStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleModule, declarations: [ImageStyleComponent], imports: [CommonModule], exports: [ImageStyleComponent] });\nImageStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ImageStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ImageStyleComponent\n                    ]\n                }]\n        }] });\n\nclass RegularShapeStyleComponent extends ImageStyleComponent {\n    constructor(ngZone, host) {\n        super(ngZone, host);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new RegularShape(this);\n            }\n            super.ngOnInit();\n        });\n    }\n    setFill(fill) {\n        this.fill = fill;\n        this.ngOnInit();\n    }\n    setStroke(stroke) {\n        this.stroke = stroke;\n        this.ngOnInit();\n    }\n}\nRegularShapeStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent }], target: i0.ɵɵFactoryTarget.Component });\nRegularShapeStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: RegularShapeStyleComponent, selector: \"ol-regular-shape-style\", inputs: { fill: [\"olFill\", \"fill\"], points: [\"olPoints\", \"points\"], radius: [\"olRadius\", \"radius\"], radius1: [\"olRadius1\", \"radius1\"], radius2: [\"olRadius2\", \"radius2\"], angle: [\"olAngle\", \"angle\"], stroke: [\"olStroke\", \"stroke\"] }, exportAs: [\"olRegularShapeStyle\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-regular-shape-style',\n                    exportAs: 'olRegularShapeStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent }]; }, propDecorators: { fill: [{\n                type: Input,\n                args: ['olFill']\n            }], points: [{\n                type: Input,\n                args: ['olPoints']\n            }], radius: [{\n                type: Input,\n                args: ['olRadius']\n            }], radius1: [{\n                type: Input,\n                args: ['olRadius1']\n            }], radius2: [{\n                type: Input,\n                args: ['olRadius2']\n            }], angle: [{\n                type: Input,\n                args: ['olAngle']\n            }], stroke: [{\n                type: Input,\n                args: ['olStroke']\n            }] } });\n\nclass RegularShapeStyleModule {\n}\nRegularShapeStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRegularShapeStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleModule, declarations: [RegularShapeStyleComponent], imports: [CommonModule], exports: [RegularShapeStyleComponent] });\nRegularShapeStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        RegularShapeStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        RegularShapeStyleComponent\n                    ]\n                }]\n        }] });\n\nclass CircleStyleComponent extends RegularShapeStyleComponent {\n    constructor(ngZone, host) {\n        super(ngZone, host);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new CircleStyle(this);\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { radius, ...others } = changes;\n        if (this.instance && radius) {\n            this.instance.setRadius(radius.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nCircleStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent }], target: i0.ɵɵFactoryTarget.Component });\nCircleStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: CircleStyleComponent, selector: \"ol-circle-style\", inputs: { radius: [\"olRadius\", \"radius\"] }, providers: [{\n            provide: RegularShapeStyleComponent,\n            useExisting: forwardRef(() => CircleStyleComponent),\n            multi: false\n        }], exportAs: [\"olCircleStyle\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-circle-style',\n                    exportAs: 'olCircleStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: RegularShapeStyleComponent,\n                            useExisting: forwardRef(() => CircleStyleComponent),\n                            multi: false\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent }]; }, propDecorators: { radius: [{\n                type: Input,\n                args: ['olRadius']\n            }] } });\n\nclass CircleStyleModule {\n}\nCircleStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCircleStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleModule, declarations: [CircleStyleComponent], imports: [CommonModule], exports: [CircleStyleComponent] });\nCircleStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CircleStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        CircleStyleComponent\n                    ]\n                }]\n        }] });\n\nclass TextStyleComponent {\n    constructor(ngZone, host) {\n        this.ngZone = ngZone;\n        this.host = host;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Text(this);\n            this.host.instance.setText(this.instance);\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'font':\n                        this.instance.setFont(val);\n                        break;\n                    case 'maxAngle':\n                        this.instance.setMaxAngle(val);\n                        break;\n                    case 'offsetX':\n                        this.instance.setOffsetX(val);\n                        break;\n                    case 'offsetY':\n                        this.instance.setOffsetY(val);\n                        break;\n                    case 'overflow':\n                        this.instance.setOverflow(val);\n                        break;\n                    case 'placement':\n                        this.instance.setPlacement(val);\n                        break;\n                    case 'scale':\n                        this.instance.setScale(val);\n                        break;\n                    case 'rotateWithView':\n                        this.instance.setRotateWithView(val);\n                        break;\n                    case 'rotation':\n                        this.instance.setRotation(val);\n                        break;\n                    case 'text':\n                        this.instance.setText(val);\n                        break;\n                    case 'textAlign':\n                        this.instance.setTextAlign(val);\n                        break;\n                    case 'textBaseline':\n                        this.instance.setTextBaseline(val);\n                        break;\n                    case 'fill':\n                        this.instance.setFill(val);\n                        break;\n                    case 'stroke':\n                        this.instance.setStroke(val);\n                        break;\n                    case 'backgroundFill':\n                        this.instance.setBackgroundFill(val);\n                        break;\n                    case 'backgroundStroke':\n                        this.instance.setBackgroundStroke(val);\n                        break;\n                    case 'padding':\n                        this.instance.setPadding(val);\n                        break;\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.host.instance.setText(null);\n    }\n}\nTextStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent }], target: i0.ɵɵFactoryTarget.Component });\nTextStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: TextStyleComponent, selector: \"ol-text-style\", inputs: { font: [\"olFont\", \"font\"], maxAngle: [\"olMaxAngle\", \"maxAngle\"], offsetX: [\"olOffsetX\", \"offsetX\"], offsetY: [\"olOffsetY\", \"offsetY\"], overflow: [\"olOverflow\", \"overflow\"], placement: [\"olPlacement\", \"placement\"], scale: [\"olScale\", \"scale\"], rotateWithView: [\"olRotateWithView\", \"rotateWithView\"], rotation: [\"olRotation\", \"rotation\"], text: [\"olText\", \"text\"], textAlign: [\"olTextAlign\", \"textAlign\"], textBaseline: [\"olTextBaseline\", \"textBaseline\"], fill: [\"olFill\", \"fill\"], stroke: [\"olStroke\", \"stroke\"], backgroundFill: [\"olBackgroundFill\", \"backgroundFill\"], backgroundStroke: [\"olBackgroundStroke\", \"backgroundStroke\"], padding: [\"olPadding\", \"padding\"] }, exportAs: [\"olTextStyle\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-text-style',\n                    exportAs: 'olTextStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent }]; }, propDecorators: { font: [{\n                type: Input,\n                args: ['olFont']\n            }], maxAngle: [{\n                type: Input,\n                args: ['olMaxAngle']\n            }], offsetX: [{\n                type: Input,\n                args: ['olOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['olOffsetY']\n            }], overflow: [{\n                type: Input,\n                args: ['olOverflow']\n            }], placement: [{\n                type: Input,\n                args: ['olPlacement']\n            }], scale: [{\n                type: Input,\n                args: ['olScale']\n            }], rotateWithView: [{\n                type: Input,\n                args: ['olRotateWithView']\n            }], rotation: [{\n                type: Input,\n                args: ['olRotation']\n            }], text: [{\n                type: Input,\n                args: ['olText']\n            }], textAlign: [{\n                type: Input,\n                args: ['olTextAlign']\n            }], textBaseline: [{\n                type: Input,\n                args: ['olTextBaseline']\n            }], fill: [{\n                type: Input,\n                args: ['olFill']\n            }], stroke: [{\n                type: Input,\n                args: ['olStroke']\n            }], backgroundFill: [{\n                type: Input,\n                args: ['olBackgroundFill']\n            }], backgroundStroke: [{\n                type: Input,\n                args: ['olBackgroundStroke']\n            }], padding: [{\n                type: Input,\n                args: ['olPadding']\n            }] } });\n\nclass TextStyleModule {\n}\nTextStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleModule, declarations: [TextStyleComponent], imports: [CommonModule], exports: [TextStyleComponent] });\nTextStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TextStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        TextStyleComponent\n                    ]\n                }]\n        }] });\n\nclass FillStyleComponent {\n    constructor(ngZone, styleHost, textHost, regularShapeHost) {\n        this.ngZone = ngZone;\n        this.type = 'fill';\n        this.host = regularShapeHost || textHost || styleHost;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Fill(this);\n            if (this.type === 'text-background-fill') {\n                this.host.instance.setBackgroundFill(this.instance);\n            }\n            else if (this.type === 'fill') {\n                if (this.host instanceof RegularShapeStyleComponent) {\n                    this.host.setFill(this.instance);\n                }\n                else {\n                    this.host.instance.setFill(this.instance);\n                }\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const { color } = changes;\n        if (color)\n            this.instance.setColor(color.currentValue);\n    }\n    ngOnDestroy() {\n        const nullVal = null;\n        if (this.type === 'text-background-fill') {\n            this.host.instance.setBackgroundFill(nullVal);\n        }\n        else if (this.type === 'fill') {\n            if (this.host instanceof RegularShapeStyleComponent) {\n                this.host.setFill(nullVal);\n            }\n            else {\n                this.host.instance.setFill(nullVal);\n            }\n        }\n    }\n}\nFillStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent, optional: true }, { token: TextStyleComponent, optional: true }, { token: RegularShapeStyleComponent, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nFillStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: FillStyleComponent, selector: \"ol-fill-style\", inputs: { color: [\"olColor\", \"color\"], type: [\"olType\", \"type\"] }, exportAs: [\"olFillStyle\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-fill-style',\n                    exportAs: 'olFillStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent, decorators: [{\n                    type: Optional\n                }] }, { type: TextStyleComponent, decorators: [{\n                    type: Optional\n                }] }, { type: RegularShapeStyleComponent, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { color: [{\n                type: Input,\n                args: ['olColor']\n            }], type: [{\n                type: Input,\n                args: ['olType']\n            }] } });\n\nclass FillStyleModule {\n}\nFillStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFillStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleModule, declarations: [FillStyleComponent], imports: [CommonModule], exports: [FillStyleComponent] });\nFillStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        FillStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        FillStyleComponent\n                    ]\n                }]\n        }] });\n\nclass IconStyleComponent extends ImageStyleComponent {\n    constructor(ngZone, host) {\n        super(ngZone, host);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Icon(this);\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { anchor, ...others } = changes;\n        if (this.instance && anchor) {\n            this.instance.setAnchor(anchor.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nIconStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent }], target: i0.ɵɵFactoryTarget.Component });\nIconStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: IconStyleComponent, selector: \"ol-icon-style\", inputs: { anchor: [\"olAnchor\", \"anchor\"], anchorOrigin: [\"olAnchorOrigin\", \"anchorOrigin\"], anchorXUnits: [\"olAnchorXUnits\", \"anchorXUnits\"], anchorYUnits: [\"olAnchorYUnits\", \"anchorYUnits\"], color: [\"olColor\", \"color\"], crossOrigin: [\"olCrossOrigin\", \"crossOrigin\"], img: [\"olImg\", \"img\"], offset: [\"olOffset\", \"offset\"], offsetOrigin: [\"olOffsetOrigin\", \"offsetOrigin\"], size: [\"olSize\", \"size\"], imgSize: [\"olImgSize\", \"imgSize\"], src: [\"olSrc\", \"src\"] }, exportAs: [\"olIconStyle\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-icon-style',\n                    exportAs: 'olIconStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent }]; }, propDecorators: { anchor: [{\n                type: Input,\n                args: ['olAnchor']\n            }], anchorOrigin: [{\n                type: Input,\n                args: ['olAnchorOrigin']\n            }], anchorXUnits: [{\n                type: Input,\n                args: ['olAnchorXUnits']\n            }], anchorYUnits: [{\n                type: Input,\n                args: ['olAnchorYUnits']\n            }], color: [{\n                type: Input,\n                args: ['olColor']\n            }], crossOrigin: [{\n                type: Input,\n                args: ['olCrossOrigin']\n            }], img: [{\n                type: Input,\n                args: ['olImg']\n            }], offset: [{\n                type: Input,\n                args: ['olOffset']\n            }], offsetOrigin: [{\n                type: Input,\n                args: ['olOffsetOrigin']\n            }], size: [{\n                type: Input,\n                args: ['olSize']\n            }], imgSize: [{\n                type: Input,\n                args: ['olImgSize']\n            }], src: [{\n                type: Input,\n                args: ['olSrc']\n            }] } });\n\nclass IconStyleModule {\n}\nIconStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nIconStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleModule, declarations: [IconStyleComponent], imports: [CommonModule], exports: [IconStyleComponent] });\nIconStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        IconStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        IconStyleComponent\n                    ]\n                }]\n        }] });\n\nclass StrokeStyleComponent {\n    constructor(ngZone, styleHost, textHost, regularShapeHost) {\n        this.ngZone = ngZone;\n        this.type = 'stroke';\n        this.host = regularShapeHost || textHost || styleHost;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Stroke(this);\n            if (this.type === 'stroke') {\n                if (this.host instanceof RegularShapeStyleComponent) {\n                    this.host.setStroke(this.instance);\n                }\n                else {\n                    this.host.instance.setStroke(this.instance);\n                }\n            }\n            else if (this.type === 'text-background-stroke') {\n                this.host.instance.setBackgroundStroke(this.instance);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'color':\n                        this.instance.setColor(val);\n                        break;\n                    case 'lineCap':\n                        this.instance.setLineCap(val);\n                        break;\n                    case 'lineJoin':\n                        this.instance.setLineJoin(val);\n                        break;\n                    case 'lineDash':\n                        this.instance.setLineDash(val);\n                        break;\n                    case 'lineDashOffset':\n                        this.instance.setLineDashOffset(val);\n                        break;\n                    case 'miterLimit':\n                        this.instance.setMiterLimit(val);\n                        break;\n                    case 'width':\n                        this.instance.setWidth(val);\n                        break;\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        const nullVal = null;\n        if (this.type === 'stroke') {\n            if (this.host instanceof RegularShapeStyleComponent) {\n                this.host.setStroke(nullVal);\n            }\n            else {\n                this.host.instance.setStroke(nullVal);\n            }\n        }\n        else if (this.type === 'text-background-stroke') {\n            this.host.instance.setBackgroundStroke(nullVal);\n        }\n    }\n}\nStrokeStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent, optional: true }, { token: TextStyleComponent, optional: true }, { token: RegularShapeStyleComponent, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nStrokeStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: StrokeStyleComponent, selector: \"ol-stroke-style\", inputs: { color: [\"olColor\", \"color\"], lineCap: [\"olLineCap\", \"lineCap\"], lineJoin: [\"olLineJoin\", \"lineJoin\"], lineDash: [\"olLineDash\", \"lineDash\"], lineDashOffset: [\"olLineDashOffset\", \"lineDashOffset\"], miterLimit: [\"olMiterLimit\", \"miterLimit\"], width: [\"olWidth\", \"width\"], type: [\"olType\", \"type\"] }, exportAs: [\"olStrokeStyle\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-stroke-style',\n                    exportAs: 'olStrokeStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent, decorators: [{\n                    type: Optional\n                }] }, { type: TextStyleComponent, decorators: [{\n                    type: Optional\n                }] }, { type: RegularShapeStyleComponent, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { color: [{\n                type: Input,\n                args: ['olColor']\n            }], lineCap: [{\n                type: Input,\n                args: ['olLineCap']\n            }], lineJoin: [{\n                type: Input,\n                args: ['olLineJoin']\n            }], lineDash: [{\n                type: Input,\n                args: ['olLineDash']\n            }], lineDashOffset: [{\n                type: Input,\n                args: ['olLineDashOffset']\n            }], miterLimit: [{\n                type: Input,\n                args: ['olMiterLimit']\n            }], width: [{\n                type: Input,\n                args: ['olWidth']\n            }], type: [{\n                type: Input,\n                args: ['olType']\n            }] } });\n\nclass StrokeStyleModule {\n}\nStrokeStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nStrokeStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleModule, declarations: [StrokeStyleComponent], imports: [CommonModule], exports: [StrokeStyleComponent] });\nStrokeStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        StrokeStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        StrokeStyleComponent\n                    ]\n                }]\n        }] });\n\nclass ViewComponent {\n    constructor(ngZone, host) {\n        this.ngZone = ngZone;\n        this.host = host;\n        this.change$ = new EventEmitter();\n        this.changeCenter$ = new EventEmitter();\n        this.changeResolution$ = new EventEmitter();\n        this.changeRotation$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n        if (!this.host) {\n            throw new Error(\"The view component needs to be nested in the map component.\");\n        }\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.createInstance();\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'center':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setCenter(val);\n                        });\n                        break;\n                    case 'constrainResolution':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setConstrainResolution(val);\n                        });\n                        break;\n                    case 'maxZoom':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setMaxZoom(val);\n                        });\n                        break;\n                    case 'minZoom':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setMinZoom(val);\n                        });\n                        break;\n                    case 'resolution':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setResolution(val);\n                        });\n                        break;\n                    case 'rotation':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setRotation(val);\n                        });\n                        break;\n                    case 'zoom':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setZoom(val);\n                        });\n                        break;\n                    default:\n                        properties[key] = val;\n                        break;\n                }\n            }\n        }\n        if (Object.keys(properties).length > 0) {\n            this.ngZone.runOutsideAngular(() => {\n                this.instance.setProperties(properties);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.host.instance.setView(null);\n    }\n    createInstance() {\n        this.instance = new View(this);\n        this.instance.on('change', (event) => this.change$.emit(event));\n        this.instance.on('change:center', (event) => this.changeCenter$.emit(event));\n        this.instance.on('change:resolution', (event) => this.changeResolution$.emit(event));\n        this.instance.on('change:rotation', (event) => this.changeRotation$.emit(event));\n        this.instance.on('error', (event) => this.error$.emit(event));\n        this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n        this.host.instance.setView(this.instance);\n    }\n}\nViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewComponent, deps: [{ token: i0.NgZone }, { token: MapComponent }], target: i0.ɵɵFactoryTarget.Component });\nViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ViewComponent, selector: \"ol-view\", inputs: { center: [\"olCenter\", \"center\"], constrainRotation: [\"olConstrainRotation\", \"constrainRotation\"], enableRotation: [\"olEnableRotation\", \"enableRotation\"], extent: [\"olExtent\", \"extent\"], constrainOnlyCenter: [\"olConstrainOnlyCenter\", \"constrainOnlyCenter\"], smoothExtentConstraint: [\"olSmoothExtentConstraint\", \"smoothExtentConstraint\"], maxResolution: [\"olMaxResolution\", \"maxResolution\"], minResolution: [\"olMinResolution\", \"minResolution\"], maxZoom: [\"olMaxZoom\", \"maxZoom\"], minZoom: [\"olMinZoom\", \"minZoom\"], multiWorld: [\"olMultiWorld\", \"multiWorld\"], constrainResolution: [\"olConstrainResolution\", \"constrainResolution\"], smoothResolutionConstraint: [\"olSmoothResolutionConstraint\", \"smoothResolutionConstraint\"], showFullExtent: [\"olShowFullExtent\", \"showFullExtent\"], projection: [\"olProjection\", \"projection\"], resolution: [\"olResolution\", \"resolution\"], resolutions: [\"olResolutions\", \"resolutions\"], rotation: [\"olRotation\", \"rotation\"], zoom: [\"olZoom\", \"zoom\"], zoomFactor: [\"olZoomFactor\", \"zoomFactor\"], padding: [\"olPadding\", \"padding\"] }, outputs: { change$: \"olOnChange\", changeCenter$: \"olOnChangeCenter\", changeResolution$: \"olOnChangeResolution\", changeRotation$: \"olOnChangeRotation\", error$: \"olOnError\", propertychange$: \"olOnPropertychange\" }, exportAs: [\"olView\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-view',\n                    exportAs: 'olView',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: MapComponent }]; }, propDecorators: { center: [{\n                type: Input,\n                args: ['olCenter']\n            }], constrainRotation: [{\n                type: Input,\n                args: ['olConstrainRotation']\n            }], enableRotation: [{\n                type: Input,\n                args: ['olEnableRotation']\n            }], extent: [{\n                type: Input,\n                args: ['olExtent']\n            }], constrainOnlyCenter: [{\n                type: Input,\n                args: ['olConstrainOnlyCenter']\n            }], smoothExtentConstraint: [{\n                type: Input,\n                args: ['olSmoothExtentConstraint']\n            }], maxResolution: [{\n                type: Input,\n                args: ['olMaxResolution']\n            }], minResolution: [{\n                type: Input,\n                args: ['olMinResolution']\n            }], maxZoom: [{\n                type: Input,\n                args: ['olMaxZoom']\n            }], minZoom: [{\n                type: Input,\n                args: ['olMinZoom']\n            }], multiWorld: [{\n                type: Input,\n                args: ['olMultiWorld']\n            }], constrainResolution: [{\n                type: Input,\n                args: ['olConstrainResolution']\n            }], smoothResolutionConstraint: [{\n                type: Input,\n                args: ['olSmoothResolutionConstraint']\n            }], showFullExtent: [{\n                type: Input,\n                args: ['olShowFullExtent']\n            }], projection: [{\n                type: Input,\n                args: ['olProjection']\n            }], resolution: [{\n                type: Input,\n                args: ['olResolution']\n            }], resolutions: [{\n                type: Input,\n                args: ['olResolutions']\n            }], rotation: [{\n                type: Input,\n                args: ['olRotation']\n            }], zoom: [{\n                type: Input,\n                args: ['olZoom']\n            }], zoomFactor: [{\n                type: Input,\n                args: ['olZoomFactor']\n            }], padding: [{\n                type: Input,\n                args: ['olPadding']\n            }], change$: [{\n                type: Output,\n                args: ['olOnChange']\n            }], changeCenter$: [{\n                type: Output,\n                args: ['olOnChangeCenter']\n            }], changeResolution$: [{\n                type: Output,\n                args: ['olOnChangeResolution']\n            }], changeRotation$: [{\n                type: Output,\n                args: ['olOnChangeRotation']\n            }], error$: [{\n                type: Output,\n                args: ['olOnError']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olOnPropertychange']\n            }] } });\n\nclass ViewModule {\n}\nViewModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nViewModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewModule, declarations: [ViewComponent], imports: [CommonModule], exports: [ViewComponent] });\nViewModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ViewComponent\n                    ],\n                    exports: [\n                        ViewComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });\n\nclass NgOpenlayersModule {\n}\nNgOpenlayersModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NgOpenlayersModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgOpenlayersModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NgOpenlayersModule });\nNgOpenlayersModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NgOpenlayersModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NgOpenlayersModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [],\n                    imports: [],\n                    exports: []\n                }]\n        }] });\n\n/*\n * Public API Surface of ng-openlayers\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseImageLayerComponent, BaseImageLayerModule, BaseLayerComponent, BaseLayerModule, BaseLayerRef, BaseTileLayerComponent, BaseTileLayerModule, BaseVectorLayerComponent, BaseVectorLayerModule, CircleStyleComponent, CircleStyleModule, ClusterSourceComponent, ClusterSourceModule, ControlComponent, ControlModule, CoordinateToStringHdmsModule, CoordinateToStringHdmsPipe, CoordinateToStringXYModule, CoordinateToStringXYPipe, DataTileSourceComponent, DataTileSourceModule, DrawInteractionComponent, DrawInteractionModule, FillStyleComponent, FillStyleModule, FromLonLatModule, FromLonLatPipe, GeoTIFFSourceComponent, GeoTIFFSourceModule, GroupLayerComponent, GroupLayerModule, IconStyleComponent, IconStyleModule, ImageLayerComponent, ImageLayerModule, ImageSourceComponent, ImageSourceModule, ImageStyleComponent, ImageStyleModule, ImageWMSSourceComponent, ImageWMSSourceModule, InheritExtentModule, InheritExtentPipe, InteractionComponent, InteractionModule, LAYER_PROVIDER, LayerComponent, LayerModule, MapComponent, MapModule, ModifyInteractionComponent, ModifyInteractionModule, MousePositionComponent, MousePositionModule, NgOpenlayersModule, OSMSourceComponent, OSMSourceModule, OverlayComponent, OverlayContentDirective, OverlayModule, PinchZoomInteractionComponent, PinchZoomInteractionModule, PointerInteractionComponent, PointerInteractionModule, RegularShapeStyleComponent, RegularShapeStyleModule, ScaleLineComponent, ScaleLineModule, SelectInteractionComponent, SelectInteractionModule, SnapInteractionComponent, SnapInteractionModule, SourceComponent, SourceModule, StrokeStyleComponent, StrokeStyleModule, StyleComponent, StyleModule, TextStyleComponent, TextStyleModule, TileImageSourceComponent, TileImageSourceModule, TileLayerComponent, TileLayerModule, TileSourceComponent, TileSourceModule, ToLonLatModule, ToLonLatPipe, TransformExtentModule, TransformExtentPipe, UrlTileSourceComponent, UrlTileSourceModule, VectorLayerComponent, VectorLayerModule, VectorSourceComponent, VectorSourceModule, VectorTileLayerComponent, VectorTileLayerModule, VectorTileSourceComponent, VectorTileSourceModule, ViewComponent, ViewModule, WebGLTileLayerComponent, WebGLTileLayerModule, XYZSourceComponent, XYZSourceModule, ZoomComponent, ZoomModule, degreesToStringHDMS };\n//# sourceMappingURL=sspingme-ng-openlayers.mjs.map\n","map":{"version":3,"file":"sspingme-ng-openlayers.mjs","sources":["../../../projects/ng-openlayers/src/control/control/control.component.ts","../../../projects/ng-openlayers/src/control/control/control.module.ts","../../../projects/ng-openlayers/src/control/mouse-position/mouse-position.component.ts","../../../projects/ng-openlayers/src/control/mouse-position/mouse-position.module.ts","../../../projects/ng-openlayers/src/control/scale-line/scale-line.component.ts","../../../projects/ng-openlayers/src/control/scale-line/scale-line.module.ts","../../../projects/ng-openlayers/src/control/zoom/zoom.component.ts","../../../projects/ng-openlayers/src/control/zoom/zoom.module.ts","../../../projects/ng-openlayers/src/core/layer/layer.abstract.ts","../../../projects/ng-openlayers/src/core/layer/layer.provider.ts","../../../projects/ng-openlayers/src/core/pipes/coordinate-to-string-hdms/coordinate-to-string-hdms.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/coordinate-to-string-hdms/coordinate-to-string-hdms.module.ts","../../../projects/ng-openlayers/src/core/pipes/coordinate-to-string-xy/coordinate-to-string-xy.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/coordinate-to-string-xy/coordinate-to-string-xy.module.ts","../../../projects/ng-openlayers/src/core/pipes/from-lon-lat/from-lon-lat.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/from-lon-lat/from-lon-lat.module.ts","../../../projects/ng-openlayers/src/core/pipes/inherit-extent/inherit-extent.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/inherit-extent/inherit-extent.module.ts","../../../projects/ng-openlayers/src/core/pipes/to-lon-lat/to-lon-lat.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/to-lon-lat/to-lon-lat.module.ts","../../../projects/ng-openlayers/src/core/pipes/transform-extent/transform-extent.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/transform-extent/transform-extent.module.ts","../../../projects/ng-openlayers/src/interaction/interaction/interaction.component.ts","../../../projects/ng-openlayers/src/interaction/interaction/interaction.module.ts","../../../projects/ng-openlayers/src/interaction/pointer-interaction/pointer-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/pointer-interaction/pointer-interaction.module.ts","../../../projects/ng-openlayers/src/interaction/draw-interaction/draw-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/draw-interaction/draw-interaction.module.ts","../../../projects/ng-openlayers/src/interaction/modify-interaction/modify-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/modify-interaction/modify-interaction.module.ts","../../../projects/ng-openlayers/src/interaction/pinch-zoom-interaction/pinch-zoom-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/pinch-zoom-interaction/pinch-zoom-interaction.module.ts","../../../projects/ng-openlayers/src/interaction/select-interaction/select-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/select-interaction/select-interaction.module.ts","../../../projects/ng-openlayers/src/interaction/snap-interaction/snap-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/snap-interaction/snap-interaction.module.ts","../../../projects/ng-openlayers/src/source/source/source.component.ts","../../../projects/ng-openlayers/src/source/source/source.module.ts","../../../projects/ng-openlayers/src/source/image-source/image-source.component.ts","../../../projects/ng-openlayers/src/source/image-source/image-source.module.ts","../../../projects/ng-openlayers/src/layer/base-layer/base-layer.component.ts","../../../projects/ng-openlayers/src/layer/base-layer/base-layer.module.ts","../../../projects/ng-openlayers/src/layer/layer/layer.component.ts","../../../projects/ng-openlayers/src/layer/layer/layer.module.ts","../../../projects/ng-openlayers/src/layer/base-image-layer/base-image-layer.component.ts","../../../projects/ng-openlayers/src/layer/base-image-layer/base-image-layer.module.ts","../../../projects/ng-openlayers/src/source/tile-source/tile-source.component.ts","../../../projects/ng-openlayers/src/source/tile-source/tile-source.module.ts","../../../projects/ng-openlayers/src/layer/base-tile-layer/base-tile-layer.component.ts","../../../projects/ng-openlayers/src/layer/base-tile-layer/base-tile-layer.module.ts","../../../projects/ng-openlayers/src/source/vector-source/vector-source.component.ts","../../../projects/ng-openlayers/src/source/vector-source/vector-source.module.ts","../../../projects/ng-openlayers/src/style/style/style.component.ts","../../../projects/ng-openlayers/src/style/style/style.module.ts","../../../projects/ng-openlayers/src/layer/base-vector-layer/base-vector-layer.component.ts","../../../projects/ng-openlayers/src/layer/base-vector-layer/base-vector-layer.module.ts","../../../projects/ng-openlayers/src/layer/group-layer/group-layer.component.ts","../../../projects/ng-openlayers/src/layer/group-layer/group-layer.module.ts","../../../projects/ng-openlayers/src/layer/image-layer/image-layer.component.ts","../../../projects/ng-openlayers/src/layer/image-layer/image-layer.module.ts","../../../projects/ng-openlayers/src/layer/tile-layer/tile-layer.component.ts","../../../projects/ng-openlayers/src/layer/tile-layer/tile-layer.module.ts","../../../projects/ng-openlayers/src/layer/vector-layer/vector-layer.component.ts","../../../projects/ng-openlayers/src/layer/vector-layer/vector-layer.module.ts","../../../projects/ng-openlayers/src/source/url-tile-source/url-tile-source.component.ts","../../../projects/ng-openlayers/src/source/url-tile-source/url-tile-source.module.ts","../../../projects/ng-openlayers/src/source/vector-tile-source/vector-tile-source.component.ts","../../../projects/ng-openlayers/src/source/vector-tile-source/vector-tile-source.module.ts","../../../projects/ng-openlayers/src/layer/vector-tile-layer/vector-tile-layer.component.ts","../../../projects/ng-openlayers/src/layer/vector-tile-layer/vector-tile-layer.module.ts","../../../projects/ng-openlayers/src/source/data-tile-source/data-tile-source.component.ts","../../../projects/ng-openlayers/src/source/data-tile-source/data-tile-source.module.ts","../../../projects/ng-openlayers/src/source/geo-tiff-source/geo-tiff-source.component.ts","../../../projects/ng-openlayers/src/source/geo-tiff-source/geo-tiff-source.module.ts","../../../projects/ng-openlayers/src/layer/webgl-tile-layer/webgl-tile-layer.component.ts","../../../projects/ng-openlayers/src/layer/webgl-tile-layer/webgl-tile-layer.module.ts","../../../projects/ng-openlayers/src/overlay/overlay-content.directive.ts","../../../projects/ng-openlayers/src/overlay/overlay.component.ts","../../../projects/ng-openlayers/src/overlay/overlay.module.ts","../../../projects/ng-openlayers/src/map/map.component.ts","../../../projects/ng-openlayers/src/map/map.module.ts","../../../projects/ng-openlayers/src/source/cluster-source/cluster-source.component.ts","../../../projects/ng-openlayers/src/source/cluster-source/cluster-source.module.ts","../../../projects/ng-openlayers/src/source/image-wms-source/image-wms-source.component.ts","../../../projects/ng-openlayers/src/source/image-wms-source/image-wms-source.module.ts","../../../projects/ng-openlayers/src/source/tile-image-source/tile-image-source.component.ts","../../../projects/ng-openlayers/src/source/tile-image-source/tile-image-source.module.ts","../../../projects/ng-openlayers/src/source/xyz-source/xyz-source.component.ts","../../../projects/ng-openlayers/src/source/xyz-source/xyz-source.module.ts","../../../projects/ng-openlayers/src/source/osm-source/osm-source.component.ts","../../../projects/ng-openlayers/src/source/osm-source/osm-source.module.ts","../../../projects/ng-openlayers/src/style/image-style/image-style.component.ts","../../../projects/ng-openlayers/src/style/image-style/image-style.module.ts","../../../projects/ng-openlayers/src/style/regular-shape-style/regular-shape-style.component.ts","../../../projects/ng-openlayers/src/style/regular-shape-style/regular-shape-style.module.ts","../../../projects/ng-openlayers/src/style/circle-style/circle-style.component.ts","../../../projects/ng-openlayers/src/style/circle-style/circle-style.module.ts","../../../projects/ng-openlayers/src/style/text-style/text-style.component.ts","../../../projects/ng-openlayers/src/style/text-style/text-style.module.ts","../../../projects/ng-openlayers/src/style/fill-style/fill-style.component.ts","../../../projects/ng-openlayers/src/style/fill-style/fill-style.module.ts","../../../projects/ng-openlayers/src/style/icon-style/icon-style.component.ts","../../../projects/ng-openlayers/src/style/icon-style/icon-style.module.ts","../../../projects/ng-openlayers/src/style/stroke-style/stroke-style.component.ts","../../../projects/ng-openlayers/src/style/stroke-style/stroke-style.module.ts","../../../projects/ng-openlayers/src/view/view.component.ts","../../../projects/ng-openlayers/src/view/view.module.ts","../../../projects/ng-openlayers/src/ng-openlayers.module.ts","../../../projects/ng-openlayers/src/public-api.ts","../../../projects/ng-openlayers/src/sspingme-ng-openlayers.ts"],"sourcesContent":["import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { MapEvent } from 'ol';\nimport Control, { Options } from 'ol/control/Control';\nimport BaseEvent from 'ol/events/Event';\nimport { ObjectEvent } from 'ol/Object';\n\n@Component({\n  selector: 'ol-control',\n  exportAs: 'olControl',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ControlComponent implements OnInit, OnChanges, Options {\n\n  @Input('olElement') element?: HTMLElement;\n  @Input('olRender') render?: (p0: MapEvent) => void;\n  @Input('olTarget') target?: HTMLElement | string;\n\n  @Output('olChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n\n  instance!: Control;\n\n  constructor(\n    public elementRef: ElementRef<HTMLDivElement>,\n    public ngZone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.target) this.target = this.elementRef.nativeElement;\n\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new Control(this);\n      }\n      this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n      this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n      this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    const properties: { [key:string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const value = changes[key].currentValue;\n        switch (key) {\n          case 'target':\n            this.instance.setTarget(value);\n            break;\n          default:\n            properties[key] = value;\n            break;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length) {\n      this.instance.setProperties(properties);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlComponent } from './control.component';\n\n\n\n@NgModule({\n  declarations: [\n    ControlComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ControlComponent\n  ]\n})\nexport class ControlModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, Input, Output, EventEmitter, ElementRef, NgZone, OnChanges, SimpleChanges } from '@angular/core';\nimport MousePosition, { Options } from 'ol/control/MousePosition';\nimport { CoordinateFormat } from 'ol/coordinate';\nimport { ObjectEvent } from 'ol/Object';\nimport { ProjectionLike } from 'ol/proj';\nimport { ControlComponent } from '../control';\n\n@Component({\n  selector: 'ol-mouse-position',\n  exportAs: 'olMousePosition',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./mouse-position.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ControlComponent,\n      useExisting: forwardRef(() => MousePositionComponent),\n      multi: true\n    }\n  ]\n})\nexport class MousePositionComponent extends ControlComponent implements OnInit, OnChanges, Options {\n\n  @Input('olClassName') className?: string;\n  @Input('olCoordinateFormat') coordinateFormat?: CoordinateFormat;\n  @Input('olProjection') projection?: ProjectionLike;\n  @Input('olUndefinedHTML') undefinedHTML?: string;\n\n  @Output('olChangeCoordinateFormat') changeCoordinateFormat$ = new EventEmitter<ObjectEvent>();\n  @Output('olChangeProjection') changeProjection$ = new EventEmitter<ObjectEvent>();\n\n  instance!: MousePosition;\n\n  constructor(elementRef: ElementRef<HTMLDivElement>, ngZone: NgZone) {\n    super(elementRef, ngZone);\n    this.elementRef.nativeElement.classList.add('ol-mouse-position');\n  }\n\n  ngOnInit(): void {\n    if (!this.target) this.target = this.elementRef.nativeElement;\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new MousePosition(this);\n      this.instance.on('change:coordinateFormat', (event: ObjectEvent) => this.changeCoordinateFormat$.emit(event));\n      this.instance.on('change:projection', (event: ObjectEvent) => this.changeProjection$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { coordinateFormat, projection, ...others } = changes;\n    if (this.instance && coordinateFormat) this.instance.setCoordinateFormat(coordinateFormat.currentValue);\n    if (this.instance && projection) this.instance.setProjection(projection.currentValue);\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MousePositionComponent } from './mouse-position.component';\n\n\n\n@NgModule({\n  declarations: [\n    MousePositionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    MousePositionComponent\n  ]\n})\nexport class MousePositionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, Input, Output, EventEmitter, ElementRef, NgZone, OnChanges, SimpleChanges } from '@angular/core';\nimport ScaleLine, { Options, Units } from 'ol/control/ScaleLine';\nimport { ObjectEvent } from 'ol/Object';\nimport { ControlComponent } from '../control';\n\n@Component({\n  selector: 'ol-scale-line',\n  exportAs: 'olScaleLine',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./scale-line.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ControlComponent,\n      useExisting: forwardRef(() => ScaleLineComponent),\n      multi: true\n    }\n  ]\n})\nexport class ScaleLineComponent extends ControlComponent implements OnInit, OnChanges, Options {\n\n  @Input('olClassName') className?: string;\n  @Input('olMinWidth') minWidth?: number;\n  @Input('olUnits') units?: Units | string;\n  @Input('olBar') bar?: boolean;\n  @Input('olSteps') steps?: number;\n  @Input('olText') text?: boolean;\n  @Input('olDpi') dpi?: number;\n\n  @Output('olChangeUnits') changeUnits$ = new EventEmitter<ObjectEvent>();\n\n  instance!: ScaleLine\n\n  constructor(elementRef: ElementRef<HTMLDivElement>, ngZone: NgZone) {\n    super(elementRef, ngZone);\n    this.elementRef.nativeElement.classList.add('ol-control-scale-line');\n  }\n\n  ngOnInit(): void {\n    if (!this.target) this.target = this.elementRef.nativeElement;\n\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new ScaleLine(this);\n      this.instance.on('change:units', (event: ObjectEvent) => this.changeUnits$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { dpi, units, ...others } = changes;\n\n    if (this.instance && dpi) this.instance.setDpi(dpi.currentValue);\n    if (this.instance && units) this.instance.setUnits(units.currentValue);\n\n    super.ngOnChanges(changes);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScaleLineComponent } from './scale-line.component';\n\n\n\n@NgModule({\n  declarations: [\n    ScaleLineComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ScaleLineComponent\n  ]\n})\nexport class ScaleLineModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, ElementRef, NgZone, Input } from '@angular/core';\nimport Zoom, { Options } from 'ol/control/Zoom';\nimport { ControlComponent } from '../control';\n\n@Component({\n  selector: 'ol-zoom',\n  exportAs: 'olZoom',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./zoom.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ControlComponent,\n      useExisting: forwardRef(() => ZoomComponent),\n      multi: true\n    }\n  ]\n})\nexport class ZoomComponent extends ControlComponent implements OnInit, Options {\n\n  @Input('olDuration') duration?: number;\n  @Input('olClassName') className?: string;\n  @Input('olZoomInClassName') zoomInClassName?: string;\n  @Input('olZoomOutClassName') zoomOutClassName?: string;\n  @Input('olZoomInLabel') zoomInLabel?: string | HTMLElement;\n  @Input('olZoomOutLabel') zoomOutLabel?: string | HTMLElement;\n  @Input('olZoomInTipLabel') zoomInTipLabel?: string;\n  @Input('olZoomOutTipLabel') zoomOutTipLabel?: string;\n  @Input('olDelta') delta?: number;\n\n  instance!: Zoom;\n\n  constructor(elementRef: ElementRef<HTMLDivElement>, ngZone: NgZone) {\n    super(elementRef, ngZone);\n    this.elementRef.nativeElement.classList.add('ol-control-zoom');\n  }\n\n  ngOnInit(): void {\n    if (!this.target) this.target = this.elementRef.nativeElement;\n\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Zoom(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ZoomComponent } from './zoom.component';\n\n\n\n@NgModule({\n  declarations: [\n    ZoomComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ZoomComponent\n  ]\n})\nexport class ZoomModule { }\n","import BaseLayer from \"ol/layer/Base\";\n\nexport abstract class BaseLayerRef {\n  abstract instance: BaseLayer;\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { BaseLayerRef } from \"./layer.abstract\";\n\nexport const LAYER_PROVIDER = new InjectionToken<BaseLayerRef>('Layer Provider');\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Coordinate } from 'ol/coordinate';\nimport { modulo } from 'ol/math';\nimport { padNumber } from 'ol/string';\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} string.\n */\n export function degreesToStringHDMS(\n   hemispheres: 'NS'|'EW',\n   degrees: number,\n   options?: {\n     template?: string,\n     fractionDigits?: number\n   }): string {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const template: string = options && typeof options.template === 'string'\n    ? options.template\n    : '{H} {D}\\u00b0{M}\\u2032{S}\\u2033';\n  const dflPrecision = options && typeof options.fractionDigits === 'number' ? options.fractionDigits : 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return template\n    .replace('{H}', normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n    .replace('{D}', `${deg}`)\n    .replace('{M}', padNumber(min, 2))\n    .replace('{S}', padNumber(sec, 2, dflPrecision));\n}\n\n@Pipe({\n  name: 'coordinateToStringHdms'\n})\nexport class CoordinateToStringHdmsPipe implements PipeTransform {\n\n  transform(value: Coordinate, opt_fractionDigits?: number): string {\n    return [\n      degreesToStringHDMS('EW', value[0], { fractionDigits: opt_fractionDigits }),\n      degreesToStringHDMS('NS', value[1], { fractionDigits: opt_fractionDigits })\n    ]\n    .join(', ');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoordinateToStringHdmsPipe } from './coordinate-to-string-hdms.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    CoordinateToStringHdmsPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CoordinateToStringHdmsPipe\n  ]\n})\nexport class CoordinateToStringHdmsModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Coordinate, format } from 'ol/coordinate';\n\n@Pipe({\n  name: 'coordinateToStringXY',\n  pure: true\n})\nexport class CoordinateToStringXYPipe implements PipeTransform {\n\n  transform(value: Coordinate, opt_fractionDigits?: number): string {\n    return format(value, `{x}º, {y}º`, opt_fractionDigits);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoordinateToStringXYPipe } from './coordinate-to-string-xy.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    CoordinateToStringXYPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CoordinateToStringXYPipe\n  ]\n})\nexport class CoordinateToStringXYModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Coordinate } from 'ol/coordinate';\nimport { fromLonLat, ProjectionLike } from 'ol/proj';\n\n@Pipe({\n  name: 'fromLonLat',\n  pure: true\n})\nexport class FromLonLatPipe implements PipeTransform {\n\n  transform(coordinate: Coordinate, opt_projection?: ProjectionLike): Coordinate {\n    return fromLonLat(coordinate, opt_projection);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FromLonLatPipe } from './from-lon-lat.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    FromLonLatPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    FromLonLatPipe\n  ]\n})\nexport class FromLonLatModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Extent } from 'ol/extent';\n\n@Pipe({\n  name: 'inheritExtent'\n})\nexport class InheritExtentPipe implements PipeTransform {\n\n  transform(value: Extent|'inherit'|undefined, inheritExtent: Extent): Extent {\n    return value === 'inherit' ? inheritExtent : value as Extent;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InheritExtentPipe } from './inherit-extent.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    InheritExtentPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    InheritExtentPipe\n  ]\n})\nexport class InheritExtentModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Coordinate } from 'ol/coordinate';\nimport { ProjectionLike, toLonLat } from 'ol/proj';\n\n@Pipe({\n  name: 'toLonLat'\n})\nexport class ToLonLatPipe implements PipeTransform {\n\n  transform(value: Coordinate, opt_projection?: ProjectionLike): Coordinate {\n    return toLonLat(value, opt_projection);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToLonLatPipe } from './to-lon-lat.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    ToLonLatPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ToLonLatPipe\n  ]\n})\nexport class ToLonLatModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Extent } from 'ol/extent';\nimport { ProjectionLike, transformExtent } from 'ol/proj';\n\n@Pipe({\n  name: 'transformExtent',\n  pure: true\n})\nexport class TransformExtentPipe implements PipeTransform {\n\n  transform(extent: Extent, ...args: unknown[]): Extent {\n    const source: ProjectionLike = args[0] !== undefined ? args[0] as ProjectionLike : 'EPSG:4326';\n    const destination: ProjectionLike = args[1] !== undefined ? args[1] as ProjectionLike : 'EPSG:3857';\n    const stops: number = args[2] as number;\n    return transformExtent(extent, source, destination, stops);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TransformExtentPipe } from './transform-extent.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    TransformExtentPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TransformExtentPipe\n  ]\n})\nexport class TransformExtentModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, NgZone, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { MapBrowserEvent } from 'ol';\nimport BaseEvent from 'ol/events/Event';\nimport Interaction, { InteractionOptions } from 'ol/interaction/Interaction';\nimport { ObjectEvent } from 'ol/Object';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'ol-interaction',\n  exportAs: 'olInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InteractionComponent implements OnInit, OnChanges, OnDestroy, InteractionOptions {\n\n  @Input('olHandleEvent') handleEvent!: (p0: MapBrowserEvent<UIEvent>) => boolean;\n  @Input('olActive') active: boolean = true;\n\n  @Output('olChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olChangeActive') changeActive$ = new EventEmitter<ObjectEvent>();\n  @Output('olError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n\n  instance!: Interaction;\n  public readonly destroy$ = new Subject<void>();\n\n  constructor(public ngZone: NgZone) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new Interaction(this);\n      }\n      this.instance.setActive(this.active);\n      this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n      this.instance.on('change:active', (event: ObjectEvent) => this.changeActive$.emit(event));\n      this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n      this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    const properties: { [key:string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const value = changes[key].currentValue;\n        if (key === 'active') {\n          this.instance.setActive(value);\n        } else {\n          properties[key] = value;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length) {\n      this.instance.setProperties(properties);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InteractionComponent } from './interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    InteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    InteractionComponent\n  ]\n})\nexport class InteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, NgZone, Input, forwardRef } from '@angular/core';\nimport { MapBrowserEvent } from 'ol';\nimport PointerInteraction, { Options } from 'ol/interaction/Pointer';\nimport { InteractionComponent } from '../interaction';\n\n@Component({\n  selector: 'ol-pointer-interaction',\n  exportAs: 'olPointerInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: InteractionComponent,\n    useExisting: forwardRef(() => PointerInteractionComponent),\n    multi: true\n  }]\n})\nexport class PointerInteractionComponent extends InteractionComponent implements OnInit, Options {\n\n  @Input('olHandleDownEvent') handleDownEvent?: (p0: MapBrowserEvent<UIEvent>) => boolean;\n  @Input('olHandleDragEvent') handleDragEvent?: (p0: MapBrowserEvent<UIEvent>) => void;\n  @Input('olHandleMoveEvent') handleMoveEvent?: (p0: MapBrowserEvent<UIEvent>) => void;\n  @Input('olHandleUpEvent') handleUpEvent?: (p0: MapBrowserEvent<UIEvent>) => boolean;\n  @Input('olStopDown') stopDown?: (p0: boolean) => boolean;\n\n  instance!: PointerInteraction;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new PointerInteraction(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PointerInteractionComponent } from './pointer-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    PointerInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PointerInteractionComponent\n  ]\n})\nexport class PointerInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, NgZone, forwardRef, Input, Output, EventEmitter } from '@angular/core';\nimport { Collection, Feature } from 'ol';\nimport { Condition } from 'ol/events/condition';\nimport Geometry from 'ol/geom/Geometry';\nimport Draw, { DrawEvent, GeometryFunction } from 'ol/interaction/Draw';\nimport VectorSource from 'ol/source/Vector';\nimport { StyleLike } from 'ol/style/Style';\nimport { GeometryType } from '../../core/models';\nimport { InteractionComponent } from '../interaction';\nimport { PointerInteractionComponent } from '../pointer-interaction';\n\nexport type DrawInteractionType\n  = 'Circle'\n  | 'LineString'\n  | 'Point'\n  | 'Polygon';\n\n@Component({\n  selector: 'ol-draw-interaction',\n  exportAs: 'olDrawInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: InteractionComponent,\n      useExisting: forwardRef(() => DrawInteractionComponent),\n      multi: true\n    },\n    {\n      provide: PointerInteractionComponent,\n      useExisting: forwardRef(() => DrawInteractionComponent),\n      multi: true\n    }\n  ]\n})\nexport class DrawInteractionComponent extends PointerInteractionComponent implements OnInit {\n\n  @Input('olType') type!: DrawInteractionType;\n  @Input('olClickTolerance') clickTolerance?: number;\n  @Input('olFeatures') features?: Collection<Feature<Geometry>>;\n  @Input('olSource') source?: VectorSource<Geometry>;\n  @Input('olDragVertexDelay') dragVertexDelay?: number;\n  @Input('olSnapTolerance') snapTolerance?: number;\n  @Input('olStopClick') stopClick?: boolean;\n  @Input('olMaxPoints') maxPoints?: number;\n  @Input('olMinPoints') minPoints?: number;\n  @Input('olFinishCondition') finishCondition?: Condition;\n  @Input('olStyle') style?: StyleLike;\n  @Input('olGeometryFunction') geometryFunction?: GeometryFunction;\n  @Input('olGeometryName') geometryName?: string;\n  @Input('olCondition') condition?: Condition;\n  @Input('olFreehand') freehand?: boolean;\n  @Input('olFreehandCondition') freehandCondition?: Condition;\n  @Input('olWrapX') wrapX?: boolean;\n\n  @Output('olDrawabort') drawabort$ = new EventEmitter<DrawEvent>();\n  @Output('olDrawend') drawend$ = new EventEmitter<DrawEvent>();\n  @Output('olDrawstart') drawstart$ = new EventEmitter<DrawEvent>();\n\n  instance!: Draw;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      const type = this.type as GeometryType;\n      this.instance = new Draw({ ...this, type });\n      this.instance.on('drawabort', (event: DrawEvent) => this.drawabort$.emit(event));\n      this.instance.on('drawend', (event: DrawEvent) => this.drawend$.emit(event));\n      this.instance.on('drawstart', (event: DrawEvent) => this.drawstart$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DrawInteractionComponent } from './draw-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    DrawInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DrawInteractionComponent\n  ]\n})\nexport class DrawInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone, Input, Output, EventEmitter } from '@angular/core';\nimport { Collection, Feature } from 'ol';\nimport { Condition } from 'ol/events/condition';\nimport Geometry from 'ol/geom/Geometry';\nimport Modify, { ModifyEvent, Options } from 'ol/interaction/Modify';\nimport BaseVectorLayer from 'ol/layer/BaseVector';\nimport CanvasVectorImageLayerRenderer from 'ol/renderer/canvas/VectorImageLayer';\nimport CanvasVectorLayerRenderer from 'ol/renderer/canvas/VectorLayer';\nimport CanvasVectorTileLayerRenderer from 'ol/renderer/canvas/VectorTileLayer';\nimport WebGLPointsLayerRenderer from 'ol/renderer/webgl/PointsLayer';\nimport VectorSource from 'ol/source/Vector';\nimport VectorTile from 'ol/source/VectorTile';\nimport { StyleLike } from 'ol/style/Style';\nimport { InteractionComponent } from '../interaction';\nimport { PointerInteractionComponent } from '../pointer-interaction';\n\n@Component({\n  selector: 'ol-modify-interaction',\n  exportAs: 'olModifyInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: InteractionComponent,\n      useExisting: forwardRef(() => ModifyInteractionComponent),\n      multi: true\n    },\n    {\n      provide: PointerInteractionComponent,\n      useExisting: forwardRef(() => ModifyInteractionComponent),\n      multi: true\n    }\n  ]\n})\nexport class ModifyInteractionComponent extends PointerInteractionComponent implements OnInit, Options {\n\n  @Input('olCondition') condition?: Condition;\n  @Input('olCeleteCondition') deleteCondition?: Condition;\n  @Input('olInsertVertexCondition') insertVertexCondition?: Condition;\n  @Input('olPixelTolerance') pixelTolerance?: number;\n  @Input('olStyle') style?: StyleLike;\n  @Input('olSource') source?: VectorSource<Geometry>;\n  @Input('olHitDetection') hitDetection?: boolean | BaseVectorLayer<VectorSource<Geometry> | VectorTile, CanvasVectorLayerRenderer | CanvasVectorTileLayerRenderer | CanvasVectorImageLayerRenderer | WebGLPointsLayerRenderer>;\n  @Input('olFeatures') features?: Collection<Feature<Geometry>>;\n  @Input('olWrapX') wrapX?: boolean;\n\n  @Output('olModifyend') modifyend$ = new EventEmitter<ModifyEvent>();\n  @Output('olModifystart') modifystart$ = new EventEmitter<ModifyEvent>();\n\n  instance!: Modify;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Modify(this);\n      this.instance.on('modifyend', (event: ModifyEvent) => this.modifyend$.emit(event));\n      this.instance.on('modifystart', (event: ModifyEvent) => this.modifystart$.emit(event));\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModifyInteractionComponent } from './modify-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    ModifyInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ModifyInteractionComponent\n  ]\n})\nexport class ModifyInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, Input, NgZone } from '@angular/core';\nimport PinchZoom, { Options } from 'ol/interaction/PinchZoom';\nimport { InteractionComponent } from '../interaction';\nimport { PointerInteractionComponent } from '../pointer-interaction';\n\n@Component({\n  selector: 'ol-pinch-zoom-interaction',\n  exportAs: 'olPinchZoomInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: InteractionComponent,\n    useExisting: forwardRef(() => PinchZoomInteractionComponent),\n    multi: true\n  }]\n})\nexport class PinchZoomInteractionComponent extends PointerInteractionComponent implements OnInit, Options {\n\n  @Input('olDuration') duration?: number;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new PinchZoom(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PinchZoomInteractionComponent } from './pinch-zoom-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    PinchZoomInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PinchZoomInteractionComponent\n  ]\n})\nexport class PinchZoomInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { Collection, Feature } from 'ol';\nimport { Condition } from 'ol/events/condition';\nimport Geometry from 'ol/geom/Geometry';\nimport Select, { FilterFunction, Options, SelectEvent } from 'ol/interaction/Select';\nimport Layer from 'ol/layer/Layer';\nimport Source from 'ol/source/Source';\nimport { StyleLike } from 'ol/style/Style';\nimport { InteractionComponent } from '../interaction';\n\n@Component({\n  selector: 'ol-select-interaction',\n  exportAs: 'olSelectInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: InteractionComponent,\n    useExisting: forwardRef(() => SelectInteractionComponent),\n    multi: true\n  }]\n})\nexport class SelectInteractionComponent extends InteractionComponent implements OnInit, OnChanges, Options {\n\n  @Input('olAddCondition') addCondition?: Condition;\n  @Input('olCondition') condition?: Condition;\n  @Input('olLayers') layers?: Layer<Source>[] | ((p0: Layer<Source>) => boolean);\n  @Input('olStyle') style?: StyleLike;\n  @Input('olRemoveCondition') removeCondition?: Condition;\n  @Input('olToggleCondition') toggleCondition?: Condition;\n  @Input('olMulti') multi?: boolean;\n  @Input('olFeatures') features?: Collection<Feature<Geometry>>;\n  @Input('olFilter') filter?: FilterFunction;\n  @Input('olHitTolerance') hitTolerance?: number;\n\n  @Output('olSelect') select$ = new EventEmitter<SelectEvent>();\n\n  instance!: Select;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Select(this);\n      this.instance.on('select', (event: SelectEvent) => this.select$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { hitTolerance, ...others } = changes;\n    if (this.instance) {\n      if (hitTolerance) this.instance.setHitTolerance(hitTolerance.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelectInteractionComponent } from './select-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    SelectInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SelectInteractionComponent\n  ]\n})\nexport class SelectInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone, Input } from '@angular/core';\nimport { Collection, Feature } from 'ol';\nimport Geometry from 'ol/geom/Geometry';\nimport Snap, { Options } from 'ol/interaction/Snap';\nimport VectorSource from 'ol/source/Vector';\nimport { InteractionComponent } from '../interaction';\nimport { PointerInteractionComponent } from '../pointer-interaction';\n\n@Component({\n  selector: 'ol-snap-interaction',\n  exportAs: 'olSnapInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: InteractionComponent,\n      useExisting: forwardRef(() => SnapInteractionComponent),\n      multi: true\n    },\n    {\n      provide: PointerInteractionComponent,\n      useExisting: forwardRef(() => SnapInteractionComponent),\n      multi: true\n    }\n  ]\n})\nexport class SnapInteractionComponent extends PointerInteractionComponent implements OnInit, Options {\n\n  @Input('olFeatures') features?: Collection<Feature<Geometry>>;\n  @Input('olEdge') edge?: boolean;\n  @Input('olVertex') vertex?: boolean;\n  @Input('olPixelTolerance') pixelTolerance?: number;\n  @Input('olSource') source?: VectorSource<Geometry>;\n\n  instance!: Snap;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Snap(this);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SnapInteractionComponent } from './snap-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    SnapInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SnapInteractionComponent\n  ]\n})\nexport class SnapInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, OnChanges, SimpleChanges, NgZone } from '@angular/core';\nimport BaseEvent from 'ol/events/Event';\nimport { ObjectEvent } from 'ol/Object';\nimport { ProjectionLike } from 'ol/proj';\nimport Source, { AttributionLike, Options } from 'ol/source/Source';\nimport { State } from './source.model';\n\n@Component({\n  selector: 'ol-source',\n  exportAs: 'olSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SourceComponent implements OnInit, OnChanges, Options {\n\n  @Input('olAttributions') attributions?: AttributionLike;\n  @Input('olAttributionsCollapsible') attributionsCollapsible?: boolean;\n  @Input('olProjection') projection?: ProjectionLike;\n  @Input('olState') state?: State;\n  @Input('olWrapX') wrapX?: boolean;\n\n  @Output('olOnChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olOnError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olOnPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n\n  instance!: Source;\n\n  constructor(public ngZone: NgZone) { }\n\n  ngOnInit(): void {\n    this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n    this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n\n    const properties: { [key: string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        if (key === 'attributions') {\n          this.instance.setAttributions(val);\n        } else if (key === 'state') {\n          this.instance.setState(val);\n        } else {\n          properties[key] = val;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length > 0) {\n      this.instance.setProperties(properties);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SourceComponent } from './source.component';\n\n\n\n@NgModule({\n  declarations: [\n    SourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SourceComponent\n  ]\n})\nexport class SourceModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, OnInit, NgZone } from '@angular/core';\nimport ImageSource, { ImageSourceEvent, Options } from 'ol/source/Image';\nimport { SourceComponent } from '../source';\n\n@Component({\n  selector: 'ol-image-source',\n  exportAs: 'olImageSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageSourceComponent extends SourceComponent implements OnInit, Options {\n\n  @Input('olImageSmoothing') imageSmoothing?: boolean;\n  @Input('olResolutions') resolutions?: number[];\n\n  @Output('imageloadend') imageloadend$ = new EventEmitter<ImageSourceEvent>();\n  @Output('imageloaderror') imageloaderror$ = new EventEmitter<ImageSourceEvent>();\n  @Output('imageloadstart') imageloadstart$ = new EventEmitter<ImageSourceEvent>();\n\n  instance!: ImageSource;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    if (this.instance) {\n      this.instance.on('imageloadend', (event: ImageSourceEvent) => this.imageloadend$.emit(event));\n      this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.imageloaderror$.emit(event));\n      this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.imageloadstart$.emit(event));\n    }\n    super.ngOnInit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageSourceComponent } from './image-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    ImageSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ImageSourceComponent\n  ]\n})\nexport class ImageSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, SimpleChanges, Input, Output, EventEmitter, forwardRef, OnDestroy, NgZone } from '@angular/core';\nimport BaseEvent from 'ol/events/Event';\nimport { Extent } from 'ol/extent';\nimport BaseLayer, { Options } from 'ol/layer/Base';\nimport { ObjectEvent } from 'ol/Object';\nimport { Subject } from 'rxjs';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\n\n@Component({\n  selector: 'ol-base-layer',\n  exportAs: 'olBaseLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => BaseLayerComponent),\n    multi: true\n  }]\n})\nexport class BaseLayerComponent implements OnInit, OnChanges, OnDestroy, BaseLayerRef, Options {\n\n  @Input('olClassName') className?: string;\n  @Input('olOpacity') opacity?: number;\n  @Input('olVisible') visible?: boolean;\n  @Input('olExtent') extent?: Extent;\n  @Input('olZIndex') zIndex?: number;\n  @Input('olMinResolution') minResolution?: number;\n  @Input('olMaxResolution') maxResolution?: number;\n  @Input('olMinZoom') minZoom?: number;\n  @Input('olMaxZoom') maxZoom?: number;\n\n  @Output('olOnChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olOnChangeExtent') changeExtent$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeMaxResolution') changeMaxResolution$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeMaxZoom') changeMaxZoom$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeMinResolution') changeMinResolution$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeMinZoom') changeMinZoom$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeOpacity') changeOpacity$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeSource') changeSource$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeVisible') changeVisible$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeZIndex') changeZIndex$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olOnPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n\n  instance!: BaseLayer;\n  destroy$ = new Subject<void>();\n\n  constructor(public ngZone: NgZone) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new BaseLayer(this);\n      }\n      this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n      this.instance.on('change:extent', (event: ObjectEvent) => this.changeExtent$.emit(event));\n      this.instance.on('change:maxResolution', (event: ObjectEvent) => this.changeMaxResolution$.emit(event));\n      this.instance.on('change:maxZoom', (event: ObjectEvent) => this.changeMaxZoom$.emit(event));\n      this.instance.on('change:minResolution', (event: ObjectEvent) => this.changeMinResolution$.emit(event));\n      this.instance.on('change:minZoom', (event: ObjectEvent) => this.changeMinZoom$.emit(event));\n      this.instance.on('change:opacity', (event: ObjectEvent) => this.changeOpacity$.emit(event));\n      this.instance.on('change:visible', (event: ObjectEvent) => this.changeVisible$.emit(event));\n      this.instance.on('change:zIndex', (event: ObjectEvent) => this.changeZIndex$.emit(event));\n      this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n      this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n\n    const properties: { [key: string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n\n        switch (key) {\n          case 'extent':\n            this.instance.setExtent(val);\n            break;\n          case 'maxResolution':\n            this.instance.setMaxResolution(val);\n            break;\n          case 'maxZoom':\n            this.instance.setMaxZoom(val);\n            break;\n          case 'minResolution':\n            this.instance.setMinResolution(val);\n            break;\n          case 'minZoom':\n            this.instance.setMinZoom(val);\n            break;\n          case 'opacity':\n            this.instance.setOpacity(val);\n            break;\n          case 'visible':\n            this.instance.setVisible(val);\n            break;\n          case 'zIndex':\n            this.instance.setZIndex(val);\n            break;\n          default:\n            properties[key] = val;\n            break;\n        }\n\n      }\n    }\n\n    if (Object.keys(properties).length > 0) {\n      this.instance.setProperties(properties);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseLayerComponent } from './base-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    BaseLayerComponent\n  ],\n  exports: [\n    BaseLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class BaseLayerModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, OnChanges, SimpleChanges, Output, EventEmitter, OnInit, forwardRef, AfterContentInit, ContentChildren, QueryList, NgZone } from '@angular/core';\nimport { PluggableMap } from 'ol';\nimport Layer, { Options, RenderFunction } from 'ol/layer/Layer';\nimport RenderEvent from 'ol/render/Event';\nimport Source from 'ol/source/Source';\nimport { distinctUntilChanged, map, startWith, takeUntil } from 'rxjs/operators';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { SourceComponent } from '../../source/source';\nimport { BaseLayerComponent } from '../base-layer';\n\n@Component({\n  selector: 'ol-layer',\n  exportAs: 'olLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => LayerComponent),\n    multi: true\n  }]\n})\nexport class LayerComponent extends BaseLayerComponent implements OnInit, OnChanges, AfterContentInit, BaseLayerRef, Options<Source> {\n\n  @Input('olSource') source?: Source;\n  @Input('olMap') map?: PluggableMap;\n  @Input('olRender') render?: RenderFunction;\n\n  @Output('olOnPostrender') postrender$ = new EventEmitter<RenderEvent>();\n  @Output('olOnPrerender') prerender$ = new EventEmitter<RenderEvent>();\n\n  @ContentChildren(SourceComponent) sourceComponents!: QueryList<SourceComponent>;\n\n  instance!: Layer<Source>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new Layer(this);\n      }\n      this.instance.on('postrender', (event: RenderEvent) => this.postrender$.emit(event));\n      this.instance.on('prerender', (event: RenderEvent) => this.prerender$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { source, map, ...others } = changes;\n\n    if (this.instance && source) this.instance.setSource(source.currentValue);\n    if (this.instance && map) this.instance.setMap(source.currentValue);\n\n    super.ngOnChanges(others);\n  }\n\n  ngAfterContentInit(): void {\n    this.sourceComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.sourceComponents),\n        map((sources: QueryList<SourceComponent>) => sources.last?.instance),\n        distinctUntilChanged()\n      )\n      .subscribe(source => this.instance.setSource(source));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayerComponent } from './layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    LayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LayerComponent\n  ]\n})\nexport class LayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, Input, ContentChildren, QueryList, NgZone } from '@angular/core';\nimport BaseImageLayer, { Options } from 'ol/layer/BaseImage';\nimport LayerRenderer from 'ol/renderer/Layer';\nimport ImageSource from 'ol/source/Image';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { ImageSourceComponent } from '../../source/image-source';\nimport { LayerComponent } from '../layer';\n\n@Component({\n  selector: 'ol-base-image-layer',\n  exportAs: 'olBaseImageLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => BaseImageLayerComponent),\n    multi: true\n  }]\n})\nexport class BaseImageLayerComponent<ImageSourceType extends ImageSource, RendererType extends LayerRenderer<any>> extends LayerComponent implements OnInit, BaseLayerRef, Options<ImageSourceType> {\n\n  @Input('olSource') source?: ImageSourceType;\n\n  @ContentChildren(ImageSourceComponent) sources!: QueryList<ImageSourceComponent>;\n\n  instance!: BaseImageLayer<ImageSourceType, RendererType>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    if (!this.instance) {\n      this.ngZone.runOutsideAngular(() => this.instance = new BaseImageLayer<ImageSourceType, RendererType>(this));\n    }\n    super.ngOnInit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseImageLayerComponent } from './base-image-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    BaseImageLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BaseImageLayerComponent\n  ]\n})\nexport class BaseImageLayerModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgZone } from '@angular/core';\nimport TileSource, { Options } from 'ol/source/Tile';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { SourceComponent } from '../source';\n\n@Component({\n  selector: 'ol-tile-source',\n  exportAs: 'olTileSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TileSourceComponent extends SourceComponent implements Options {\n\n  @Input() cacheSize?: number;\n  @Input() opaque?: boolean;\n  @Input() tilePixelRatio?: number;\n  @Input() tileGrid?: TileGrid;\n  @Input() transition?: number;\n  @Input() key?: string;\n  @Input() zDirection?: number;\n\n  instance!: TileSource;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TileSourceComponent } from './tile-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    TileSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TileSourceComponent\n  ]\n})\nexport class TileSourceModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, SimpleChanges, Input, Output, EventEmitter, OnInit, forwardRef, ContentChildren, QueryList, NgZone } from '@angular/core';\nimport BaseTileLayer, { Options } from 'ol/layer/BaseTile';\nimport { ObjectEvent } from 'ol/Object';\nimport LayerRenderer from 'ol/renderer/Layer';\nimport TileSource from 'ol/source/Tile';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { SourceComponent } from '../../source/source';\nimport { TileSourceComponent } from '../../source/tile-source';\nimport { LayerComponent } from '../layer';\n\n@Component({\n  selector: 'ol-base-tile-layer',\n  exportAs: 'olBaseTileLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => BaseTileLayerComponent),\n    multi: true\n  }]\n})\nexport class BaseTileLayerComponent<TileSourceType extends TileSource, RendererType extends LayerRenderer<any>> extends LayerComponent implements OnInit, OnChanges, BaseLayerRef, Options<TileSourceType> {\n\n  @Input('olPreload') preload?: number;\n  @Input('olSource') source?: TileSourceType;\n  @Input('olUseInterimTilesOnError') useInterimTilesOnError?: boolean;\n\n  @Output('olOnChangePreload') changePreload$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeUseInterimTilesOnError') changeUseInterimTilesOnError$ = new EventEmitter<ObjectEvent>();\n\n  @ContentChildren(TileSourceComponent) sourceComponents!: QueryList<SourceComponent>;\n\n  instance!: BaseTileLayer<TileSourceType, RendererType>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new BaseTileLayer(this);\n      }\n      this.instance.on('change:preload', (event: ObjectEvent) => this.changePreload$.emit(event));\n      this.instance.on('change:useInterimTilesOnError', (event: ObjectEvent) => this.changeUseInterimTilesOnError$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { preload, useInterimTilesOnError, ...others } = changes;\n\n    if (this.instance && preload) this.instance.setPreload(preload.currentValue);\n    if (this.instance && useInterimTilesOnError) this.instance.setUseInterimTilesOnError(useInterimTilesOnError.currentValue);\n\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseTileLayerComponent } from './base-tile-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    BaseTileLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BaseTileLayerComponent\n  ]\n})\nexport class BaseTileLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, Input, SimpleChanges, Output, EventEmitter, NgZone } from '@angular/core';\nimport { Collection, Feature } from 'ol';\nimport BaseEvent from 'ol/events/Event';\nimport { FeatureLoader, FeatureUrlFunction } from 'ol/featureloader';\nimport FeatureFormat from 'ol/format/Feature';\nimport Geometry from 'ol/geom/Geometry';\nimport VectorSource, { LoadingStrategy, Options, VectorSourceEvent } from 'ol/source/Vector';\nimport { SourceComponent } from '../source';\n\n@Component({\n  selector: 'ol-vector-source',\n  exportAs: 'olVectorSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VectorSourceComponent extends SourceComponent implements OnInit, OnChanges, Options {\n\n  @Input('olFeatures') features?: Feature<Geometry>[] | Collection<Feature<Geometry>>;\n  @Input('olFormat') format?: FeatureFormat;\n  @Input('olLoader') loader?: FeatureLoader;\n  @Input('olOverlaps') overlaps?: boolean;\n  @Input('olStrategy') strategy?: LoadingStrategy;\n  @Input('olUrl') url?: string | FeatureUrlFunction;\n  @Input('olUseSpatialIndex') useSpatialIndex?: boolean;\n\n  @Output('olOnAddfeature') addfeature$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n  @Output('olOnChangefeature') changefeature$ = new EventEmitter<BaseEvent>();\n  @Output('olOnClear') clear$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n  @Output('olOnFeaturesloadend') featuresloadend$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n  @Output('olOnFeaturesloaderror') featuresloaderror$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n  @Output('olOnFeaturesloadstart') featuresloadstart$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n  @Output('olOnRemovefeature') removefeature$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n\n  instance!: VectorSource<Geometry>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new VectorSource(this);\n      }\n      this.instance.on('addfeature', (event: VectorSourceEvent<Geometry>) => this.addfeature$.emit(event));\n      this.instance.on('changefeature', (event: BaseEvent) => this.changefeature$.emit(event));\n      this.instance.on('clear', (event: VectorSourceEvent<Geometry>) => this.clear$.emit(event));\n      this.instance.on('featuresloadend', (event: VectorSourceEvent<Geometry>) => this.featuresloadend$.emit(event));\n      this.instance.on('featuresloaderror', (event: VectorSourceEvent<Geometry>) => this.featuresloaderror$.emit(event));\n      this.instance.on('featuresloadstart', (event: VectorSourceEvent<Geometry>) => this.featuresloadstart$.emit(event));\n      this.instance.on('removefeature', (event: VectorSourceEvent<Geometry>) => this.removefeature$.emit(event));\n\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { loader, url, features, ...others } = changes;\n    if (this.instance) {\n      if (loader) this.instance.setLoader(loader.currentValue);\n      if (url) this.instance.setUrl(url.currentValue);\n      if (features) {\n        this.instance.clear();\n        this.instance.addFeatures(features.currentValue);\n      }\n    }\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VectorSourceComponent } from './vector-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    VectorSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    VectorSourceComponent\n  ]\n})\nexport class VectorSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, SimpleChanges, Input, NgZone } from '@angular/core';\nimport Geometry from 'ol/geom/Geometry';\nimport Style, { GeometryFunction, Options, RenderFunction } from 'ol/style/Style';\nimport Stroke from 'ol/style/Stroke';\nimport Fill from 'ol/style/Fill';\nimport ImageStyle from 'ol/style/Image';\nimport Text from 'ol/style/Text';\n\n@Component({\n  selector: 'ol-style',\n  exportAs: 'olStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StyleComponent implements OnInit, OnChanges, Options {\n\n  @Input('olGeometry') geometry?: string | Geometry | GeometryFunction;\n  @Input('olFill') fill?: Fill;\n  @Input('olImage') image?: ImageStyle;\n  @Input('olRenderer') renderer?: RenderFunction;\n  @Input('olStroke') stroke?: Stroke;\n  @Input('olText') text?: Text;\n  @Input('olZIndex') zIndex?: number;\n\n  instance!: Style;\n\n  constructor(private ngZone: NgZone) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Style(this);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'geometry':\n            this.instance.setGeometry(val);\n            break;\n          case 'fill':\n            this.instance.setFill(val);\n            break;\n          case 'image':\n            this.instance.setImage(val);\n            break;\n          case 'renderer':\n            this.instance.setRenderer(val);\n            break;\n          case 'stroke':\n            this.instance.setStroke(val);\n            break;\n          case 'text':\n            this.instance.setText(val);\n            break;\n          case 'zIndex':\n            this.instance.setZIndex(val);\n            break;\n        }\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StyleComponent } from './style.component';\n\n\n\n@NgModule({\n  declarations: [\n    StyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    StyleComponent\n  ]\n})\nexport class StyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, OnChanges, Input, SimpleChanges, ContentChildren, QueryList, AfterContentInit, NgZone } from '@angular/core';\nimport Geometry from 'ol/geom/Geometry';\nimport BaseVectorLayer, { Options } from 'ol/layer/BaseVector';\nimport { OrderFunction } from 'ol/render';\nimport CanvasVectorImageLayerRenderer from 'ol/renderer/canvas/VectorImageLayer';\nimport CanvasVectorLayerRenderer from 'ol/renderer/canvas/VectorLayer';\nimport CanvasVectorTileLayerRenderer from 'ol/renderer/canvas/VectorTileLayer';\nimport WebGLPointsLayerRenderer from 'ol/renderer/webgl/PointsLayer';\nimport VectorSource from 'ol/source/Vector';\nimport VectorTile from 'ol/source/VectorTile';\nimport Style, { StyleLike } from 'ol/style/Style';\nimport { distinctUntilChanged, map, startWith, takeUntil } from 'rxjs/operators';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { SourceComponent } from '../../source/source';\nimport { VectorSourceComponent } from '../../source/vector-source';\nimport { StyleComponent } from '../../style/style';\nimport { LayerComponent } from '../layer';\n\n@Component({\n  selector: 'ol-base-vector-layer',\n  exportAs: 'olBaseVectorLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => BaseVectorLayerComponent),\n    multi: true\n  }]\n})\nexport class BaseVectorLayerComponent<\n  VectorSourceType extends VectorSource<Geometry> | VectorTile, \n  RendererType extends CanvasVectorLayerRenderer | CanvasVectorTileLayerRenderer | CanvasVectorImageLayerRenderer | WebGLPointsLayerRenderer\n> extends LayerComponent implements OnInit, OnChanges, AfterContentInit, BaseLayerRef, Options<VectorSource<any> | VectorTile> {\n\n  @Input('olRenderOrder') renderOrder?: OrderFunction;\n  @Input('olRenderBuffer') renderBuffer?: number;\n  @Input('olSource') source?: VectorSource<Geometry>|any;\n  @Input('olDeclutter') declutter?: boolean;\n  @Input('olStyle') style?: StyleLike;\n  @Input('olUpdateWhileAnimating') updateWhileAnimating?: boolean;\n  @Input('olUpdateWhileInteracting') updateWhileInteracting?: boolean;\n\n  @ContentChildren(VectorSourceComponent) sources!: QueryList<SourceComponent>;\n  @ContentChildren(StyleComponent) styles!: QueryList<StyleComponent>;\n\n  instance!: BaseVectorLayer<VectorSourceType, RendererType>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new BaseVectorLayer(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { style, ...others } = changes;\n    if (this.instance && style) {\n      this.instance.setStyle(style.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n  ngAfterContentInit(): void {\n    this.styles.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.styles),\n        map((styles: QueryList<StyleComponent>) => styles.map(s => s.instance)),\n        map((styles: Style[]) => styles && styles.length ? styles : this.style),\n        distinctUntilChanged()\n      )\n      .subscribe(styles => this.instance.setStyle(styles));\n    super.ngAfterContentInit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseVectorLayerComponent } from './base-vector-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    BaseVectorLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BaseVectorLayerComponent\n  ]\n})\nexport class BaseVectorLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, forwardRef, Input, Output, EventEmitter, SimpleChanges, ContentChildren, QueryList, AfterContentChecked, OnDestroy, AfterContentInit, NgZone } from '@angular/core';\nimport { Collection } from 'ol';\nimport BaseLayer from 'ol/layer/Base';\nimport GroupLayer, { Options } from 'ol/layer/Group';\nimport { ObjectEvent } from 'ol/Object';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, takeUntil } from 'rxjs/operators';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { BaseLayerComponent } from '../base-layer';\n\n@Component({\n  selector: 'ol-group-layer',\n  exportAs: 'olGroupLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => GroupLayerComponent),\n    multi: true\n  }]\n})\nexport class GroupLayerComponent extends BaseLayerComponent implements OnInit, OnChanges, AfterContentInit, OnDestroy, BaseLayerRef, Options {\n\n  @Input('olLayers') layers?: BaseLayer[] | Collection<BaseLayer>;\n\n  @Output('olOnChangeLayers') changeLayers$ = new EventEmitter<ObjectEvent>();\n\n  @ContentChildren(LAYER_PROVIDER) layerComponents!: QueryList<BaseLayerRef>;\n\n  instance!: GroupLayer;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new GroupLayer(this);\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { layers, ...others } = changes;\n\n    if (this.instance && layers) this.instance.setLayers(layers.currentValue);\n\n    super.ngOnChanges(others);\n  }\n\n  ngAfterContentInit(): void {\n    this.layerComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.layerComponents),\n        map((components: QueryList<BaseLayerRef>) => components.map(c => c.instance)),\n        distinctUntilChanged()\n      )\n      .subscribe(layers => {\n        const collection = this.instance.getLayers();\n        collection.clear();\n        collection.extend(layers);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GroupLayerComponent } from './group-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    GroupLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    GroupLayerComponent\n  ]\n})\nexport class GroupLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone } from '@angular/core';\nimport ImageLayer from 'ol/layer/Image';\nimport CanvasImageLayerRenderer from 'ol/renderer/canvas/ImageLayer';\nimport ImageSource from 'ol/source/Image';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { BaseImageLayerComponent } from '../base-image-layer';\n\n@Component({\n  selector: 'ol-image-layer',\n  exportAs: 'olImageLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => ImageLayerComponent),\n    multi: true\n  }, {\n    provide: BaseImageLayerComponent,\n    useExisting: forwardRef(() => ImageLayerComponent),\n    multi: false\n  }]\n})\nexport class ImageLayerComponent extends BaseImageLayerComponent<ImageSource, CanvasImageLayerRenderer> implements OnInit, BaseLayerRef  {\n\n  instance!: ImageLayer<ImageSource>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => this.instance = new ImageLayer(this));\n    super.ngOnInit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageLayerComponent } from './image-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    ImageLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ImageLayerComponent\n  ]\n})\nexport class ImageLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone } from '@angular/core';\nimport TileLayer from 'ol/layer/Tile';\nimport LayerRenderer from 'ol/renderer/Layer';\nimport TileSource from 'ol/source/Tile';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { BaseTileLayerComponent } from '../base-tile-layer';\n\n@Component({\n  selector: 'ol-tile-layer',\n  exportAs: 'olTileLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => TileLayerComponent),\n    multi: true\n  }, {\n    provide: BaseTileLayerComponent,\n    useExisting: forwardRef(() => TileLayerComponent),\n    multi: false\n  }]\n})\nexport class TileLayerComponent extends BaseTileLayerComponent<TileSource, LayerRenderer<any>> implements OnInit, BaseLayerRef  {\n\n  instance!: TileLayer<TileSource>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new TileLayer(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TileLayerComponent } from './tile-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    TileLayerComponent\n  ],\n  exports: [\n    TileLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class TileLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone } from '@angular/core';\nimport Geometry from 'ol/geom/Geometry';\nimport VectorLayer from 'ol/layer/Vector';\nimport CanvasVectorLayerRenderer from 'ol/renderer/canvas/VectorLayer';\nimport VectorSource from 'ol/source/Vector';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { BaseVectorLayerComponent } from '../base-vector-layer';\n\n@Component({\n  selector: 'ol-vector-layer',\n  exportAs: 'olVectorLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => VectorLayerComponent),\n    multi: true\n  }]\n})\nexport class VectorLayerComponent extends BaseVectorLayerComponent<VectorSource<Geometry>, CanvasVectorLayerRenderer> implements OnInit, BaseLayerRef {\n\n  instance!: VectorLayer<VectorSource<Geometry>>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new VectorLayer(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VectorLayerComponent } from './vector-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    VectorLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    VectorLayerComponent\n  ]\n})\nexport class VectorLayerModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnInit, NgZone } from '@angular/core';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport UrlTile, { Options } from 'ol/source/UrlTile';\nimport { LoadFunction, UrlFunction } from 'ol/Tile';\nimport { TileSourceComponent } from '../tile-source';\n\n@Component({\n  selector: 'ol-url-tile-source',\n  exportAs: 'olUrlTileSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UrlTileSourceComponent extends TileSourceComponent implements OnInit, OnChanges, Options {\n\n  @Input('olTileLoadFunction') tileLoadFunction!: LoadFunction;\n  @Input('olTileUrlFunction') tileUrlFunction?: UrlFunction;\n  @Input('olUrl') url?: string;\n  @Input('olUrls') urls?: string[];\n\n  @Output('olOnTileloadend') tileloadend$ = new EventEmitter<TileSourceEvent>();\n  @Output('olOnTileloaderror') tileloaderror$ = new EventEmitter<TileSourceEvent>();\n  @Output('olOnTileloadstart') tileloadstart$ = new EventEmitter<TileSourceEvent>();\n\n  instance!: UrlTile;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new UrlTile(this);\n      }\n      this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileloadend$.emit(event));\n      this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileloaderror$.emit(event));\n      this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileloadstart$.emit(event));\n\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { tileLoadFunction, tileUrlFunction, url, urls, ...others } = changes;\n\n    if (this.instance) {\n      if (tileLoadFunction) this.instance.setTileLoadFunction(tileLoadFunction.currentValue);\n      if (tileUrlFunction) this.instance.setTileUrlFunction(tileUrlFunction.currentValue);\n      if (url) this.instance.setUrl(url.currentValue);\n      if (urls) this.instance.setUrls(urls.currentValue);\n    }\n\n    super.ngOnChanges(others);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UrlTileSourceComponent } from './url-tile-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    UrlTileSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    UrlTileSourceComponent\n  ]\n})\nexport class UrlTileSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, Input, NgZone } from '@angular/core';\nimport { Extent } from 'ol/extent';\nimport FeatureFormat from 'ol/format/Feature';\nimport VectorTile_1 from 'ol/VectorTile';\nimport VectorTile, { Options } from 'ol/source/VectorTile';\nimport { Size } from 'ol/size';\nimport { UrlTileSourceComponent } from '../url-tile-source';\n\n@Component({\n  selector: 'ol-vector-tile-source',\n  exportAs: 'olVectorTileSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VectorTileSourceComponent extends UrlTileSourceComponent implements OnInit, OnChanges, Options {\n\n  @Input('olExtent') extent?: Extent;\n  @Input('olFormat') format?: FeatureFormat;\n  @Input('olOverlaps') overlaps?: boolean;\n  @Input('olTileClass') tileClass?: typeof VectorTile_1;\n  @Input('olMaxZoom') maxZoom?: number;\n  @Input('olMinZoom') minZoom?: number;\n  @Input('olTileSize') tileSize?: number | Size;\n  @Input('olMaxResolution') maxResolution?: number;\n\n  instance!: VectorTile;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new VectorTile(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VectorTileSourceComponent } from './vector-tile-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    VectorTileSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    VectorTileSourceComponent\n  ]\n})\nexport class VectorTileSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, Output, EventEmitter, OnChanges, SimpleChanges, ContentChildren, QueryList, NgZone } from '@angular/core';\nimport VectorTileLayer, { Options } from 'ol/layer/VectorTile';\nimport { ObjectEvent } from 'ol/Object';\nimport CanvasVectorTileLayerRenderer from 'ol/renderer/canvas/VectorTileLayer';\nimport VectorTile from 'ol/source/VectorTile';\nimport { LAYER_PROVIDER } from '../../core/layer';\nimport { SourceComponent } from '../../source/source';\nimport { VectorTileSourceComponent } from '../../source/vector-tile-source';\nimport { BaseVectorLayerComponent } from '../base-vector-layer';\nimport { VectorTileRenderType } from './vector-tile-layer.model';\n\n@Component({\n  selector: 'ol-vector-tile-layer',\n  exportAs: 'olVectorTileLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => VectorTileLayerComponent),\n    multi: true\n  }, {\n    provide: BaseVectorLayerComponent,\n    useExisting: forwardRef(() => VectorTileLayerComponent),\n    multi: false\n  }]\n})\nexport class VectorTileLayerComponent extends BaseVectorLayerComponent<VectorTile, CanvasVectorTileLayerRenderer> implements OnInit, OnChanges, Options {\n\n  @Input('olRenderMode') renderMode?: VectorTileRenderType | string;\n  @Input('olSource') source?: VectorTile;\n  @Input('olPreload') preload?: number;\n  @Input('olUseInterimTilesOnError') useInterimTilesOnError?: boolean;\n\n  @Output('olOnPreload') onPreload$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnUseInterimTilesOnError') onUseInterimTilesOnError$ = new EventEmitter<ObjectEvent>();\n\n  @ContentChildren(VectorTileSourceComponent) sources!: QueryList<SourceComponent>;\n\n  instance!: VectorTileLayer;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    super.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new VectorTileLayer(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { preload, useInterimTilesOnError, ...others } = changes;\n    if (this.instance) {\n      if (preload) this.instance.setPreload(preload.currentValue);\n      if (useInterimTilesOnError) this.instance.setUseInterimTilesOnError(useInterimTilesOnError.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VectorTileLayerComponent } from './vector-tile-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    VectorTileLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    VectorTileLayerComponent\n  ]\n})\nexport class VectorTileLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, NgZone, Input, Output, EventEmitter } from '@angular/core';\nimport { Size } from 'ol/size';\nimport DataTileSource, { Options } from 'ol/source/DataTile';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport { TileSourceComponent } from '../tile-source';\nimport { DataTileSourceLoader } from './data-tile-source.model';\n\n@Component({\n  selector: 'ol-data-tile-source',\n  exportAs: 'olDataTileSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTileSourceComponent extends TileSourceComponent implements OnInit, Options {\n\n  @Input('olLoader') loader?: DataTileSourceLoader;\n  @Input('olMaxZoom') maxZoom?: number;\n  @Input('olMinZoom') minZoom?: number;\n  @Input('olTileSize') tileSize?: number | Size;\n  @Input('olMaxResolution') maxResolution?: number;\n  @Input('olBandCount') bandCount?: number;\n\n  @Output('olTileloadend') tileloadend$ = new EventEmitter<TileSourceEvent>();\n  @Output('olTileloaderror') tileloaderror$ = new EventEmitter<TileSourceEvent>();\n  @Output('olTileloadstart') tileloadstart$ = new EventEmitter<TileSourceEvent>();\n\n  instance!: DataTileSource;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new DataTileSource(this);\n      }\n      this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileloadend$.emit(event));\n      this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileloaderror$.emit(event));\n      this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileloadstart$.emit(event));\n\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTileSourceComponent } from './data-tile-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    DataTileSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DataTileSourceComponent\n  ]\n})\nexport class DataTileSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, NgZone, Input } from '@angular/core';\nimport GeoTIFFSource, { Options, SourceInfo } from 'ol/source/GeoTIFF';\nimport { DataTileSourceComponent } from '../data-tile-source';\n\n@Component({\n  selector: 'ol-geo-tiff-source',\n  exportAs: 'olGeoTIFFSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GeoTIFFSourceComponent extends DataTileSourceComponent implements OnInit, Options {\n\n  @Input('olSources') sources: SourceInfo[] = [];\n  @Input('olConvertToRGB') convertToRGB = false;\n  @Input('olNormalize') normalize = true;\n\n  instance!: GeoTIFFSource;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new GeoTIFFSource(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GeoTIFFSourceComponent } from './geo-tiff-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    GeoTIFFSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    GeoTIFFSourceComponent\n  ]\n})\nexport class GeoTIFFSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone, Input, ContentChildren, QueryList } from '@angular/core';\nimport { Extent } from 'ol/extent';\nimport WebGLTileLayer, { Options, SourceType, Style } from 'ol/layer/WebGLTile';\nimport LayerRenderer from 'ol/renderer/Layer';\nimport { LAYER_PROVIDER } from '../../core';\nimport { GeoTIFFSourceComponent } from '../../source/geo-tiff-source';\nimport { BaseTileLayerComponent } from '../base-tile-layer';\n\n@Component({\n  selector: 'ol-webgl-tile-layer',\n  exportAs: 'olWebGLTileLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => WebGLTileLayerComponent),\n    multi: true\n  }, {\n    provide: BaseTileLayerComponent,\n    useExisting: forwardRef(() => WebGLTileLayerComponent),\n    multi: false\n  }]\n})\nexport class WebGLTileLayerComponent extends BaseTileLayerComponent<SourceType, LayerRenderer<any>> implements OnInit, Options {\n\n  @Input('olStyle') style?: Style;\n  @Input('olCacheSize') cacheSize?: number;\n  @Input('olSources') sources?: Array<SourceType> | ((extent: Extent, resolution: number) => Array<SourceType>)\n\n  @ContentChildren(GeoTIFFSourceComponent) sourceComponents!: QueryList<GeoTIFFSourceComponent>;\n\n  instance!: WebGLTileLayer;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new WebGLTileLayer(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WebGLTileLayerComponent } from './webgl-tile-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    WebGLTileLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    WebGLTileLayerComponent\n  ]\n})\nexport class WebGLTileLayerModule { }\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[olOverlayContent]',\n  exportAs: 'olOverlayContent'\n})\nexport class OverlayContentDirective {\n\n  constructor(public templateRef: TemplateRef<{}>) {}\n\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ComponentFactoryResolver, ApplicationRef, Injector, ContentChild, TemplateRef, ViewContainerRef, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { DomPortalOutlet, TemplatePortal } from '@angular/cdk/portal'\nimport { Coordinate } from 'ol/coordinate';\nimport Overlay, { Options, PanIntoViewOptions, PanOptions } from 'ol/Overlay';\nimport { OverlayContentDirective } from './overlay-content.directive';\nimport { OverlayPositioning } from './overlay.model';\n\n@Component({\n  selector: 'ol-overlay',\n  exportAs: 'olOverlay',\n  template: `<ng-content></ng-content>`,\n  styles: [\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OverlayComponent implements AfterViewInit, OnChanges, Options {\n\n  @Input('olId') id?: number | string;\n  @Input('olElement') element?: HTMLElement;\n  @Input('olOffset') offset?: number[];\n  @Input('olPosition') position?: Coordinate;\n  @Input('olPositioning') positioning?: OverlayPositioning;\n  @Input('olStopEvent') stopEvent?: boolean;\n  @Input('olInsertFirst') insertFirst?: boolean;\n  @Input('olAutoPan') autoPan?: PanIntoViewOptions | boolean;\n  @Input('olAutoPanAnimation') autoPanAnimation?: PanOptions;\n  @Input('olAutoPanMargin') autoPanMargin?: number;\n  @Input('olAutoPanOptions') autoPanOptions?: PanIntoViewOptions;\n  @Input('olClassName') className?: string;\n\n  @ContentChild(OverlayContentDirective, { static: true, read: TemplateRef }) content!: TemplateRef<{}>;\n\n  instance!: Overlay;\n\n  constructor(\n    private cfr: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n  ) { }\n\n  ngAfterViewInit(): void {\n    const element = this.element || document.createElement('div');\n    const portalOutlet = new DomPortalOutlet(element, this.cfr, this.appRef, this.injector);\n    const portal = new TemplatePortal(this.content, this.viewContainerRef);\n    const componentRef = portalOutlet.attach(portal);\n    this.instance = new Overlay({ ...this, element });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n\n    const properties: { [key: string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'element':\n            this.instance.setElement(val);\n            break;\n          case 'offset':\n            this.instance.setOffset(val);\n            break;\n          case 'position':\n            this.instance.setPosition(val);\n            break;\n          case 'positioning':\n            this.instance.setPositioning(val);\n            break;\n          default:\n            properties[key] = val;\n            break;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length > 0) {\n      this.instance.setProperties(properties);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayComponent } from './overlay.component';\nimport { OverlayContentDirective } from './overlay-content.directive';\n\n\n\n@NgModule({\n  declarations: [\n    OverlayComponent,\n    OverlayContentDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OverlayComponent,\n    OverlayContentDirective\n  ]\n})\nexport class OverlayModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, ElementRef, AfterViewInit, OnChanges, SimpleChanges, NgZone, AfterContentInit, ContentChildren, QueryList, OnDestroy } from '@angular/core';\nimport { Collection, Map, MapBrowserEvent, MapEvent, Overlay, View } from 'ol';\nimport { ObjectEvent } from 'ol/Object';\nimport { MapOptions } from 'ol/PluggableMap';\nimport BaseEvent from 'ol/events/Event';\nimport BaseLayer from 'ol/layer/Base';\nimport { Control } from 'ol/control';\nimport { Interaction, defaults as defaultsInteraction } from 'ol/interaction';\nimport LayerGroup from 'ol/layer/Group';\nimport RenderEvent from 'ol/render/Event';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../core/layer';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, startWith, takeUntil } from 'rxjs/operators';\nimport { InteractionComponent } from '../interaction/interaction';\nimport { ControlComponent } from '../control/control';\nimport { OverlayComponent } from '../overlay';\n\n@Component({\n  selector: 'ol-map',\n  exportAs: 'olMap',\n  template: `\n    <div [style.width]=\"'100%'\" [style.height]=\"'100%'\"></div>\n    <ng-content></ng-content>\n  `,\n  styles: [\n  ],\n  host: {\n    '[style.display]': `'block'`,\n    '[style.width]': `width`,\n    '[style.height]': `height`\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapComponent implements OnInit, OnChanges, AfterContentInit, AfterViewInit, OnDestroy, MapOptions {\n\n  @Input('olWidth') width: string | number = '100%';\n  @Input('olHeight') height: string | number = '100%';\n  @Input('olControls') controls?: Collection<Control> | Control[];\n  @Input('olPixelRatio') pixelRatio?: number;\n  @Input('olInteractions') interactions?: Collection<Interaction> | Interaction[];\n  @Input('olKeyboardEventTarget') keyboardEventTarget?: HTMLElement | Document | string;\n  @Input('olLayers') layers?: BaseLayer[] | Collection<BaseLayer> | LayerGroup;\n  @Input('olMaxTilesLoading') maxTilesLoading?: number;\n  @Input('olMoveTolerance') moveTolerance?: number;\n  @Input('olVverlays') overlays?: Collection<Overlay> | Overlay[];\n  @Input('olTarget') target?: HTMLElement | string;\n  @Input('olView') view?: View;\n\n  @Output('olOnChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olOnChangeLayerGroup') changeLayerGroup$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeSize') changeSize$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeTarget') changeTarget$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeView') changeView$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnClick') click$ = new EventEmitter<MapBrowserEvent<UIEvent>>();\n  @Output('olOnDblclick') dblclick$ = new EventEmitter<MapBrowserEvent<UIEvent>>();\n  @Output('olOnError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olOnMoveend') moveend$ = new EventEmitter<MapEvent>();\n  @Output('olOnMovestart') movestart$ = new EventEmitter<MapEvent>();\n  @Output('olOnPointerdrag') pointerdrag$ = new EventEmitter<MapBrowserEvent<UIEvent>>();\n  @Output('olOnPointermove') pointermove$ = new EventEmitter<MapBrowserEvent<UIEvent>>();\n  @Output('olOnPostcompose') postcompose$ = new EventEmitter<RenderEvent>();\n  @Output('olOnPostrender') postrender$ = new EventEmitter<MapEvent>();\n  @Output('olOnPrecompose') precompose$ = new EventEmitter<RenderEvent>();\n  @Output('olOnPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnRendercomplete') rendercomplete$ = new EventEmitter<RenderEvent>();\n  @Output('olOnSingleclick') singleclick$ = new EventEmitter<MapBrowserEvent<UIEvent>>();\n\n  @ContentChildren(LAYER_PROVIDER) layerComponents!: QueryList<BaseLayerRef>;\n  @ContentChildren(InteractionComponent, { descendants: true }) interactionComponents!: QueryList<InteractionComponent>;\n  @ContentChildren(ControlComponent, { descendants: true }) controlComponents!: QueryList<ControlComponent>;\n  @ContentChildren(OverlayComponent, { descendants: true }) overlayComponents!: QueryList<OverlayComponent>;\n\n  public instance!: Map;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private elementRef: ElementRef<HTMLDivElement>,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.createInstance();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n\n    const properties: { [key: string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n\n        if (key === 'target') {\n          this.ngZone.runOutsideAngular(() => {\n            this.instance.setTarget(val);\n          });\n        } else if (key === 'view') {\n          this.ngZone.runOutsideAngular(() => {\n            this.instance.setView(val);\n          });\n        } else {\n          properties[key] = val;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length > 0) {\n      this.ngZone.runOutsideAngular(() => {\n        this.instance.setProperties(properties);\n      });\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.layerComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.layerComponents),\n        filter(() => !this.layers),\n        map((components: QueryList<BaseLayerRef>) => components.map(c => c.instance)),\n        distinctUntilChanged()\n      )\n      .subscribe(layers => {\n        const collection = this.instance.getLayers();\n        collection.clear();\n        collection.extend(layers);\n      });\n\n    this.interactionComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.interactionComponents),\n        filter(() => !this.interactions),\n        map((components: QueryList<InteractionComponent>) => components.map(c => c.instance)),\n        map((interactions: Interaction[]) => defaultsInteraction().extend(interactions).getArray()),\n        distinctUntilChanged()\n      )\n      .subscribe(interactions => {\n        const collection = this.instance.getInteractions();\n        collection.clear();\n        collection.extend(interactions);\n      });\n\n    this.controlComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.controlComponents),\n        filter(() => !this.controls),\n        map((components: QueryList<ControlComponent>) => components.map(c => c.instance)),\n        distinctUntilChanged()\n      )\n      .subscribe(controls => {\n        const collection = this.instance.getControls();\n        collection.clear();\n        collection.extend(controls);\n      });\n    this.overlayComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.overlayComponents),\n        filter(() => !this.overlays),\n        map((components: QueryList<OverlayComponent>) => components.map(c => c.instance)),\n        distinctUntilChanged()\n      )\n      .subscribe(overlays => {\n        const collection = this.instance.getOverlays();\n        collection.clear();\n        collection.extend(overlays);\n      });\n  }\n\n  ngAfterViewInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance.updateSize();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.instance.setTarget(undefined);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private createInstance(): void {\n    const target: HTMLElement = this.elementRef.nativeElement.firstElementChild as HTMLElement;\n    this.instance = new Map({ ...this, target });\n    this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n    this.instance.on('change:layergroup', (event: ObjectEvent) => this.changeLayerGroup$.emit(event));\n    this.instance.on('change:size', (event: ObjectEvent) => this.changeSize$.emit(event));\n    this.instance.on('change:target', (event: ObjectEvent) => this.changeTarget$.emit(event));\n    this.instance.on('change:view', (event: ObjectEvent) => this.changeView$.emit(event));\n    this.instance.on('click', (event: MapBrowserEvent<UIEvent>) => this.click$.emit(event));\n    this.instance.on('dblclick', (event: MapBrowserEvent<UIEvent>) => this.dblclick$.emit(event));\n    this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n    this.instance.on('moveend', (event: MapEvent) => this.moveend$.emit(event));\n    this.instance.on('movestart', (event: MapEvent) => this.movestart$.emit(event));\n    this.instance.on('pointerdrag', (event: MapBrowserEvent<UIEvent>) => this.pointerdrag$.emit(event));\n    this.instance.on('pointermove', (event: MapBrowserEvent<UIEvent>) => this.pointermove$.emit(event));\n    this.instance.on('postcompose', (event: RenderEvent) => this.postcompose$.emit(event));\n    this.instance.on('postrender', (event: MapEvent) => this.postrender$.emit(event));\n    this.instance.on('precompose', (event: RenderEvent) => this.precompose$.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n    this.instance.on('rendercomplete', (event: RenderEvent) => this.rendercomplete$.emit(event));\n    this.instance.on('singleclick', (event: MapBrowserEvent<UIEvent>) => this.singleclick$.emit(event));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map.component';\n\n\n\n@NgModule({\n  declarations: [\n    MapComponent\n  ],\n  exports: [\n    MapComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class MapModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, Input, SimpleChanges, NgZone, AfterContentInit, ContentChildren, QueryList, OnDestroy, forwardRef } from '@angular/core';\nimport { Feature } from 'ol';\nimport Geometry from 'ol/geom/Geometry';\nimport Point from 'ol/geom/Point';\nimport Cluster, { Options } from 'ol/source/Cluster';\nimport VectorSource from 'ol/source/Vector';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, takeUntil } from 'rxjs/operators';\nimport { SourceComponent } from '../source';\nimport { VectorSourceComponent } from '../vector-source/vector-source.component';\n\n@Component({\n  selector: 'ol-cluster-source',\n  exportAs: 'olClusterSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: VectorSourceComponent,\n    useExisting: forwardRef(() => ClusterSourceComponent),\n    multi: true\n  }]\n})\nexport class ClusterSourceComponent extends VectorSourceComponent implements OnInit, OnChanges, AfterContentInit, OnDestroy, Options {\n\n  @Input('olDistance') distance?: number;\n  @Input('olGeometryFunction') geometryFunction?: (p0: Feature<Geometry>) => Point;\n  @Input('olSource') source?: VectorSource<Geometry>;\n\n  @ContentChildren(VectorSourceComponent) sources!: QueryList<VectorSourceComponent>;\n\n  instance!: Cluster;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Cluster(this);\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { distance, source, ...others } = changes;\n    if (this.instance) {\n      if (distance) this.instance.setDistance(distance.currentValue);\n      if (source) this.instance.setSource(source.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n  ngAfterContentInit(): void {\n    this.sources.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.sources),\n        map((sources: QueryList<VectorSourceComponent>) => sources.last?.instance),\n        distinctUntilChanged()\n      )\n      .subscribe(source => this.instance.setSource(source));\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClusterSourceComponent } from './cluster-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    ClusterSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ClusterSourceComponent\n  ]\n})\nexport class ClusterSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, forwardRef, Input, SimpleChanges, NgZone } from '@angular/core';\nimport { LoadFunction } from 'ol/Image';\nimport ImageWMS, { Options } from 'ol/source/ImageWMS';\nimport { ImageSourceComponent } from '../image-source';\nimport { WMSServerType } from './image-wms-source.model';\n\n@Component({\n  selector: 'ol-image-wms-source',\n  exportAs: 'olImageWMSSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: ImageSourceComponent,\n    useExisting: forwardRef(() => ImageWMSSourceComponent),\n    multi: true\n  }]\n})\nexport class ImageWMSSourceComponent extends ImageSourceComponent implements OnInit, OnChanges, Options {\n\n  @Input('olCrossOrigin') crossOrigin?: string;\n  @Input('olHidpi') hidpi?: boolean;\n  @Input('olServerType') serverType?: WMSServerType;\n  @Input('olImageLoadFunction') imageLoadFunction?: LoadFunction;\n  @Input('olParams') params!: { [key: string]: any };\n  @Input('olRatio') ratio?: number;\n  @Input('olUrl') url!: string;\n\n  instance!: ImageWMS;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new ImageWMS(this);\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { imageLoadFunction, url, ...others } = changes;\n\n    if (this.instance) {\n      imageLoadFunction && this.instance.setImageLoadFunction(imageLoadFunction.currentValue);\n      url && this.instance.setUrl(url.currentValue);\n    }\n\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageWMSSourceComponent } from './image-wms-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    ImageWMSSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ImageWMSSourceComponent\n  ]\n})\nexport class ImageWMSSourceModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, OnInit, NgZone } from '@angular/core';\nimport ImageTile from 'ol/ImageTile';\nimport TileImageSource, { Options } from 'ol/source/TileImage';\nimport { UrlTileSourceComponent } from '../url-tile-source';\n\n@Component({\n  selector: 'ol-tile-image-source',\n  exportAs: 'olTileImageSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TileImageSourceComponent extends UrlTileSourceComponent implements OnInit, Options {\n\n  @Input() crossOrigin?: string;\n  @Input() imageSmoothing?: boolean;\n  @Input() reprojectionErrorThreshold?: number;\n  @Input() tileClass?: typeof ImageTile;\n\n  instance!: TileImageSource\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new TileImageSource(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TileImageSourceComponent } from './tile-image-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    TileImageSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TileImageSourceComponent\n  ]\n})\nexport class TileImageSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, NgZone } from '@angular/core';\nimport { Size } from 'ol/size';\nimport XYZSource, { Options } from 'ol/source/XYZ';\nimport { TileImageSourceComponent } from '../tile-image-source';\nimport { TileSourceComponent } from '../tile-source';\n\n@Component({\n  selector: 'ol-xyz-source',\n  exportAs: 'olXYZSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: TileSourceComponent,\n    useExisting: forwardRef(() => XYZSourceComponent),\n    multi: true\n  }]\n})\nexport class XYZSourceComponent extends TileImageSourceComponent implements OnInit, Options {\n\n  @Input('olMaxZoom') maxZoom?: number;\n  @Input('olMinZoom') minZoom?: number;\n  @Input('olMaxResolution') maxResolution?: number;\n  @Input('olTileSize') tileSize?: number | Size;\n\n  instance!: XYZSource;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new XYZSource(this);\n      }\n      super.ngOnInit();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { XYZSourceComponent } from './xyz-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    XYZSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    XYZSourceComponent\n  ]\n})\nexport class XYZSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone } from '@angular/core';\nimport OSM, { Options } from 'ol/source/OSM';\nimport { TileSourceComponent } from '../tile-source';\nimport { XYZSourceComponent } from '../xyz-source';\n\n@Component({\n  selector: 'ol-osm-source',\n  exportAs: 'olOSMSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: TileSourceComponent,\n    useExisting: forwardRef(() => OSMSourceComponent),\n    multi: true\n  }]\n})\nexport class OSMSourceComponent extends XYZSourceComponent implements OnInit, Options {\n\n  instance!: OSM\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new OSM(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OSMSourceComponent } from './osm-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    OSMSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OSMSourceComponent\n  ]\n})\nexport class OSMSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, OnDestroy, Input, SimpleChanges, NgZone } from '@angular/core';\nimport { Size } from 'ol/size';\nimport ImageStyle, { Options } from 'ol/style/Image';\nimport { StyleComponent } from '../style';\n\n@Component({\n  selector: 'ol-image-style',\n  exportAs: 'olImageStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageStyleComponent implements OnInit, OnChanges, OnDestroy, Options {\n\n  @Input('olOpacity') opacity!: number;\n  @Input('olRotateWithView') rotateWithView!: boolean;\n  @Input('olRotation') rotation!: number;\n  @Input('olScale') scale!: number | Size;\n  @Input('olDisplacement') displacement!: number[];\n  @Input('olDeclutterMode') declutterMode!: 'declutter' | 'obstacle' | 'none' | undefined;\n\n  instance!: ImageStyle;\n\n  constructor(\n    public ngZone: NgZone,\n    private host: StyleComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.host.instance.setImage(this.instance);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'opacity':\n            this.instance.setOpacity(val);\n            break;\n          case 'rotateWithView':\n            this.instance.setRotateWithView(val);\n            break;\n          case 'rotation':\n            this.instance.setRotation(val);\n            break;\n          case 'scale':\n            this.instance.setScale(val);\n            break;\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.host.instance.setImage((null as unknown) as ImageStyle);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageStyleComponent } from './image-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    ImageStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ImageStyleComponent\n  ]\n})\nexport class ImageStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, NgZone } from '@angular/core';\nimport { Fill, Stroke } from 'ol/style';\nimport RegularShape, { Options } from 'ol/style/RegularShape';\nimport { ImageStyleComponent } from '../image-style';\nimport { StyleComponent } from '../style';\n\n@Component({\n  selector: 'ol-regular-shape-style',\n  exportAs: 'olRegularShapeStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RegularShapeStyleComponent extends ImageStyleComponent implements OnInit, Options {\n\n  @Input('olFill') fill?: Fill;\n  @Input('olPoints') points!: number;\n  @Input('olRadius') radius?: number;\n  @Input('olRadius1') radius1?: number;\n  @Input('olRadius2') radius2?: number;\n  @Input('olAngle') angle?: number;\n  @Input('olStroke') stroke?: Stroke;\n\n  instance!: RegularShape;\n\n  constructor(\n    ngZone: NgZone,\n    host: StyleComponent\n  ) {\n    super(ngZone, host);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new RegularShape(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n  setFill(fill: Fill): void {\n    this.fill = fill;\n    this.ngOnInit();\n  }\n\n  setStroke(stroke: Stroke): void {\n    this.stroke = stroke;\n    this.ngOnInit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegularShapeStyleComponent } from './regular-shape-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    RegularShapeStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    RegularShapeStyleComponent\n  ]\n})\nexport class RegularShapeStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, OnChanges, Input, SimpleChanges, NgZone } from '@angular/core';\nimport CircleStyle, { Options } from 'ol/style/Circle';\nimport { RegularShapeStyleComponent } from '../regular-shape-style';\nimport { StyleComponent } from '../style';\n\n@Component({\n  selector: 'ol-circle-style',\n  exportAs: 'olCircleStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: RegularShapeStyleComponent,\n    useExisting: forwardRef(() => CircleStyleComponent),\n    multi: false\n  }]\n})\nexport class CircleStyleComponent extends RegularShapeStyleComponent implements OnInit, OnChanges, Options {\n\n  @Input('olRadius') radius!: number;\n\n  instance!: CircleStyle;\n\n  constructor(\n    ngZone: NgZone,\n    host: StyleComponent\n  ) {\n    super(ngZone, host);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new CircleStyle(this);\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { radius, ...others } = changes;\n    if (this.instance && radius) {\n      this.instance.setRadius(radius.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CircleStyleComponent } from './circle-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    CircleStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CircleStyleComponent\n  ]\n})\nexport class CircleStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, OnDestroy, Input, SimpleChanges, NgZone } from '@angular/core';\nimport { Size } from 'ol/size';\nimport { Fill, Stroke } from 'ol/style';\nimport Text, { Options } from 'ol/style/Text';\nimport { TextPlacement } from './text-style.model';\nimport { StyleComponent } from '../style';\n\n@Component({\n  selector: 'ol-text-style',\n  exportAs: 'olTextStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextStyleComponent implements OnInit, OnChanges, OnDestroy, Options {\n\n  @Input('olFont') font?: string;\n  @Input('olMaxAngle') maxAngle?: number;\n  @Input('olOffsetX') offsetX?: number;\n  @Input('olOffsetY') offsetY?: number;\n  @Input('olOverflow') overflow?: boolean;\n  @Input('olPlacement') placement?: TextPlacement | string;\n  @Input('olScale') scale?: number | Size;\n  @Input('olRotateWithView') rotateWithView?: boolean;\n  @Input('olRotation') rotation?: number;\n  @Input('olText') text?: string;\n  @Input('olTextAlign') textAlign?: string;\n  @Input('olTextBaseline') textBaseline?: string;\n  @Input('olFill') fill?: Fill;\n  @Input('olStroke') stroke?: Stroke;\n  @Input('olBackgroundFill') backgroundFill?: Fill;\n  @Input('olBackgroundStroke') backgroundStroke?: Stroke;\n  @Input('olPadding') padding?: number[];\n\n  instance!: Text;\n\n  constructor(\n    private ngZone: NgZone,\n    private host: StyleComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Text(this);\n      this.host.instance.setText(this.instance);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'font':\n            this.instance.setFont(val);\n            break;\n          case 'maxAngle':\n            this.instance.setMaxAngle(val);\n            break;\n          case 'offsetX':\n            this.instance.setOffsetX(val);\n            break;\n          case 'offsetY':\n            this.instance.setOffsetY(val);\n            break;\n          case 'overflow':\n            this.instance.setOverflow(val);\n            break;\n          case 'placement':\n            this.instance.setPlacement(val);\n            break;\n          case 'scale':\n            this.instance.setScale(val);\n            break;\n          case 'rotateWithView':\n            this.instance.setRotateWithView(val);\n            break;\n          case 'rotation':\n            this.instance.setRotation(val);\n            break;\n          case 'text':\n            this.instance.setText(val);\n            break;\n          case 'textAlign':\n            this.instance.setTextAlign(val);\n            break;\n          case 'textBaseline':\n            this.instance.setTextBaseline(val);\n            break;\n          case 'fill':\n            this.instance.setFill(val);\n            break;\n          case 'stroke':\n            this.instance.setStroke(val);\n            break;\n          case 'backgroundFill':\n            this.instance.setBackgroundFill(val);\n            break;\n          case 'backgroundStroke':\n            this.instance.setBackgroundStroke(val);\n            break;\n          case 'padding':\n            this.instance.setPadding(val);\n            break;\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.host.instance.setText((null as unknown) as Text);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextStyleComponent } from './text-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    TextStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextStyleComponent\n  ]\n})\nexport class TextStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, OnDestroy, Input, Optional, SimpleChanges, NgZone } from '@angular/core';\nimport { Color } from 'ol/color';\nimport { ColorLike } from 'ol/colorlike';\nimport Fill, { Options } from 'ol/style/Fill';\nimport { RegularShapeStyleComponent } from '../regular-shape-style';\nimport { StyleComponent } from '../style';\nimport { TextStyleComponent } from '../text-style';\n\n@Component({\n  selector: 'ol-fill-style',\n  exportAs: 'olFillStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FillStyleComponent implements OnInit, OnChanges, OnDestroy, Options {\n\n  @Input('olColor') color?: Color | ColorLike;\n  @Input('olType') type: 'text-background-fill'|'fill' = 'fill';\n\n  instance!: Fill;\n  private host!: StyleComponent|TextStyleComponent|RegularShapeStyleComponent;\n\n  constructor(\n    private ngZone: NgZone,\n    @Optional() styleHost: StyleComponent,\n    @Optional() textHost: TextStyleComponent,\n    @Optional() regularShapeHost: RegularShapeStyleComponent\n  ) {\n    this.host = regularShapeHost || textHost || styleHost;\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Fill(this);\n      if (this.type === 'text-background-fill') {\n        (this.host as TextStyleComponent).instance.setBackgroundFill(this.instance);\n      } else if (this.type === 'fill') {\n        if (this.host instanceof RegularShapeStyleComponent) {\n          this.host.setFill(this.instance);\n        } else {\n          this.host.instance.setFill(this.instance);\n        }\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    const { color } = changes;\n    if (color) this.instance.setColor(color.currentValue);\n  }\n\n  ngOnDestroy(): void {\n    const nullVal = (null as unknown) as Fill;\n    if (this.type === 'text-background-fill') {\n      (this.host as TextStyleComponent).instance.setBackgroundFill(nullVal);\n    } else if (this.type === 'fill') {\n      if (this.host instanceof RegularShapeStyleComponent) {\n        this.host.setFill(nullVal);\n      } else {\n        this.host.instance.setFill(nullVal);\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FillStyleComponent } from './fill-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    FillStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    FillStyleComponent\n  ]\n})\nexport class FillStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, Input, SimpleChanges, NgZone } from '@angular/core';\nimport { Color } from 'ol/color';\nimport { Size } from 'ol/size';\nimport Icon, { Options } from 'ol/style/Icon';\nimport { IconAnchorUnits, IconOrigin } from './icon-style.model';\nimport { ImageStyleComponent } from '../image-style';\nimport { StyleComponent } from '../style';\n\n@Component({\n  selector: 'ol-icon-style',\n  exportAs: 'olIconStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IconStyleComponent extends ImageStyleComponent implements OnInit, OnChanges, Options {\n\n  @Input('olAnchor') anchor?: number[];\n  @Input('olAnchorOrigin') anchorOrigin?: IconOrigin;\n  @Input('olAnchorXUnits') anchorXUnits?: IconAnchorUnits;\n  @Input('olAnchorYUnits') anchorYUnits?: IconAnchorUnits;\n  @Input('olColor') color?: Color | string;\n  @Input('olCrossOrigin') crossOrigin?: string;\n  @Input('olImg') img?: HTMLImageElement | HTMLCanvasElement;\n  @Input('olOffset') offset?: number[];\n  @Input('olOffsetOrigin') offsetOrigin?: IconOrigin;\n  @Input('olSize') size?: Size;\n  @Input('olImgSize') imgSize?: Size;\n  @Input('olSrc') src?: string;\n\n  instance!: Icon;\n\n  constructor(\n    ngZone: NgZone,\n    host: StyleComponent\n  ) {\n    super(ngZone, host);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Icon(this);\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { anchor, ...others } = changes;\n    if (this.instance && anchor) {\n      this.instance.setAnchor(anchor.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconStyleComponent } from './icon-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    IconStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    IconStyleComponent\n  ]\n})\nexport class IconStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, OnDestroy, Input, Optional, SimpleChanges, NgZone } from '@angular/core';\nimport { Color } from 'ol/color';\nimport { ColorLike } from 'ol/colorlike';\nimport Stroke, { Options } from 'ol/style/Stroke';\nimport { RegularShapeStyleComponent } from '../regular-shape-style';\nimport { StyleComponent } from '../style';\nimport { TextStyleComponent } from '../text-style';\n\n@Component({\n  selector: 'ol-stroke-style',\n  exportAs: 'olStrokeStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StrokeStyleComponent implements OnInit, OnChanges, OnDestroy, Options {\n\n  @Input('olColor') color?: Color | ColorLike;\n  @Input('olLineCap') lineCap?: CanvasLineCap;\n  @Input('olLineJoin') lineJoin?: CanvasLineJoin;\n  @Input('olLineDash') lineDash?: number[];\n  @Input('olLineDashOffset') lineDashOffset?: number;\n  @Input('olMiterLimit') miterLimit?: number;\n  @Input('olWidth') width?: number;\n  @Input('olType') type: 'text-background-stroke'|'stroke' = 'stroke';\n\n  instance!: Stroke;\n  private host!: StyleComponent|TextStyleComponent|RegularShapeStyleComponent;\n\n  constructor(\n    private ngZone: NgZone,\n    @Optional() styleHost: StyleComponent,\n    @Optional() textHost: TextStyleComponent,\n    @Optional() regularShapeHost: RegularShapeStyleComponent\n  ) {\n    this.host = regularShapeHost || textHost || styleHost;\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Stroke(this);\n      if (this.type === 'stroke') {\n        if (this.host instanceof RegularShapeStyleComponent) {\n          this.host.setStroke(this.instance);\n        } else {\n          this.host.instance.setStroke(this.instance);\n        }\n      } else if (this.type === 'text-background-stroke') {\n        (this.host as TextStyleComponent).instance.setBackgroundStroke(this.instance);\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'color':\n            this.instance.setColor(val);\n            break;\n          case 'lineCap':\n            this.instance.setLineCap(val);\n            break;\n          case 'lineJoin':\n            this.instance.setLineJoin(val);\n            break;\n          case 'lineDash':\n            this.instance.setLineDash(val);\n            break;\n          case 'lineDashOffset':\n            this.instance.setLineDashOffset(val);\n            break;\n          case 'miterLimit':\n            this.instance.setMiterLimit(val);\n            break;\n          case 'width':\n            this.instance.setWidth(val);\n            break;\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    const nullVal = (null as unknown) as Stroke;\n    if (this.type === 'stroke') {\n      if (this.host instanceof RegularShapeStyleComponent) {\n        this.host.setStroke(nullVal);\n      } else {\n        this.host.instance.setStroke(nullVal);\n      }\n    } else if (this.type === 'text-background-stroke') {\n      (this.host as TextStyleComponent).instance.setBackgroundStroke(nullVal);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StrokeStyleComponent } from './stroke-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    StrokeStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    StrokeStyleComponent\n  ]\n})\nexport class StrokeStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges, NgZone } from '@angular/core';\nimport { Coordinate } from 'ol/coordinate';\nimport BaseEvent from 'ol/events/Event';\nimport { Extent } from 'ol/extent';\nimport { ObjectEvent } from 'ol/Object';\nimport { ProjectionLike } from 'ol/proj';\nimport View, { ViewOptions } from 'ol/View';\nimport { MapComponent } from '../map';\n\n@Component({\n  selector: 'ol-view',\n  exportAs: 'olView',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy, ViewOptions {\n\n  @Input('olCenter') center?: Coordinate;\n  @Input('olConstrainRotation') constrainRotation?: boolean | number;\n  @Input('olEnableRotation') enableRotation?: boolean;\n  @Input('olExtent') extent?: Extent;\n  @Input('olConstrainOnlyCenter') constrainOnlyCenter?: boolean;\n  @Input('olSmoothExtentConstraint') smoothExtentConstraint?: boolean;\n  @Input('olMaxResolution') maxResolution?: number;\n  @Input('olMinResolution') minResolution?: number;\n  @Input('olMaxZoom') maxZoom?: number;\n  @Input('olMinZoom') minZoom?: number;\n  @Input('olMultiWorld') multiWorld?: boolean;\n  @Input('olConstrainResolution') constrainResolution?: boolean;\n  @Input('olSmoothResolutionConstraint') smoothResolutionConstraint?: boolean;\n  @Input('olShowFullExtent') showFullExtent?: boolean;\n  @Input('olProjection') projection?: ProjectionLike;\n  @Input('olResolution') resolution?: number;\n  @Input('olResolutions') resolutions?: number[];\n  @Input('olRotation') rotation?: number;\n  @Input('olZoom') zoom?: number;\n  @Input('olZoomFactor') zoomFactor?: number;\n  @Input('olPadding') padding?: number[];\n\n  @Output('olOnChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olOnChangeCenter') changeCenter$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeResolution') changeResolution$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeRotation') changeRotation$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olOnPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n\n  instance!: View;\n\n  constructor(\n    private ngZone: NgZone,\n    private host: MapComponent\n  ) {\n    if (!this.host) {\n      throw new Error(\"The view component needs to be nested in the map component.\");\n    }\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.createInstance();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n\n    const properties: { [key: string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'center':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setCenter(val);\n            });\n            break;\n          case 'constrainResolution':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setConstrainResolution(val);\n            });\n            break;\n          case 'maxZoom':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setMaxZoom(val);\n            });\n            break;\n          case 'minZoom':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setMinZoom(val);\n            });\n            break;\n          case 'resolution':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setResolution(val);\n            });\n            break;\n          case 'rotation':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setRotation(val);\n            });\n            break;\n          case 'zoom':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setZoom(val);\n            });\n            break;\n          default:\n            properties[key] = val;\n            break;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length > 0) {\n      this.ngZone.runOutsideAngular(() => {\n        this.instance.setProperties(properties);\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.host.instance.setView((null as unknown) as View);\n  }\n\n  private createInstance(): void {\n    this.instance = new View(this);\n    this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n    this.instance.on('change:center', (event: ObjectEvent) => this.changeCenter$.emit(event));\n    this.instance.on('change:resolution', (event: ObjectEvent) => this.changeResolution$.emit(event));\n    this.instance.on('change:rotation', (event: ObjectEvent) => this.changeRotation$.emit(event));\n    this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n    this.host.instance.setView(this.instance);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewComponent } from './view.component';\n\n\n\n@NgModule({\n  declarations: [\n    ViewComponent\n  ],\n  exports: [\n    ViewComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ViewModule { }\n","import { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [\n\n  ],\n  imports: [\n  ],\n  exports: [\n\n  ]\n})\nexport class NgOpenlayersModule { }\n","/*\n * Public API Surface of ng-openlayers\n */\nexport * from './control/control';\nexport * from './control/mouse-position';\nexport * from './control/scale-line';\nexport * from './control/zoom';\nexport * from './core';\nexport * from './interaction/draw-interaction';\nexport * from './interaction/interaction';\nexport * from './interaction/modify-interaction';\nexport * from './interaction/pinch-zoom-interaction';\nexport * from './interaction/pointer-interaction';\nexport * from './interaction/select-interaction';\nexport * from './interaction/snap-interaction';\nexport * from './layer/base-image-layer';\nexport * from './layer/base-layer';\nexport * from './layer/base-tile-layer';\nexport * from './layer/base-vector-layer';\nexport * from './layer/group-layer';\nexport * from './layer/image-layer';\nexport * from './layer/layer';\nexport * from './layer/tile-layer';\nexport * from './layer/vector-layer';\nexport * from './layer/vector-tile-layer';\nexport * from './layer/webgl-tile-layer';\nexport * from './map';\nexport * from './overlay';\nexport * from './source/cluster-source';\nexport * from './source/data-tile-source';\nexport * from './source/geo-tiff-source';\nexport * from './source/image-source';\nexport * from './source/image-wms-source';\nexport * from './source/osm-source';\nexport * from './source/source';\nexport * from './source/tile-image-source';\nexport * from './source/tile-source';\nexport * from './source/url-tile-source';\nexport * from './source/vector-source';\nexport * from './source/vector-tile-source';\nexport * from './source/xyz-source';\nexport * from './style/circle-style';\nexport * from './style/fill-style';\nexport * from './style/icon-style';\nexport * from './style/image-style';\nexport * from './style/regular-shape-style';\nexport * from './style/stroke-style';\nexport * from './style/style';\nexport * from './style/text-style';\nexport * from './view';\nexport * from './ng-openlayers.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["defaultsInteraction","i1.StyleComponent","i2.TextStyleComponent","i3.RegularShapeStyleComponent","i1.MapComponent"],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, NgModule, forwardRef, InjectionToken, Pipe, ContentChildren, Directive, TemplateRef, ContentChild, Optional } from '@angular/core';\nimport Control from 'ol/control/Control';\nimport { CommonModule } from '@angular/common';\nimport { __rest } from 'tslib';\nimport MousePosition from 'ol/control/MousePosition';\nimport ScaleLine from 'ol/control/ScaleLine';\nimport Zoom from 'ol/control/Zoom';\nimport { modulo } from 'ol/math';\nimport { padNumber } from 'ol/string';\nimport { format } from 'ol/coordinate';\nimport { fromLonLat, toLonLat, transformExtent } from 'ol/proj';\nimport Draw from 'ol/interaction/Draw';\nimport Interaction from 'ol/interaction/Interaction';\nimport { Subject } from 'rxjs';\nimport PointerInteraction from 'ol/interaction/Pointer';\nimport Modify from 'ol/interaction/Modify';\nimport PinchZoom from 'ol/interaction/PinchZoom';\nimport Select from 'ol/interaction/Select';\nimport Snap from 'ol/interaction/Snap';\nimport BaseImageLayer from 'ol/layer/BaseImage';\nimport Layer from 'ol/layer/Layer';\nimport { takeUntil, startWith, map, distinctUntilChanged, filter } from 'rxjs/operators';\nimport BaseLayer from 'ol/layer/Base';\nimport BaseTileLayer from 'ol/layer/BaseTile';\nimport BaseVectorLayer from 'ol/layer/BaseVector';\nimport VectorSource from 'ol/source/Vector';\nimport Style from 'ol/style/Style';\nimport GroupLayer from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorTileLayer from 'ol/layer/VectorTile';\nimport VectorTile from 'ol/source/VectorTile';\nimport UrlTile from 'ol/source/UrlTile';\nimport WebGLTileLayer from 'ol/layer/WebGLTile';\nimport GeoTIFFSource from 'ol/source/GeoTIFF';\nimport DataTileSource from 'ol/source/DataTile';\nimport { Map } from 'ol';\nimport { defaults } from 'ol/interaction';\nimport { DomPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport Overlay from 'ol/Overlay';\nimport Cluster from 'ol/source/Cluster';\nimport ImageWMS from 'ol/source/ImageWMS';\nimport OSM from 'ol/source/OSM';\nimport XYZSource from 'ol/source/XYZ';\nimport TileImageSource from 'ol/source/TileImage';\nimport CircleStyle from 'ol/style/Circle';\nimport RegularShape from 'ol/style/RegularShape';\nimport Fill from 'ol/style/Fill';\nimport Text from 'ol/style/Text';\nimport Icon from 'ol/style/Icon';\nimport Stroke from 'ol/style/Stroke';\nimport View from 'ol/View';\n\nclass ControlComponent {\n    constructor(elementRef, ngZone) {\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.change$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this.target)\n            this.target = this.elementRef.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new Control(this);\n            }\n            this.instance.on('change', (event) => this.change$.emit(event));\n            this.instance.on('error', (event) => this.error$.emit(event));\n            this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const value = changes[key].currentValue;\n                switch (key) {\n                    case 'target':\n                        this.instance.setTarget(value);\n                        break;\n                    default:\n                        properties[key] = value;\n                        break;\n                }\n            }\n        }\n        if (Object.keys(properties).length) {\n            this.instance.setProperties(properties);\n        }\n    }\n}\nControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ControlComponent, selector: \"ol-control\", inputs: { element: [\"olElement\", \"element\"], render: [\"olRender\", \"render\"], target: [\"olTarget\", \"target\"] }, outputs: { change$: \"olChange\", error$: \"olError\", propertychange$: \"olPropertychange\" }, exportAs: [\"olControl\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-control',\n                    exportAs: 'olControl',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { element: [{\n                type: Input,\n                args: ['olElement']\n            }], render: [{\n                type: Input,\n                args: ['olRender']\n            }], target: [{\n                type: Input,\n                args: ['olTarget']\n            }], change$: [{\n                type: Output,\n                args: ['olChange']\n            }], error$: [{\n                type: Output,\n                args: ['olError']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olPropertychange']\n            }] } });\n\nclass ControlModule {\n}\nControlModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nControlModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlModule, declarations: [ControlComponent], imports: [CommonModule], exports: [ControlComponent] });\nControlModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ControlModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ControlComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ControlComponent\n                    ]\n                }]\n        }] });\n\nclass MousePositionComponent extends ControlComponent {\n    constructor(elementRef, ngZone) {\n        super(elementRef, ngZone);\n        this.changeCoordinateFormat$ = new EventEmitter();\n        this.changeProjection$ = new EventEmitter();\n        this.elementRef.nativeElement.classList.add('ol-mouse-position');\n    }\n    ngOnInit() {\n        if (!this.target)\n            this.target = this.elementRef.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new MousePosition(this);\n            this.instance.on('change:coordinateFormat', (event) => this.changeCoordinateFormat$.emit(event));\n            this.instance.on('change:projection', (event) => this.changeProjection$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { coordinateFormat, projection } = changes, others = __rest(changes, [\"coordinateFormat\", \"projection\"]);\n        if (this.instance && coordinateFormat)\n            this.instance.setCoordinateFormat(coordinateFormat.currentValue);\n        if (this.instance && projection)\n            this.instance.setProjection(projection.currentValue);\n        super.ngOnChanges(others);\n    }\n}\nMousePositionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMousePositionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: MousePositionComponent, selector: \"ol-mouse-position\", inputs: { className: [\"olClassName\", \"className\"], coordinateFormat: [\"olCoordinateFormat\", \"coordinateFormat\"], projection: [\"olProjection\", \"projection\"], undefinedHTML: [\"olUndefinedHTML\", \"undefinedHTML\"] }, outputs: { changeCoordinateFormat$: \"olChangeCoordinateFormat\", changeProjection$: \"olChangeProjection\" }, providers: [\n        {\n            provide: ControlComponent,\n            useExisting: forwardRef(() => MousePositionComponent),\n            multi: true\n        }\n    ], exportAs: [\"olMousePosition\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [\".ol-mouse-position{display:inline-block}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ol-mouse-position', exportAs: 'olMousePosition', template: `<ng-content></ng-content>`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: ControlComponent,\n                            useExisting: forwardRef(() => MousePositionComponent),\n                            multi: true\n                        }\n                    ], styles: [\".ol-mouse-position{display:inline-block}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { className: [{\n                type: Input,\n                args: ['olClassName']\n            }], coordinateFormat: [{\n                type: Input,\n                args: ['olCoordinateFormat']\n            }], projection: [{\n                type: Input,\n                args: ['olProjection']\n            }], undefinedHTML: [{\n                type: Input,\n                args: ['olUndefinedHTML']\n            }], changeCoordinateFormat$: [{\n                type: Output,\n                args: ['olChangeCoordinateFormat']\n            }], changeProjection$: [{\n                type: Output,\n                args: ['olChangeProjection']\n            }] } });\n\nclass MousePositionModule {\n}\nMousePositionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMousePositionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionModule, declarations: [MousePositionComponent], imports: [CommonModule], exports: [MousePositionComponent] });\nMousePositionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MousePositionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        MousePositionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        MousePositionComponent\n                    ]\n                }]\n        }] });\n\nclass ScaleLineComponent extends ControlComponent {\n    constructor(elementRef, ngZone) {\n        super(elementRef, ngZone);\n        this.changeUnits$ = new EventEmitter();\n        this.elementRef.nativeElement.classList.add('ol-control-scale-line');\n    }\n    ngOnInit() {\n        if (!this.target)\n            this.target = this.elementRef.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new ScaleLine(this);\n            this.instance.on('change:units', (event) => this.changeUnits$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { dpi, units } = changes, others = __rest(changes, [\"dpi\", \"units\"]);\n        if (this.instance && dpi)\n            this.instance.setDpi(dpi.currentValue);\n        if (this.instance && units)\n            this.instance.setUnits(units.currentValue);\n        super.ngOnChanges(changes);\n    }\n}\nScaleLineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nScaleLineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ScaleLineComponent, selector: \"ol-scale-line\", inputs: { className: [\"olClassName\", \"className\"], minWidth: [\"olMinWidth\", \"minWidth\"], units: [\"olUnits\", \"units\"], bar: [\"olBar\", \"bar\"], steps: [\"olSteps\", \"steps\"], text: [\"olText\", \"text\"], dpi: [\"olDpi\", \"dpi\"] }, outputs: { changeUnits$: \"olChangeUnits\" }, providers: [\n        {\n            provide: ControlComponent,\n            useExisting: forwardRef(() => ScaleLineComponent),\n            multi: true\n        }\n    ], exportAs: [\"olScaleLine\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [\".ol-control-scale-line{display:inline-block}.ol-control-scale-line .ol-scale-line{background:transparent;padding:2px}.ol-control-scale-line .ol-scale-line-inner{border:1px solid #595959;border-top:none;color:#595959;font-size:12px;line-height:12px;text-align:center;will-change:contents,width;transition:all .25s}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ol-scale-line', exportAs: 'olScaleLine', template: `<ng-content></ng-content>`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: ControlComponent,\n                            useExisting: forwardRef(() => ScaleLineComponent),\n                            multi: true\n                        }\n                    ], styles: [\".ol-control-scale-line{display:inline-block}.ol-control-scale-line .ol-scale-line{background:transparent;padding:2px}.ol-control-scale-line .ol-scale-line-inner{border:1px solid #595959;border-top:none;color:#595959;font-size:12px;line-height:12px;text-align:center;will-change:contents,width;transition:all .25s}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { className: [{\n                type: Input,\n                args: ['olClassName']\n            }], minWidth: [{\n                type: Input,\n                args: ['olMinWidth']\n            }], units: [{\n                type: Input,\n                args: ['olUnits']\n            }], bar: [{\n                type: Input,\n                args: ['olBar']\n            }], steps: [{\n                type: Input,\n                args: ['olSteps']\n            }], text: [{\n                type: Input,\n                args: ['olText']\n            }], dpi: [{\n                type: Input,\n                args: ['olDpi']\n            }], changeUnits$: [{\n                type: Output,\n                args: ['olChangeUnits']\n            }] } });\n\nclass ScaleLineModule {\n}\nScaleLineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nScaleLineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineModule, declarations: [ScaleLineComponent], imports: [CommonModule], exports: [ScaleLineComponent] });\nScaleLineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ScaleLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ScaleLineComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ScaleLineComponent\n                    ]\n                }]\n        }] });\n\nclass ZoomComponent extends ControlComponent {\n    constructor(elementRef, ngZone) {\n        super(elementRef, ngZone);\n        this.elementRef.nativeElement.classList.add('ol-control-zoom');\n    }\n    ngOnInit() {\n        if (!this.target)\n            this.target = this.elementRef.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Zoom(this);\n            super.ngOnInit();\n        });\n    }\n}\nZoomComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nZoomComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ZoomComponent, selector: \"ol-zoom\", inputs: { duration: [\"olDuration\", \"duration\"], className: [\"olClassName\", \"className\"], zoomInClassName: [\"olZoomInClassName\", \"zoomInClassName\"], zoomOutClassName: [\"olZoomOutClassName\", \"zoomOutClassName\"], zoomInLabel: [\"olZoomInLabel\", \"zoomInLabel\"], zoomOutLabel: [\"olZoomOutLabel\", \"zoomOutLabel\"], zoomInTipLabel: [\"olZoomInTipLabel\", \"zoomInTipLabel\"], zoomOutTipLabel: [\"olZoomOutTipLabel\", \"zoomOutTipLabel\"], delta: [\"olDelta\", \"delta\"] }, providers: [\n        {\n            provide: ControlComponent,\n            useExisting: forwardRef(() => ZoomComponent),\n            multi: true\n        }\n    ], exportAs: [\"olZoom\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [\".ol-control-zoom{display:block}.ol-control-zoom .ol-zoom{border-radius:4px;box-shadow:0 2px 8px #00000026}.ol-control-zoom .ol-zoom>.ol-zoom-in,.ol-control-zoom .ol-zoom>.ol-zoom-out{display:block;width:32px;height:32px;border:0;font-size:22px;text-align:center;line-height:32px;color:#8c8c8c;background-color:#fff;transition:all .3s cubic-bezier(.645,.045,.355,1);outline:none;cursor:pointer}.ol-control-zoom .ol-zoom>.ol-zoom-in:hover,.ol-control-zoom .ol-zoom>.ol-zoom-out:hover{color:#1890ff}.ol-control-zoom .ol-zoom>.ol-zoom-in{border-radius:4px 4px 0 0;border-bottom:1px solid rgba(0,0,0,.15)}.ol-control-zoom .ol-zoom>.ol-zoom-out{border-radius:0 0 4px 4px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ol-zoom', exportAs: 'olZoom', template: `<ng-content></ng-content>`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: ControlComponent,\n                            useExisting: forwardRef(() => ZoomComponent),\n                            multi: true\n                        }\n                    ], styles: [\".ol-control-zoom{display:block}.ol-control-zoom .ol-zoom{border-radius:4px;box-shadow:0 2px 8px #00000026}.ol-control-zoom .ol-zoom>.ol-zoom-in,.ol-control-zoom .ol-zoom>.ol-zoom-out{display:block;width:32px;height:32px;border:0;font-size:22px;text-align:center;line-height:32px;color:#8c8c8c;background-color:#fff;transition:all .3s cubic-bezier(.645,.045,.355,1);outline:none;cursor:pointer}.ol-control-zoom .ol-zoom>.ol-zoom-in:hover,.ol-control-zoom .ol-zoom>.ol-zoom-out:hover{color:#1890ff}.ol-control-zoom .ol-zoom>.ol-zoom-in{border-radius:4px 4px 0 0;border-bottom:1px solid rgba(0,0,0,.15)}.ol-control-zoom .ol-zoom>.ol-zoom-out{border-radius:0 0 4px 4px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { duration: [{\n                type: Input,\n                args: ['olDuration']\n            }], className: [{\n                type: Input,\n                args: ['olClassName']\n            }], zoomInClassName: [{\n                type: Input,\n                args: ['olZoomInClassName']\n            }], zoomOutClassName: [{\n                type: Input,\n                args: ['olZoomOutClassName']\n            }], zoomInLabel: [{\n                type: Input,\n                args: ['olZoomInLabel']\n            }], zoomOutLabel: [{\n                type: Input,\n                args: ['olZoomOutLabel']\n            }], zoomInTipLabel: [{\n                type: Input,\n                args: ['olZoomInTipLabel']\n            }], zoomOutTipLabel: [{\n                type: Input,\n                args: ['olZoomOutTipLabel']\n            }], delta: [{\n                type: Input,\n                args: ['olDelta']\n            }] } });\n\nclass ZoomModule {\n}\nZoomModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nZoomModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomModule, declarations: [ZoomComponent], imports: [CommonModule], exports: [ZoomComponent] });\nZoomModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ZoomModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ZoomComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ZoomComponent\n                    ]\n                }]\n        }] });\n\nclass BaseLayerRef {\n}\n\nconst LAYER_PROVIDER = new InjectionToken('Layer Provider');\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} string.\n */\nfunction degreesToStringHDMS(hemispheres, degrees, options) {\n    const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    const x = Math.abs(3600 * normalizedDegrees);\n    const template = options && typeof options.template === 'string'\n        ? options.template\n        : '{H} {D}\\u00b0{M}\\u2032{S}\\u2033';\n    const dflPrecision = options && typeof options.fractionDigits === 'number' ? options.fractionDigits : 0;\n    const precision = Math.pow(10, dflPrecision);\n    let deg = Math.floor(x / 3600);\n    let min = Math.floor((x - deg * 3600) / 60);\n    let sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return template\n        .replace('{H}', normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n        .replace('{D}', `${deg}`)\n        .replace('{M}', padNumber(min, 2))\n        .replace('{S}', padNumber(sec, 2, dflPrecision));\n}\nclass CoordinateToStringHdmsPipe {\n    transform(value, opt_fractionDigits) {\n        return [\n            degreesToStringHDMS('EW', value[0], { fractionDigits: opt_fractionDigits }),\n            degreesToStringHDMS('NS', value[1], { fractionDigits: opt_fractionDigits })\n        ]\n            .join(', ');\n    }\n}\nCoordinateToStringHdmsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nCoordinateToStringHdmsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsPipe, name: \"coordinateToStringHdms\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'coordinateToStringHdms'\n                }]\n        }] });\n\nclass CoordinateToStringHdmsModule {\n}\nCoordinateToStringHdmsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCoordinateToStringHdmsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsModule, declarations: [CoordinateToStringHdmsPipe], imports: [CommonModule], exports: [CoordinateToStringHdmsPipe] });\nCoordinateToStringHdmsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringHdmsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CoordinateToStringHdmsPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        CoordinateToStringHdmsPipe\n                    ]\n                }]\n        }] });\n\nclass CoordinateToStringXYPipe {\n    transform(value, opt_fractionDigits) {\n        return format(value, `{x}º, {y}º`, opt_fractionDigits);\n    }\n}\nCoordinateToStringXYPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nCoordinateToStringXYPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYPipe, name: \"coordinateToStringXY\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'coordinateToStringXY',\n                    pure: true\n                }]\n        }] });\n\nclass CoordinateToStringXYModule {\n}\nCoordinateToStringXYModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCoordinateToStringXYModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYModule, declarations: [CoordinateToStringXYPipe], imports: [CommonModule], exports: [CoordinateToStringXYPipe] });\nCoordinateToStringXYModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CoordinateToStringXYModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CoordinateToStringXYPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        CoordinateToStringXYPipe\n                    ]\n                }]\n        }] });\n\nclass FromLonLatPipe {\n    transform(coordinate, opt_projection) {\n        return fromLonLat(coordinate, opt_projection);\n    }\n}\nFromLonLatPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nFromLonLatPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatPipe, name: \"fromLonLat\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'fromLonLat',\n                    pure: true\n                }]\n        }] });\n\nclass FromLonLatModule {\n}\nFromLonLatModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFromLonLatModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatModule, declarations: [FromLonLatPipe], imports: [CommonModule], exports: [FromLonLatPipe] });\nFromLonLatModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FromLonLatModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        FromLonLatPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        FromLonLatPipe\n                    ]\n                }]\n        }] });\n\nclass InheritExtentPipe {\n    transform(value, inheritExtent) {\n        return value === 'inherit' ? inheritExtent : value;\n    }\n}\nInheritExtentPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nInheritExtentPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentPipe, name: \"inheritExtent\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'inheritExtent'\n                }]\n        }] });\n\nclass InheritExtentModule {\n}\nInheritExtentModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInheritExtentModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentModule, declarations: [InheritExtentPipe], imports: [CommonModule], exports: [InheritExtentPipe] });\nInheritExtentModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InheritExtentModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        InheritExtentPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        InheritExtentPipe\n                    ]\n                }]\n        }] });\n\nclass ToLonLatPipe {\n    transform(value, opt_projection) {\n        return toLonLat(value, opt_projection);\n    }\n}\nToLonLatPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nToLonLatPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatPipe, name: \"toLonLat\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'toLonLat'\n                }]\n        }] });\n\nclass ToLonLatModule {\n}\nToLonLatModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToLonLatModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatModule, declarations: [ToLonLatPipe], imports: [CommonModule], exports: [ToLonLatPipe] });\nToLonLatModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ToLonLatModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ToLonLatPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ToLonLatPipe\n                    ]\n                }]\n        }] });\n\nclass TransformExtentPipe {\n    transform(extent, ...args) {\n        const source = args[0] !== undefined ? args[0] : 'EPSG:4326';\n        const destination = args[1] !== undefined ? args[1] : 'EPSG:3857';\n        const stops = args[2];\n        return transformExtent(extent, source, destination, stops);\n    }\n}\nTransformExtentPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nTransformExtentPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentPipe, name: \"transformExtent\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'transformExtent',\n                    pure: true\n                }]\n        }] });\n\nclass TransformExtentModule {\n}\nTransformExtentModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTransformExtentModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentModule, declarations: [TransformExtentPipe], imports: [CommonModule], exports: [TransformExtentPipe] });\nTransformExtentModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TransformExtentModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TransformExtentPipe\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        TransformExtentPipe\n                    ]\n                }]\n        }] });\n\nclass InteractionComponent {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.active = true;\n        this.change$ = new EventEmitter();\n        this.changeActive$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new Interaction(this);\n            }\n            this.instance.setActive(this.active);\n            this.instance.on('change', (event) => this.change$.emit(event));\n            this.instance.on('change:active', (event) => this.changeActive$.emit(event));\n            this.instance.on('error', (event) => this.error$.emit(event));\n            this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const value = changes[key].currentValue;\n                if (key === 'active') {\n                    this.instance.setActive(value);\n                }\n                else {\n                    properties[key] = value;\n                }\n            }\n        }\n        if (Object.keys(properties).length) {\n            this.instance.setProperties(properties);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: InteractionComponent, selector: \"ol-interaction\", inputs: { handleEvent: [\"olHandleEvent\", \"handleEvent\"], active: [\"olActive\", \"active\"] }, outputs: { change$: \"olChange\", changeActive$: \"olChangeActive\", error$: \"olError\", propertychange$: \"olPropertychange\" }, exportAs: [\"olInteraction\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-interaction',\n                    exportAs: 'olInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { handleEvent: [{\n                type: Input,\n                args: ['olHandleEvent']\n            }], active: [{\n                type: Input,\n                args: ['olActive']\n            }], change$: [{\n                type: Output,\n                args: ['olChange']\n            }], changeActive$: [{\n                type: Output,\n                args: ['olChangeActive']\n            }], error$: [{\n                type: Output,\n                args: ['olError']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olPropertychange']\n            }] } });\n\nclass InteractionModule {\n}\nInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionModule, declarations: [InteractionComponent], imports: [CommonModule], exports: [InteractionComponent] });\nInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: InteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        InteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        InteractionComponent\n                    ]\n                }]\n        }] });\n\nclass PointerInteractionComponent extends InteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new PointerInteraction(this);\n            }\n            super.ngOnInit();\n        });\n    }\n}\nPointerInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nPointerInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: PointerInteractionComponent, selector: \"ol-pointer-interaction\", inputs: { handleDownEvent: [\"olHandleDownEvent\", \"handleDownEvent\"], handleDragEvent: [\"olHandleDragEvent\", \"handleDragEvent\"], handleMoveEvent: [\"olHandleMoveEvent\", \"handleMoveEvent\"], handleUpEvent: [\"olHandleUpEvent\", \"handleUpEvent\"], stopDown: [\"olStopDown\", \"stopDown\"] }, providers: [{\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => PointerInteractionComponent),\n            multi: true\n        }], exportAs: [\"olPointerInteraction\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-pointer-interaction',\n                    exportAs: 'olPointerInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => PointerInteractionComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { handleDownEvent: [{\n                type: Input,\n                args: ['olHandleDownEvent']\n            }], handleDragEvent: [{\n                type: Input,\n                args: ['olHandleDragEvent']\n            }], handleMoveEvent: [{\n                type: Input,\n                args: ['olHandleMoveEvent']\n            }], handleUpEvent: [{\n                type: Input,\n                args: ['olHandleUpEvent']\n            }], stopDown: [{\n                type: Input,\n                args: ['olStopDown']\n            }] } });\n\nclass PointerInteractionModule {\n}\nPointerInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPointerInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionModule, declarations: [PointerInteractionComponent], imports: [CommonModule], exports: [PointerInteractionComponent] });\nPointerInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PointerInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        PointerInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        PointerInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass DrawInteractionComponent extends PointerInteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.drawabort$ = new EventEmitter();\n        this.drawend$ = new EventEmitter();\n        this.drawstart$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            const type = this.type;\n            this.instance = new Draw(Object.assign(Object.assign({}, this), { type }));\n            this.instance.on('drawabort', (event) => this.drawabort$.emit(event));\n            this.instance.on('drawend', (event) => this.drawend$.emit(event));\n            this.instance.on('drawstart', (event) => this.drawstart$.emit(event));\n            super.ngOnInit();\n        });\n    }\n}\nDrawInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nDrawInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: DrawInteractionComponent, selector: \"ol-draw-interaction\", inputs: { type: [\"olType\", \"type\"], clickTolerance: [\"olClickTolerance\", \"clickTolerance\"], features: [\"olFeatures\", \"features\"], source: [\"olSource\", \"source\"], dragVertexDelay: [\"olDragVertexDelay\", \"dragVertexDelay\"], snapTolerance: [\"olSnapTolerance\", \"snapTolerance\"], stopClick: [\"olStopClick\", \"stopClick\"], maxPoints: [\"olMaxPoints\", \"maxPoints\"], minPoints: [\"olMinPoints\", \"minPoints\"], finishCondition: [\"olFinishCondition\", \"finishCondition\"], style: [\"olStyle\", \"style\"], geometryFunction: [\"olGeometryFunction\", \"geometryFunction\"], geometryName: [\"olGeometryName\", \"geometryName\"], condition: [\"olCondition\", \"condition\"], freehand: [\"olFreehand\", \"freehand\"], freehandCondition: [\"olFreehandCondition\", \"freehandCondition\"], wrapX: [\"olWrapX\", \"wrapX\"] }, outputs: { drawabort$: \"olDrawabort\", drawend$: \"olDrawend\", drawstart$: \"olDrawstart\" }, providers: [\n        {\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => DrawInteractionComponent),\n            multi: true\n        },\n        {\n            provide: PointerInteractionComponent,\n            useExisting: forwardRef(() => DrawInteractionComponent),\n            multi: true\n        }\n    ], exportAs: [\"olDrawInteraction\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-draw-interaction',\n                    exportAs: 'olDrawInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => DrawInteractionComponent),\n                            multi: true\n                        },\n                        {\n                            provide: PointerInteractionComponent,\n                            useExisting: forwardRef(() => DrawInteractionComponent),\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { type: [{\n                type: Input,\n                args: ['olType']\n            }], clickTolerance: [{\n                type: Input,\n                args: ['olClickTolerance']\n            }], features: [{\n                type: Input,\n                args: ['olFeatures']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], dragVertexDelay: [{\n                type: Input,\n                args: ['olDragVertexDelay']\n            }], snapTolerance: [{\n                type: Input,\n                args: ['olSnapTolerance']\n            }], stopClick: [{\n                type: Input,\n                args: ['olStopClick']\n            }], maxPoints: [{\n                type: Input,\n                args: ['olMaxPoints']\n            }], minPoints: [{\n                type: Input,\n                args: ['olMinPoints']\n            }], finishCondition: [{\n                type: Input,\n                args: ['olFinishCondition']\n            }], style: [{\n                type: Input,\n                args: ['olStyle']\n            }], geometryFunction: [{\n                type: Input,\n                args: ['olGeometryFunction']\n            }], geometryName: [{\n                type: Input,\n                args: ['olGeometryName']\n            }], condition: [{\n                type: Input,\n                args: ['olCondition']\n            }], freehand: [{\n                type: Input,\n                args: ['olFreehand']\n            }], freehandCondition: [{\n                type: Input,\n                args: ['olFreehandCondition']\n            }], wrapX: [{\n                type: Input,\n                args: ['olWrapX']\n            }], drawabort$: [{\n                type: Output,\n                args: ['olDrawabort']\n            }], drawend$: [{\n                type: Output,\n                args: ['olDrawend']\n            }], drawstart$: [{\n                type: Output,\n                args: ['olDrawstart']\n            }] } });\n\nclass DrawInteractionModule {\n}\nDrawInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDrawInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionModule, declarations: [DrawInteractionComponent], imports: [CommonModule], exports: [DrawInteractionComponent] });\nDrawInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DrawInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        DrawInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        DrawInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass ModifyInteractionComponent extends PointerInteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.modifyend$ = new EventEmitter();\n        this.modifystart$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Modify(this);\n            this.instance.on('modifyend', (event) => this.modifyend$.emit(event));\n            this.instance.on('modifystart', (event) => this.modifystart$.emit(event));\n        });\n    }\n}\nModifyInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nModifyInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ModifyInteractionComponent, selector: \"ol-modify-interaction\", inputs: { condition: [\"olCondition\", \"condition\"], deleteCondition: [\"olCeleteCondition\", \"deleteCondition\"], insertVertexCondition: [\"olInsertVertexCondition\", \"insertVertexCondition\"], pixelTolerance: [\"olPixelTolerance\", \"pixelTolerance\"], style: [\"olStyle\", \"style\"], source: [\"olSource\", \"source\"], hitDetection: [\"olHitDetection\", \"hitDetection\"], features: [\"olFeatures\", \"features\"], wrapX: [\"olWrapX\", \"wrapX\"] }, outputs: { modifyend$: \"olModifyend\", modifystart$: \"olModifystart\" }, providers: [\n        {\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => ModifyInteractionComponent),\n            multi: true\n        },\n        {\n            provide: PointerInteractionComponent,\n            useExisting: forwardRef(() => ModifyInteractionComponent),\n            multi: true\n        }\n    ], exportAs: [\"olModifyInteraction\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-modify-interaction',\n                    exportAs: 'olModifyInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => ModifyInteractionComponent),\n                            multi: true\n                        },\n                        {\n                            provide: PointerInteractionComponent,\n                            useExisting: forwardRef(() => ModifyInteractionComponent),\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { condition: [{\n                type: Input,\n                args: ['olCondition']\n            }], deleteCondition: [{\n                type: Input,\n                args: ['olCeleteCondition']\n            }], insertVertexCondition: [{\n                type: Input,\n                args: ['olInsertVertexCondition']\n            }], pixelTolerance: [{\n                type: Input,\n                args: ['olPixelTolerance']\n            }], style: [{\n                type: Input,\n                args: ['olStyle']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], hitDetection: [{\n                type: Input,\n                args: ['olHitDetection']\n            }], features: [{\n                type: Input,\n                args: ['olFeatures']\n            }], wrapX: [{\n                type: Input,\n                args: ['olWrapX']\n            }], modifyend$: [{\n                type: Output,\n                args: ['olModifyend']\n            }], modifystart$: [{\n                type: Output,\n                args: ['olModifystart']\n            }] } });\n\nclass ModifyInteractionModule {\n}\nModifyInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nModifyInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionModule, declarations: [ModifyInteractionComponent], imports: [CommonModule], exports: [ModifyInteractionComponent] });\nModifyInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ModifyInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ModifyInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ModifyInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass PinchZoomInteractionComponent extends PointerInteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new PinchZoom(this);\n            super.ngOnInit();\n        });\n    }\n}\nPinchZoomInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nPinchZoomInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: PinchZoomInteractionComponent, selector: \"ol-pinch-zoom-interaction\", inputs: { duration: [\"olDuration\", \"duration\"] }, providers: [{\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => PinchZoomInteractionComponent),\n            multi: true\n        }], exportAs: [\"olPinchZoomInteraction\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-pinch-zoom-interaction',\n                    exportAs: 'olPinchZoomInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => PinchZoomInteractionComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { duration: [{\n                type: Input,\n                args: ['olDuration']\n            }] } });\n\nclass PinchZoomInteractionModule {\n}\nPinchZoomInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPinchZoomInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionModule, declarations: [PinchZoomInteractionComponent], imports: [CommonModule], exports: [PinchZoomInteractionComponent] });\nPinchZoomInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: PinchZoomInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        PinchZoomInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        PinchZoomInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass SelectInteractionComponent extends InteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.select$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Select(this);\n            this.instance.on('select', (event) => this.select$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { hitTolerance } = changes, others = __rest(changes, [\"hitTolerance\"]);\n        if (this.instance) {\n            if (hitTolerance)\n                this.instance.setHitTolerance(hitTolerance.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nSelectInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nSelectInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: SelectInteractionComponent, selector: \"ol-select-interaction\", inputs: { addCondition: [\"olAddCondition\", \"addCondition\"], condition: [\"olCondition\", \"condition\"], layers: [\"olLayers\", \"layers\"], style: [\"olStyle\", \"style\"], removeCondition: [\"olRemoveCondition\", \"removeCondition\"], toggleCondition: [\"olToggleCondition\", \"toggleCondition\"], multi: [\"olMulti\", \"multi\"], features: [\"olFeatures\", \"features\"], filter: [\"olFilter\", \"filter\"], hitTolerance: [\"olHitTolerance\", \"hitTolerance\"] }, outputs: { select$: \"olSelect\" }, providers: [{\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => SelectInteractionComponent),\n            multi: true\n        }], exportAs: [\"olSelectInteraction\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-select-interaction',\n                    exportAs: 'olSelectInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => SelectInteractionComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { addCondition: [{\n                type: Input,\n                args: ['olAddCondition']\n            }], condition: [{\n                type: Input,\n                args: ['olCondition']\n            }], layers: [{\n                type: Input,\n                args: ['olLayers']\n            }], style: [{\n                type: Input,\n                args: ['olStyle']\n            }], removeCondition: [{\n                type: Input,\n                args: ['olRemoveCondition']\n            }], toggleCondition: [{\n                type: Input,\n                args: ['olToggleCondition']\n            }], multi: [{\n                type: Input,\n                args: ['olMulti']\n            }], features: [{\n                type: Input,\n                args: ['olFeatures']\n            }], filter: [{\n                type: Input,\n                args: ['olFilter']\n            }], hitTolerance: [{\n                type: Input,\n                args: ['olHitTolerance']\n            }], select$: [{\n                type: Output,\n                args: ['olSelect']\n            }] } });\n\nclass SelectInteractionModule {\n}\nSelectInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSelectInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionModule, declarations: [SelectInteractionComponent], imports: [CommonModule], exports: [SelectInteractionComponent] });\nSelectInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SelectInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SelectInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        SelectInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass SnapInteractionComponent extends PointerInteractionComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Snap(this);\n        });\n    }\n}\nSnapInteractionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nSnapInteractionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: SnapInteractionComponent, selector: \"ol-snap-interaction\", inputs: { features: [\"olFeatures\", \"features\"], edge: [\"olEdge\", \"edge\"], vertex: [\"olVertex\", \"vertex\"], pixelTolerance: [\"olPixelTolerance\", \"pixelTolerance\"], source: [\"olSource\", \"source\"] }, providers: [\n        {\n            provide: InteractionComponent,\n            useExisting: forwardRef(() => SnapInteractionComponent),\n            multi: true\n        },\n        {\n            provide: PointerInteractionComponent,\n            useExisting: forwardRef(() => SnapInteractionComponent),\n            multi: true\n        }\n    ], exportAs: [\"olSnapInteraction\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-snap-interaction',\n                    exportAs: 'olSnapInteraction',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        {\n                            provide: InteractionComponent,\n                            useExisting: forwardRef(() => SnapInteractionComponent),\n                            multi: true\n                        },\n                        {\n                            provide: PointerInteractionComponent,\n                            useExisting: forwardRef(() => SnapInteractionComponent),\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { features: [{\n                type: Input,\n                args: ['olFeatures']\n            }], edge: [{\n                type: Input,\n                args: ['olEdge']\n            }], vertex: [{\n                type: Input,\n                args: ['olVertex']\n            }], pixelTolerance: [{\n                type: Input,\n                args: ['olPixelTolerance']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }] } });\n\nclass SnapInteractionModule {\n}\nSnapInteractionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSnapInteractionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionModule, declarations: [SnapInteractionComponent], imports: [CommonModule], exports: [SnapInteractionComponent] });\nSnapInteractionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SnapInteractionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SnapInteractionComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        SnapInteractionComponent\n                    ]\n                }]\n        }] });\n\nclass SourceComponent {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.change$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.instance.on('change', (event) => this.change$.emit(event));\n        this.instance.on('error', (event) => this.error$.emit(event));\n        this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                if (key === 'attributions') {\n                    this.instance.setAttributions(val);\n                }\n                else if (key === 'state') {\n                    this.instance.setState(val);\n                }\n                else {\n                    properties[key] = val;\n                }\n            }\n        }\n        if (Object.keys(properties).length > 0) {\n            this.instance.setProperties(properties);\n        }\n    }\n}\nSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: SourceComponent, selector: \"ol-source\", inputs: { attributions: [\"olAttributions\", \"attributions\"], attributionsCollapsible: [\"olAttributionsCollapsible\", \"attributionsCollapsible\"], projection: [\"olProjection\", \"projection\"], state: [\"olState\", \"state\"], wrapX: [\"olWrapX\", \"wrapX\"] }, outputs: { change$: \"olOnChange\", error$: \"olOnError\", propertychange$: \"olOnPropertychange\" }, exportAs: [\"olSource\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-source',\n                    exportAs: 'olSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { attributions: [{\n                type: Input,\n                args: ['olAttributions']\n            }], attributionsCollapsible: [{\n                type: Input,\n                args: ['olAttributionsCollapsible']\n            }], projection: [{\n                type: Input,\n                args: ['olProjection']\n            }], state: [{\n                type: Input,\n                args: ['olState']\n            }], wrapX: [{\n                type: Input,\n                args: ['olWrapX']\n            }], change$: [{\n                type: Output,\n                args: ['olOnChange']\n            }], error$: [{\n                type: Output,\n                args: ['olOnError']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olOnPropertychange']\n            }] } });\n\nclass SourceModule {\n}\nSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceModule, declarations: [SourceComponent], imports: [CommonModule], exports: [SourceComponent] });\nSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        SourceComponent\n                    ]\n                }]\n        }] });\n\nclass ImageSourceComponent extends SourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.imageloadend$ = new EventEmitter();\n        this.imageloaderror$ = new EventEmitter();\n        this.imageloadstart$ = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this.instance) {\n            this.instance.on('imageloadend', (event) => this.imageloadend$.emit(event));\n            this.instance.on('imageloaderror', (event) => this.imageloaderror$.emit(event));\n            this.instance.on('imageloadstart', (event) => this.imageloadstart$.emit(event));\n        }\n        super.ngOnInit();\n    }\n}\nImageSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nImageSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ImageSourceComponent, selector: \"ol-image-source\", inputs: { imageSmoothing: [\"olImageSmoothing\", \"imageSmoothing\"], resolutions: [\"olResolutions\", \"resolutions\"] }, outputs: { imageloadend$: \"imageloadend\", imageloaderror$: \"imageloaderror\", imageloadstart$: \"imageloadstart\" }, exportAs: [\"olImageSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-image-source',\n                    exportAs: 'olImageSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { imageSmoothing: [{\n                type: Input,\n                args: ['olImageSmoothing']\n            }], resolutions: [{\n                type: Input,\n                args: ['olResolutions']\n            }], imageloadend$: [{\n                type: Output,\n                args: ['imageloadend']\n            }], imageloaderror$: [{\n                type: Output,\n                args: ['imageloaderror']\n            }], imageloadstart$: [{\n                type: Output,\n                args: ['imageloadstart']\n            }] } });\n\nclass ImageSourceModule {\n}\nImageSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nImageSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceModule, declarations: [ImageSourceComponent], imports: [CommonModule], exports: [ImageSourceComponent] });\nImageSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ImageSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ImageSourceComponent\n                    ]\n                }]\n        }] });\n\nclass BaseLayerComponent {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.change$ = new EventEmitter();\n        this.changeExtent$ = new EventEmitter();\n        this.changeMaxResolution$ = new EventEmitter();\n        this.changeMaxZoom$ = new EventEmitter();\n        this.changeMinResolution$ = new EventEmitter();\n        this.changeMinZoom$ = new EventEmitter();\n        this.changeOpacity$ = new EventEmitter();\n        this.changeSource$ = new EventEmitter();\n        this.changeVisible$ = new EventEmitter();\n        this.changeZIndex$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new BaseLayer(this);\n            }\n            this.instance.on('change', (event) => this.change$.emit(event));\n            this.instance.on('change:extent', (event) => this.changeExtent$.emit(event));\n            this.instance.on('change:maxResolution', (event) => this.changeMaxResolution$.emit(event));\n            this.instance.on('change:maxZoom', (event) => this.changeMaxZoom$.emit(event));\n            this.instance.on('change:minResolution', (event) => this.changeMinResolution$.emit(event));\n            this.instance.on('change:minZoom', (event) => this.changeMinZoom$.emit(event));\n            this.instance.on('change:opacity', (event) => this.changeOpacity$.emit(event));\n            this.instance.on('change:visible', (event) => this.changeVisible$.emit(event));\n            this.instance.on('change:zIndex', (event) => this.changeZIndex$.emit(event));\n            this.instance.on('error', (event) => this.error$.emit(event));\n            this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'extent':\n                        this.instance.setExtent(val);\n                        break;\n                    case 'maxResolution':\n                        this.instance.setMaxResolution(val);\n                        break;\n                    case 'maxZoom':\n                        this.instance.setMaxZoom(val);\n                        break;\n                    case 'minResolution':\n                        this.instance.setMinResolution(val);\n                        break;\n                    case 'minZoom':\n                        this.instance.setMinZoom(val);\n                        break;\n                    case 'opacity':\n                        this.instance.setOpacity(val);\n                        break;\n                    case 'visible':\n                        this.instance.setVisible(val);\n                        break;\n                    case 'zIndex':\n                        this.instance.setZIndex(val);\n                        break;\n                    default:\n                        properties[key] = val;\n                        break;\n                }\n            }\n        }\n        if (Object.keys(properties).length > 0) {\n            this.instance.setProperties(properties);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nBaseLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nBaseLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: BaseLayerComponent, selector: \"ol-base-layer\", inputs: { className: [\"olClassName\", \"className\"], opacity: [\"olOpacity\", \"opacity\"], visible: [\"olVisible\", \"visible\"], extent: [\"olExtent\", \"extent\"], zIndex: [\"olZIndex\", \"zIndex\"], minResolution: [\"olMinResolution\", \"minResolution\"], maxResolution: [\"olMaxResolution\", \"maxResolution\"], minZoom: [\"olMinZoom\", \"minZoom\"], maxZoom: [\"olMaxZoom\", \"maxZoom\"] }, outputs: { change$: \"olOnChange\", changeExtent$: \"olOnChangeExtent\", changeMaxResolution$: \"olOnChangeMaxResolution\", changeMaxZoom$: \"olOnChangeMaxZoom\", changeMinResolution$: \"olOnChangeMinResolution\", changeMinZoom$: \"olOnChangeMinZoom\", changeOpacity$: \"olOnChangeOpacity\", changeSource$: \"olOnChangeSource\", changeVisible$: \"olOnChangeVisible\", changeZIndex$: \"olOnChangeZIndex\", error$: \"olOnError\", propertychange$: \"olOnPropertychange\" }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => BaseLayerComponent),\n            multi: true\n        }], exportAs: [\"olBaseLayer\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-base-layer',\n                    exportAs: 'olBaseLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => BaseLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { className: [{\n                type: Input,\n                args: ['olClassName']\n            }], opacity: [{\n                type: Input,\n                args: ['olOpacity']\n            }], visible: [{\n                type: Input,\n                args: ['olVisible']\n            }], extent: [{\n                type: Input,\n                args: ['olExtent']\n            }], zIndex: [{\n                type: Input,\n                args: ['olZIndex']\n            }], minResolution: [{\n                type: Input,\n                args: ['olMinResolution']\n            }], maxResolution: [{\n                type: Input,\n                args: ['olMaxResolution']\n            }], minZoom: [{\n                type: Input,\n                args: ['olMinZoom']\n            }], maxZoom: [{\n                type: Input,\n                args: ['olMaxZoom']\n            }], change$: [{\n                type: Output,\n                args: ['olOnChange']\n            }], changeExtent$: [{\n                type: Output,\n                args: ['olOnChangeExtent']\n            }], changeMaxResolution$: [{\n                type: Output,\n                args: ['olOnChangeMaxResolution']\n            }], changeMaxZoom$: [{\n                type: Output,\n                args: ['olOnChangeMaxZoom']\n            }], changeMinResolution$: [{\n                type: Output,\n                args: ['olOnChangeMinResolution']\n            }], changeMinZoom$: [{\n                type: Output,\n                args: ['olOnChangeMinZoom']\n            }], changeOpacity$: [{\n                type: Output,\n                args: ['olOnChangeOpacity']\n            }], changeSource$: [{\n                type: Output,\n                args: ['olOnChangeSource']\n            }], changeVisible$: [{\n                type: Output,\n                args: ['olOnChangeVisible']\n            }], changeZIndex$: [{\n                type: Output,\n                args: ['olOnChangeZIndex']\n            }], error$: [{\n                type: Output,\n                args: ['olOnError']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olOnPropertychange']\n            }] } });\n\nclass BaseLayerModule {\n}\nBaseLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBaseLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerModule, declarations: [BaseLayerComponent], imports: [CommonModule], exports: [BaseLayerComponent] });\nBaseLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        BaseLayerComponent\n                    ],\n                    exports: [\n                        BaseLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });\n\nclass LayerComponent extends BaseLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.postrender$ = new EventEmitter();\n        this.prerender$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new Layer(this);\n            }\n            this.instance.on('postrender', (event) => this.postrender$.emit(event));\n            this.instance.on('prerender', (event) => this.prerender$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { source, map } = changes, others = __rest(changes, [\"source\", \"map\"]);\n        if (this.instance && source)\n            this.instance.setSource(source.currentValue);\n        if (this.instance && map)\n            this.instance.setMap(source.currentValue);\n        super.ngOnChanges(others);\n    }\n    ngAfterContentInit() {\n        this.sourceComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.sourceComponents), map((sources) => { var _a; return (_a = sources.last) === null || _a === void 0 ? void 0 : _a.instance; }), distinctUntilChanged())\n            .subscribe(source => this.instance.setSource(source));\n    }\n}\nLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: LayerComponent, selector: \"ol-layer\", inputs: { source: [\"olSource\", \"source\"], map: [\"olMap\", \"map\"], render: [\"olRender\", \"render\"] }, outputs: { postrender$: \"olOnPostrender\", prerender$: \"olOnPrerender\" }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => LayerComponent),\n            multi: true\n        }], queries: [{ propertyName: \"sourceComponents\", predicate: SourceComponent }], exportAs: [\"olLayer\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-layer',\n                    exportAs: 'olLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => LayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { source: [{\n                type: Input,\n                args: ['olSource']\n            }], map: [{\n                type: Input,\n                args: ['olMap']\n            }], render: [{\n                type: Input,\n                args: ['olRender']\n            }], postrender$: [{\n                type: Output,\n                args: ['olOnPostrender']\n            }], prerender$: [{\n                type: Output,\n                args: ['olOnPrerender']\n            }], sourceComponents: [{\n                type: ContentChildren,\n                args: [SourceComponent]\n            }] } });\n\nclass LayerModule {\n}\nLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerModule, declarations: [LayerComponent], imports: [CommonModule], exports: [LayerComponent] });\nLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: LayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        LayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        LayerComponent\n                    ]\n                }]\n        }] });\n\nclass BaseImageLayerComponent extends LayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        if (!this.instance) {\n            this.ngZone.runOutsideAngular(() => this.instance = new BaseImageLayer(this));\n        }\n        super.ngOnInit();\n    }\n}\nBaseImageLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nBaseImageLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: BaseImageLayerComponent, selector: \"ol-base-image-layer\", inputs: { source: [\"olSource\", \"source\"] }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => BaseImageLayerComponent),\n            multi: true\n        }], queries: [{ propertyName: \"sources\", predicate: ImageSourceComponent }], exportAs: [\"olBaseImageLayer\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-base-image-layer',\n                    exportAs: 'olBaseImageLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => BaseImageLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { source: [{\n                type: Input,\n                args: ['olSource']\n            }], sources: [{\n                type: ContentChildren,\n                args: [ImageSourceComponent]\n            }] } });\n\nclass BaseImageLayerModule {\n}\nBaseImageLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBaseImageLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerModule, declarations: [BaseImageLayerComponent], imports: [CommonModule], exports: [BaseImageLayerComponent] });\nBaseImageLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseImageLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        BaseImageLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        BaseImageLayerComponent\n                    ]\n                }]\n        }] });\n\nclass TileSourceComponent extends SourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n}\nTileSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nTileSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: TileSourceComponent, selector: \"ol-tile-source\", inputs: { cacheSize: \"cacheSize\", opaque: \"opaque\", tilePixelRatio: \"tilePixelRatio\", tileGrid: \"tileGrid\", transition: \"transition\", key: \"key\", zDirection: \"zDirection\" }, exportAs: [\"olTileSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-tile-source',\n                    exportAs: 'olTileSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { cacheSize: [{\n                type: Input\n            }], opaque: [{\n                type: Input\n            }], tilePixelRatio: [{\n                type: Input\n            }], tileGrid: [{\n                type: Input\n            }], transition: [{\n                type: Input\n            }], key: [{\n                type: Input\n            }], zDirection: [{\n                type: Input\n            }] } });\n\nclass TileSourceModule {\n}\nTileSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTileSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceModule, declarations: [TileSourceComponent], imports: [CommonModule], exports: [TileSourceComponent] });\nTileSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TileSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        TileSourceComponent\n                    ]\n                }]\n        }] });\n\nclass BaseTileLayerComponent extends LayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.changePreload$ = new EventEmitter();\n        this.changeUseInterimTilesOnError$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new BaseTileLayer(this);\n            }\n            this.instance.on('change:preload', (event) => this.changePreload$.emit(event));\n            this.instance.on('change:useInterimTilesOnError', (event) => this.changeUseInterimTilesOnError$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { preload, useInterimTilesOnError } = changes, others = __rest(changes, [\"preload\", \"useInterimTilesOnError\"]);\n        if (this.instance && preload)\n            this.instance.setPreload(preload.currentValue);\n        if (this.instance && useInterimTilesOnError)\n            this.instance.setUseInterimTilesOnError(useInterimTilesOnError.currentValue);\n        super.ngOnChanges(others);\n    }\n}\nBaseTileLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nBaseTileLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: BaseTileLayerComponent, selector: \"ol-base-tile-layer\", inputs: { preload: [\"olPreload\", \"preload\"], source: [\"olSource\", \"source\"], useInterimTilesOnError: [\"olUseInterimTilesOnError\", \"useInterimTilesOnError\"] }, outputs: { changePreload$: \"olOnChangePreload\", changeUseInterimTilesOnError$: \"olOnChangeUseInterimTilesOnError\" }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => BaseTileLayerComponent),\n            multi: true\n        }], queries: [{ propertyName: \"sourceComponents\", predicate: TileSourceComponent }], exportAs: [\"olBaseTileLayer\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-base-tile-layer',\n                    exportAs: 'olBaseTileLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => BaseTileLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { preload: [{\n                type: Input,\n                args: ['olPreload']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], useInterimTilesOnError: [{\n                type: Input,\n                args: ['olUseInterimTilesOnError']\n            }], changePreload$: [{\n                type: Output,\n                args: ['olOnChangePreload']\n            }], changeUseInterimTilesOnError$: [{\n                type: Output,\n                args: ['olOnChangeUseInterimTilesOnError']\n            }], sourceComponents: [{\n                type: ContentChildren,\n                args: [TileSourceComponent]\n            }] } });\n\nclass BaseTileLayerModule {\n}\nBaseTileLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBaseTileLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerModule, declarations: [BaseTileLayerComponent], imports: [CommonModule], exports: [BaseTileLayerComponent] });\nBaseTileLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseTileLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        BaseTileLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        BaseTileLayerComponent\n                    ]\n                }]\n        }] });\n\nclass VectorSourceComponent extends SourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.addfeature$ = new EventEmitter();\n        this.changefeature$ = new EventEmitter();\n        this.clear$ = new EventEmitter();\n        this.featuresloadend$ = new EventEmitter();\n        this.featuresloaderror$ = new EventEmitter();\n        this.featuresloadstart$ = new EventEmitter();\n        this.removefeature$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new VectorSource(this);\n            }\n            this.instance.on('addfeature', (event) => this.addfeature$.emit(event));\n            this.instance.on('changefeature', (event) => this.changefeature$.emit(event));\n            this.instance.on('clear', (event) => this.clear$.emit(event));\n            this.instance.on('featuresloadend', (event) => this.featuresloadend$.emit(event));\n            this.instance.on('featuresloaderror', (event) => this.featuresloaderror$.emit(event));\n            this.instance.on('featuresloadstart', (event) => this.featuresloadstart$.emit(event));\n            this.instance.on('removefeature', (event) => this.removefeature$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { loader, url, features } = changes, others = __rest(changes, [\"loader\", \"url\", \"features\"]);\n        if (this.instance) {\n            if (loader)\n                this.instance.setLoader(loader.currentValue);\n            if (url)\n                this.instance.setUrl(url.currentValue);\n            if (features) {\n                this.instance.clear();\n                this.instance.addFeatures(features.currentValue);\n            }\n        }\n        super.ngOnChanges(others);\n    }\n}\nVectorSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nVectorSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: VectorSourceComponent, selector: \"ol-vector-source\", inputs: { features: [\"olFeatures\", \"features\"], format: [\"olFormat\", \"format\"], loader: [\"olLoader\", \"loader\"], overlaps: [\"olOverlaps\", \"overlaps\"], strategy: [\"olStrategy\", \"strategy\"], url: [\"olUrl\", \"url\"], useSpatialIndex: [\"olUseSpatialIndex\", \"useSpatialIndex\"] }, outputs: { addfeature$: \"olOnAddfeature\", changefeature$: \"olOnChangefeature\", clear$: \"olOnClear\", featuresloadend$: \"olOnFeaturesloadend\", featuresloaderror$: \"olOnFeaturesloaderror\", featuresloadstart$: \"olOnFeaturesloadstart\", removefeature$: \"olOnRemovefeature\" }, exportAs: [\"olVectorSource\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-vector-source',\n                    exportAs: 'olVectorSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { features: [{\n                type: Input,\n                args: ['olFeatures']\n            }], format: [{\n                type: Input,\n                args: ['olFormat']\n            }], loader: [{\n                type: Input,\n                args: ['olLoader']\n            }], overlaps: [{\n                type: Input,\n                args: ['olOverlaps']\n            }], strategy: [{\n                type: Input,\n                args: ['olStrategy']\n            }], url: [{\n                type: Input,\n                args: ['olUrl']\n            }], useSpatialIndex: [{\n                type: Input,\n                args: ['olUseSpatialIndex']\n            }], addfeature$: [{\n                type: Output,\n                args: ['olOnAddfeature']\n            }], changefeature$: [{\n                type: Output,\n                args: ['olOnChangefeature']\n            }], clear$: [{\n                type: Output,\n                args: ['olOnClear']\n            }], featuresloadend$: [{\n                type: Output,\n                args: ['olOnFeaturesloadend']\n            }], featuresloaderror$: [{\n                type: Output,\n                args: ['olOnFeaturesloaderror']\n            }], featuresloadstart$: [{\n                type: Output,\n                args: ['olOnFeaturesloadstart']\n            }], removefeature$: [{\n                type: Output,\n                args: ['olOnRemovefeature']\n            }] } });\n\nclass VectorSourceModule {\n}\nVectorSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVectorSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceModule, declarations: [VectorSourceComponent], imports: [CommonModule], exports: [VectorSourceComponent] });\nVectorSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        VectorSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        VectorSourceComponent\n                    ]\n                }]\n        }] });\n\nclass StyleComponent {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Style(this);\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'geometry':\n                        this.instance.setGeometry(val);\n                        break;\n                    case 'fill':\n                        this.instance.setFill(val);\n                        break;\n                    case 'image':\n                        this.instance.setImage(val);\n                        break;\n                    case 'renderer':\n                        this.instance.setRenderer(val);\n                        break;\n                    case 'stroke':\n                        this.instance.setStroke(val);\n                        break;\n                    case 'text':\n                        this.instance.setText(val);\n                        break;\n                    case 'zIndex':\n                        this.instance.setZIndex(val);\n                        break;\n                }\n            }\n        }\n    }\n}\nStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: StyleComponent, selector: \"ol-style\", inputs: { geometry: [\"olGeometry\", \"geometry\"], fill: [\"olFill\", \"fill\"], image: [\"olImage\", \"image\"], renderer: [\"olRenderer\", \"renderer\"], stroke: [\"olStroke\", \"stroke\"], text: [\"olText\", \"text\"], zIndex: [\"olZIndex\", \"zIndex\"] }, exportAs: [\"olStyle\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-style',\n                    exportAs: 'olStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { geometry: [{\n                type: Input,\n                args: ['olGeometry']\n            }], fill: [{\n                type: Input,\n                args: ['olFill']\n            }], image: [{\n                type: Input,\n                args: ['olImage']\n            }], renderer: [{\n                type: Input,\n                args: ['olRenderer']\n            }], stroke: [{\n                type: Input,\n                args: ['olStroke']\n            }], text: [{\n                type: Input,\n                args: ['olText']\n            }], zIndex: [{\n                type: Input,\n                args: ['olZIndex']\n            }] } });\n\nclass StyleModule {\n}\nStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleModule, declarations: [StyleComponent], imports: [CommonModule], exports: [StyleComponent] });\nStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        StyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        StyleComponent\n                    ]\n                }]\n        }] });\n\nclass BaseVectorLayerComponent extends LayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new BaseVectorLayer(this);\n            }\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { style } = changes, others = __rest(changes, [\"style\"]);\n        if (this.instance && style) {\n            this.instance.setStyle(style.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n    ngAfterContentInit() {\n        this.styles.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.styles), map((styles) => styles.map(s => s.instance)), map((styles) => styles && styles.length ? styles : this.style), distinctUntilChanged())\n            .subscribe(styles => this.instance.setStyle(styles));\n        super.ngAfterContentInit();\n    }\n}\nBaseVectorLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nBaseVectorLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: BaseVectorLayerComponent, selector: \"ol-base-vector-layer\", inputs: { renderOrder: [\"olRenderOrder\", \"renderOrder\"], renderBuffer: [\"olRenderBuffer\", \"renderBuffer\"], source: [\"olSource\", \"source\"], declutter: [\"olDeclutter\", \"declutter\"], style: [\"olStyle\", \"style\"], updateWhileAnimating: [\"olUpdateWhileAnimating\", \"updateWhileAnimating\"], updateWhileInteracting: [\"olUpdateWhileInteracting\", \"updateWhileInteracting\"] }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => BaseVectorLayerComponent),\n            multi: true\n        }], queries: [{ propertyName: \"sources\", predicate: VectorSourceComponent }, { propertyName: \"styles\", predicate: StyleComponent }], exportAs: [\"olBaseVectorLayer\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-base-vector-layer',\n                    exportAs: 'olBaseVectorLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => BaseVectorLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { renderOrder: [{\n                type: Input,\n                args: ['olRenderOrder']\n            }], renderBuffer: [{\n                type: Input,\n                args: ['olRenderBuffer']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], declutter: [{\n                type: Input,\n                args: ['olDeclutter']\n            }], style: [{\n                type: Input,\n                args: ['olStyle']\n            }], updateWhileAnimating: [{\n                type: Input,\n                args: ['olUpdateWhileAnimating']\n            }], updateWhileInteracting: [{\n                type: Input,\n                args: ['olUpdateWhileInteracting']\n            }], sources: [{\n                type: ContentChildren,\n                args: [VectorSourceComponent]\n            }], styles: [{\n                type: ContentChildren,\n                args: [StyleComponent]\n            }] } });\n\nclass BaseVectorLayerModule {\n}\nBaseVectorLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBaseVectorLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerModule, declarations: [BaseVectorLayerComponent], imports: [CommonModule], exports: [BaseVectorLayerComponent] });\nBaseVectorLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: BaseVectorLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        BaseVectorLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        BaseVectorLayerComponent\n                    ]\n                }]\n        }] });\n\nclass GroupLayerComponent extends BaseLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.changeLayers$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new GroupLayer(this);\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { layers } = changes, others = __rest(changes, [\"layers\"]);\n        if (this.instance && layers)\n            this.instance.setLayers(layers.currentValue);\n        super.ngOnChanges(others);\n    }\n    ngAfterContentInit() {\n        this.layerComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.layerComponents), map((components) => components.map(c => c.instance)), distinctUntilChanged())\n            .subscribe(layers => {\n            const collection = this.instance.getLayers();\n            collection.clear();\n            collection.extend(layers);\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nGroupLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nGroupLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: GroupLayerComponent, selector: \"ol-group-layer\", inputs: { layers: [\"olLayers\", \"layers\"] }, outputs: { changeLayers$: \"olOnChangeLayers\" }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => GroupLayerComponent),\n            multi: true\n        }], queries: [{ propertyName: \"layerComponents\", predicate: LAYER_PROVIDER }], exportAs: [\"olGroupLayer\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-group-layer',\n                    exportAs: 'olGroupLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => GroupLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { layers: [{\n                type: Input,\n                args: ['olLayers']\n            }], changeLayers$: [{\n                type: Output,\n                args: ['olOnChangeLayers']\n            }], layerComponents: [{\n                type: ContentChildren,\n                args: [LAYER_PROVIDER]\n            }] } });\n\nclass GroupLayerModule {\n}\nGroupLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGroupLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerModule, declarations: [GroupLayerComponent], imports: [CommonModule], exports: [GroupLayerComponent] });\nGroupLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GroupLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        GroupLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        GroupLayerComponent\n                    ]\n                }]\n        }] });\n\nclass ImageLayerComponent extends BaseImageLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => this.instance = new ImageLayer(this));\n        super.ngOnInit();\n    }\n}\nImageLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nImageLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ImageLayerComponent, selector: \"ol-image-layer\", providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => ImageLayerComponent),\n            multi: true\n        }, {\n            provide: BaseImageLayerComponent,\n            useExisting: forwardRef(() => ImageLayerComponent),\n            multi: false\n        }], exportAs: [\"olImageLayer\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-image-layer',\n                    exportAs: 'olImageLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => ImageLayerComponent),\n                            multi: true\n                        }, {\n                            provide: BaseImageLayerComponent,\n                            useExisting: forwardRef(() => ImageLayerComponent),\n                            multi: false\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\nclass ImageLayerModule {\n}\nImageLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nImageLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerModule, declarations: [ImageLayerComponent], imports: [CommonModule], exports: [ImageLayerComponent] });\nImageLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ImageLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ImageLayerComponent\n                    ]\n                }]\n        }] });\n\nclass TileLayerComponent extends BaseTileLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new TileLayer(this);\n            super.ngOnInit();\n        });\n    }\n}\nTileLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nTileLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: TileLayerComponent, selector: \"ol-tile-layer\", providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => TileLayerComponent),\n            multi: true\n        }, {\n            provide: BaseTileLayerComponent,\n            useExisting: forwardRef(() => TileLayerComponent),\n            multi: false\n        }], exportAs: [\"olTileLayer\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-tile-layer',\n                    exportAs: 'olTileLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => TileLayerComponent),\n                            multi: true\n                        }, {\n                            provide: BaseTileLayerComponent,\n                            useExisting: forwardRef(() => TileLayerComponent),\n                            multi: false\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\nclass TileLayerModule {\n}\nTileLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTileLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerModule, declarations: [TileLayerComponent], imports: [CommonModule], exports: [TileLayerComponent] });\nTileLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TileLayerComponent\n                    ],\n                    exports: [\n                        TileLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });\n\nclass VectorLayerComponent extends BaseVectorLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new VectorLayer(this);\n            }\n            super.ngOnInit();\n        });\n    }\n}\nVectorLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nVectorLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: VectorLayerComponent, selector: \"ol-vector-layer\", providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => VectorLayerComponent),\n            multi: true\n        }], exportAs: [\"olVectorLayer\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-vector-layer',\n                    exportAs: 'olVectorLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => VectorLayerComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\nclass VectorLayerModule {\n}\nVectorLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVectorLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerModule, declarations: [VectorLayerComponent], imports: [CommonModule], exports: [VectorLayerComponent] });\nVectorLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        VectorLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        VectorLayerComponent\n                    ]\n                }]\n        }] });\n\nclass UrlTileSourceComponent extends TileSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.tileloadend$ = new EventEmitter();\n        this.tileloaderror$ = new EventEmitter();\n        this.tileloadstart$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new UrlTile(this);\n            }\n            this.instance.on('tileloadend', (event) => this.tileloadend$.emit(event));\n            this.instance.on('tileloaderror', (event) => this.tileloaderror$.emit(event));\n            this.instance.on('tileloadstart', (event) => this.tileloadstart$.emit(event));\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { tileLoadFunction, tileUrlFunction, url, urls } = changes, others = __rest(changes, [\"tileLoadFunction\", \"tileUrlFunction\", \"url\", \"urls\"]);\n        if (this.instance) {\n            if (tileLoadFunction)\n                this.instance.setTileLoadFunction(tileLoadFunction.currentValue);\n            if (tileUrlFunction)\n                this.instance.setTileUrlFunction(tileUrlFunction.currentValue);\n            if (url)\n                this.instance.setUrl(url.currentValue);\n            if (urls)\n                this.instance.setUrls(urls.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nUrlTileSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nUrlTileSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: UrlTileSourceComponent, selector: \"ol-url-tile-source\", inputs: { tileLoadFunction: [\"olTileLoadFunction\", \"tileLoadFunction\"], tileUrlFunction: [\"olTileUrlFunction\", \"tileUrlFunction\"], url: [\"olUrl\", \"url\"], urls: [\"olUrls\", \"urls\"] }, outputs: { tileloadend$: \"olOnTileloadend\", tileloaderror$: \"olOnTileloaderror\", tileloadstart$: \"olOnTileloadstart\" }, exportAs: [\"olUrlTileSource\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-url-tile-source',\n                    exportAs: 'olUrlTileSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { tileLoadFunction: [{\n                type: Input,\n                args: ['olTileLoadFunction']\n            }], tileUrlFunction: [{\n                type: Input,\n                args: ['olTileUrlFunction']\n            }], url: [{\n                type: Input,\n                args: ['olUrl']\n            }], urls: [{\n                type: Input,\n                args: ['olUrls']\n            }], tileloadend$: [{\n                type: Output,\n                args: ['olOnTileloadend']\n            }], tileloaderror$: [{\n                type: Output,\n                args: ['olOnTileloaderror']\n            }], tileloadstart$: [{\n                type: Output,\n                args: ['olOnTileloadstart']\n            }] } });\n\nclass UrlTileSourceModule {\n}\nUrlTileSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nUrlTileSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceModule, declarations: [UrlTileSourceComponent], imports: [CommonModule], exports: [UrlTileSourceComponent] });\nUrlTileSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: UrlTileSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        UrlTileSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        UrlTileSourceComponent\n                    ]\n                }]\n        }] });\n\nclass VectorTileSourceComponent extends UrlTileSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new VectorTile(this);\n            }\n            super.ngOnInit();\n        });\n    }\n}\nVectorTileSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nVectorTileSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: VectorTileSourceComponent, selector: \"ol-vector-tile-source\", inputs: { extent: [\"olExtent\", \"extent\"], format: [\"olFormat\", \"format\"], overlaps: [\"olOverlaps\", \"overlaps\"], tileClass: [\"olTileClass\", \"tileClass\"], maxZoom: [\"olMaxZoom\", \"maxZoom\"], minZoom: [\"olMinZoom\", \"minZoom\"], tileSize: [\"olTileSize\", \"tileSize\"], maxResolution: [\"olMaxResolution\", \"maxResolution\"] }, exportAs: [\"olVectorTileSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-vector-tile-source',\n                    exportAs: 'olVectorTileSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { extent: [{\n                type: Input,\n                args: ['olExtent']\n            }], format: [{\n                type: Input,\n                args: ['olFormat']\n            }], overlaps: [{\n                type: Input,\n                args: ['olOverlaps']\n            }], tileClass: [{\n                type: Input,\n                args: ['olTileClass']\n            }], maxZoom: [{\n                type: Input,\n                args: ['olMaxZoom']\n            }], minZoom: [{\n                type: Input,\n                args: ['olMinZoom']\n            }], tileSize: [{\n                type: Input,\n                args: ['olTileSize']\n            }], maxResolution: [{\n                type: Input,\n                args: ['olMaxResolution']\n            }] } });\n\nclass VectorTileSourceModule {\n}\nVectorTileSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVectorTileSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceModule, declarations: [VectorTileSourceComponent], imports: [CommonModule], exports: [VectorTileSourceComponent] });\nVectorTileSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        VectorTileSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        VectorTileSourceComponent\n                    ]\n                }]\n        }] });\n\nclass VectorTileLayerComponent extends BaseVectorLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.onPreload$ = new EventEmitter();\n        this.onUseInterimTilesOnError$ = new EventEmitter();\n    }\n    ngOnInit() {\n        super.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new VectorTileLayer(this);\n            }\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { preload, useInterimTilesOnError } = changes, others = __rest(changes, [\"preload\", \"useInterimTilesOnError\"]);\n        if (this.instance) {\n            if (preload)\n                this.instance.setPreload(preload.currentValue);\n            if (useInterimTilesOnError)\n                this.instance.setUseInterimTilesOnError(useInterimTilesOnError.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nVectorTileLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nVectorTileLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: VectorTileLayerComponent, selector: \"ol-vector-tile-layer\", inputs: { renderMode: [\"olRenderMode\", \"renderMode\"], source: [\"olSource\", \"source\"], preload: [\"olPreload\", \"preload\"], useInterimTilesOnError: [\"olUseInterimTilesOnError\", \"useInterimTilesOnError\"] }, outputs: { onPreload$: \"olOnPreload\", onUseInterimTilesOnError$: \"olOnUseInterimTilesOnError\" }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => VectorTileLayerComponent),\n            multi: true\n        }, {\n            provide: BaseVectorLayerComponent,\n            useExisting: forwardRef(() => VectorTileLayerComponent),\n            multi: false\n        }], queries: [{ propertyName: \"sources\", predicate: VectorTileSourceComponent }], exportAs: [\"olVectorTileLayer\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-vector-tile-layer',\n                    exportAs: 'olVectorTileLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => VectorTileLayerComponent),\n                            multi: true\n                        }, {\n                            provide: BaseVectorLayerComponent,\n                            useExisting: forwardRef(() => VectorTileLayerComponent),\n                            multi: false\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { renderMode: [{\n                type: Input,\n                args: ['olRenderMode']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], preload: [{\n                type: Input,\n                args: ['olPreload']\n            }], useInterimTilesOnError: [{\n                type: Input,\n                args: ['olUseInterimTilesOnError']\n            }], onPreload$: [{\n                type: Output,\n                args: ['olOnPreload']\n            }], onUseInterimTilesOnError$: [{\n                type: Output,\n                args: ['olOnUseInterimTilesOnError']\n            }], sources: [{\n                type: ContentChildren,\n                args: [VectorTileSourceComponent]\n            }] } });\n\nclass VectorTileLayerModule {\n}\nVectorTileLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVectorTileLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerModule, declarations: [VectorTileLayerComponent], imports: [CommonModule], exports: [VectorTileLayerComponent] });\nVectorTileLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: VectorTileLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        VectorTileLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        VectorTileLayerComponent\n                    ]\n                }]\n        }] });\n\nclass DataTileSourceComponent extends TileSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.tileloadend$ = new EventEmitter();\n        this.tileloaderror$ = new EventEmitter();\n        this.tileloadstart$ = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new DataTileSource(this);\n            }\n            this.instance.on('tileloadend', (event) => this.tileloadend$.emit(event));\n            this.instance.on('tileloaderror', (event) => this.tileloaderror$.emit(event));\n            this.instance.on('tileloadstart', (event) => this.tileloadstart$.emit(event));\n            super.ngOnInit();\n        });\n    }\n}\nDataTileSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nDataTileSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: DataTileSourceComponent, selector: \"ol-data-tile-source\", inputs: { loader: [\"olLoader\", \"loader\"], maxZoom: [\"olMaxZoom\", \"maxZoom\"], minZoom: [\"olMinZoom\", \"minZoom\"], tileSize: [\"olTileSize\", \"tileSize\"], maxResolution: [\"olMaxResolution\", \"maxResolution\"], bandCount: [\"olBandCount\", \"bandCount\"] }, outputs: { tileloadend$: \"olTileloadend\", tileloaderror$: \"olTileloaderror\", tileloadstart$: \"olTileloadstart\" }, exportAs: [\"olDataTileSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-data-tile-source',\n                    exportAs: 'olDataTileSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { loader: [{\n                type: Input,\n                args: ['olLoader']\n            }], maxZoom: [{\n                type: Input,\n                args: ['olMaxZoom']\n            }], minZoom: [{\n                type: Input,\n                args: ['olMinZoom']\n            }], tileSize: [{\n                type: Input,\n                args: ['olTileSize']\n            }], maxResolution: [{\n                type: Input,\n                args: ['olMaxResolution']\n            }], bandCount: [{\n                type: Input,\n                args: ['olBandCount']\n            }], tileloadend$: [{\n                type: Output,\n                args: ['olTileloadend']\n            }], tileloaderror$: [{\n                type: Output,\n                args: ['olTileloaderror']\n            }], tileloadstart$: [{\n                type: Output,\n                args: ['olTileloadstart']\n            }] } });\n\nclass DataTileSourceModule {\n}\nDataTileSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDataTileSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceModule, declarations: [DataTileSourceComponent], imports: [CommonModule], exports: [DataTileSourceComponent] });\nDataTileSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: DataTileSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        DataTileSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        DataTileSourceComponent\n                    ]\n                }]\n        }] });\n\nclass GeoTIFFSourceComponent extends DataTileSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.sources = [];\n        this.convertToRGB = false;\n        this.normalize = true;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new GeoTIFFSource(this);\n            super.ngOnInit();\n        });\n    }\n}\nGeoTIFFSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nGeoTIFFSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: GeoTIFFSourceComponent, selector: \"ol-geo-tiff-source\", inputs: { sources: [\"olSources\", \"sources\"], convertToRGB: [\"olConvertToRGB\", \"convertToRGB\"], normalize: [\"olNormalize\", \"normalize\"] }, exportAs: [\"olGeoTIFFSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-geo-tiff-source',\n                    exportAs: 'olGeoTIFFSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { sources: [{\n                type: Input,\n                args: ['olSources']\n            }], convertToRGB: [{\n                type: Input,\n                args: ['olConvertToRGB']\n            }], normalize: [{\n                type: Input,\n                args: ['olNormalize']\n            }] } });\n\nclass GeoTIFFSourceModule {\n}\nGeoTIFFSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGeoTIFFSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceModule, declarations: [GeoTIFFSourceComponent], imports: [CommonModule], exports: [GeoTIFFSourceComponent] });\nGeoTIFFSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: GeoTIFFSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        GeoTIFFSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        GeoTIFFSourceComponent\n                    ]\n                }]\n        }] });\n\nclass WebGLTileLayerComponent extends BaseTileLayerComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new WebGLTileLayer(this);\n            super.ngOnInit();\n        });\n    }\n}\nWebGLTileLayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nWebGLTileLayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: WebGLTileLayerComponent, selector: \"ol-webgl-tile-layer\", inputs: { style: [\"olStyle\", \"style\"], cacheSize: [\"olCacheSize\", \"cacheSize\"], sources: [\"olSources\", \"sources\"] }, providers: [{\n            provide: LAYER_PROVIDER,\n            useExisting: forwardRef(() => WebGLTileLayerComponent),\n            multi: true\n        }, {\n            provide: BaseTileLayerComponent,\n            useExisting: forwardRef(() => WebGLTileLayerComponent),\n            multi: false\n        }], queries: [{ propertyName: \"sourceComponents\", predicate: GeoTIFFSourceComponent }], exportAs: [\"olWebGLTileLayer\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-webgl-tile-layer',\n                    exportAs: 'olWebGLTileLayer',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: LAYER_PROVIDER,\n                            useExisting: forwardRef(() => WebGLTileLayerComponent),\n                            multi: true\n                        }, {\n                            provide: BaseTileLayerComponent,\n                            useExisting: forwardRef(() => WebGLTileLayerComponent),\n                            multi: false\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { style: [{\n                type: Input,\n                args: ['olStyle']\n            }], cacheSize: [{\n                type: Input,\n                args: ['olCacheSize']\n            }], sources: [{\n                type: Input,\n                args: ['olSources']\n            }], sourceComponents: [{\n                type: ContentChildren,\n                args: [GeoTIFFSourceComponent]\n            }] } });\n\nclass WebGLTileLayerModule {\n}\nWebGLTileLayerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nWebGLTileLayerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerModule, declarations: [WebGLTileLayerComponent], imports: [CommonModule], exports: [WebGLTileLayerComponent] });\nWebGLTileLayerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: WebGLTileLayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        WebGLTileLayerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        WebGLTileLayerComponent\n                    ]\n                }]\n        }] });\n\nclass OverlayContentDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nOverlayContentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayContentDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nOverlayContentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.11\", type: OverlayContentDirective, selector: \"[olOverlayContent]\", exportAs: [\"olOverlayContent\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayContentDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[olOverlayContent]',\n                    exportAs: 'olOverlayContent'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass OverlayComponent {\n    constructor(cfr, appRef, viewContainerRef, injector) {\n        this.cfr = cfr;\n        this.appRef = appRef;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n    }\n    ngAfterViewInit() {\n        const element = this.element || document.createElement('div');\n        const portalOutlet = new DomPortalOutlet(element, this.cfr, this.appRef, this.injector);\n        const portal = new TemplatePortal(this.content, this.viewContainerRef);\n        const componentRef = portalOutlet.attach(portal);\n        this.instance = new Overlay(Object.assign(Object.assign({}, this), { element }));\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'element':\n                        this.instance.setElement(val);\n                        break;\n                    case 'offset':\n                        this.instance.setOffset(val);\n                        break;\n                    case 'position':\n                        this.instance.setPosition(val);\n                        break;\n                    case 'positioning':\n                        this.instance.setPositioning(val);\n                        break;\n                    default:\n                        properties[key] = val;\n                        break;\n                }\n            }\n        }\n        if (Object.keys(properties).length > 0) {\n            this.instance.setProperties(properties);\n        }\n    }\n}\nOverlayComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayComponent, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.ViewContainerRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nOverlayComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: OverlayComponent, selector: \"ol-overlay\", inputs: { id: [\"olId\", \"id\"], element: [\"olElement\", \"element\"], offset: [\"olOffset\", \"offset\"], position: [\"olPosition\", \"position\"], positioning: [\"olPositioning\", \"positioning\"], stopEvent: [\"olStopEvent\", \"stopEvent\"], insertFirst: [\"olInsertFirst\", \"insertFirst\"], autoPan: [\"olAutoPan\", \"autoPan\"], autoPanAnimation: [\"olAutoPanAnimation\", \"autoPanAnimation\"], autoPanMargin: [\"olAutoPanMargin\", \"autoPanMargin\"], autoPanOptions: [\"olAutoPanOptions\", \"autoPanOptions\"], className: [\"olClassName\", \"className\"] }, queries: [{ propertyName: \"content\", first: true, predicate: OverlayContentDirective, descendants: true, read: TemplateRef, static: true }], exportAs: [\"olOverlay\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-overlay',\n                    exportAs: 'olOverlay',\n                    template: `<ng-content></ng-content>`,\n                    styles: [],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.ViewContainerRef }, { type: i0.Injector }]; }, propDecorators: { id: [{\n                type: Input,\n                args: ['olId']\n            }], element: [{\n                type: Input,\n                args: ['olElement']\n            }], offset: [{\n                type: Input,\n                args: ['olOffset']\n            }], position: [{\n                type: Input,\n                args: ['olPosition']\n            }], positioning: [{\n                type: Input,\n                args: ['olPositioning']\n            }], stopEvent: [{\n                type: Input,\n                args: ['olStopEvent']\n            }], insertFirst: [{\n                type: Input,\n                args: ['olInsertFirst']\n            }], autoPan: [{\n                type: Input,\n                args: ['olAutoPan']\n            }], autoPanAnimation: [{\n                type: Input,\n                args: ['olAutoPanAnimation']\n            }], autoPanMargin: [{\n                type: Input,\n                args: ['olAutoPanMargin']\n            }], autoPanOptions: [{\n                type: Input,\n                args: ['olAutoPanOptions']\n            }], className: [{\n                type: Input,\n                args: ['olClassName']\n            }], content: [{\n                type: ContentChild,\n                args: [OverlayContentDirective, { static: true, read: TemplateRef }]\n            }] } });\n\nclass OverlayModule {\n}\nOverlayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOverlayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayModule, declarations: [OverlayComponent,\n        OverlayContentDirective], imports: [CommonModule], exports: [OverlayComponent,\n        OverlayContentDirective] });\nOverlayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        OverlayComponent,\n                        OverlayContentDirective\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        OverlayComponent,\n                        OverlayContentDirective\n                    ]\n                }]\n        }] });\n\nclass MapComponent {\n    constructor(elementRef, ngZone) {\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.width = '100%';\n        this.height = '100%';\n        this.change$ = new EventEmitter();\n        this.changeLayerGroup$ = new EventEmitter();\n        this.changeSize$ = new EventEmitter();\n        this.changeTarget$ = new EventEmitter();\n        this.changeView$ = new EventEmitter();\n        this.click$ = new EventEmitter();\n        this.dblclick$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.moveend$ = new EventEmitter();\n        this.movestart$ = new EventEmitter();\n        this.pointerdrag$ = new EventEmitter();\n        this.pointermove$ = new EventEmitter();\n        this.postcompose$ = new EventEmitter();\n        this.postrender$ = new EventEmitter();\n        this.precompose$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n        this.rendercomplete$ = new EventEmitter();\n        this.singleclick$ = new EventEmitter();\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.createInstance();\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                if (key === 'target') {\n                    this.ngZone.runOutsideAngular(() => {\n                        this.instance.setTarget(val);\n                    });\n                }\n                else if (key === 'view') {\n                    this.ngZone.runOutsideAngular(() => {\n                        this.instance.setView(val);\n                    });\n                }\n                else {\n                    properties[key] = val;\n                }\n            }\n        }\n        if (Object.keys(properties).length > 0) {\n            this.ngZone.runOutsideAngular(() => {\n                this.instance.setProperties(properties);\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this.layerComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.layerComponents), filter(() => !this.layers), map((components) => components.map(c => c.instance)), distinctUntilChanged())\n            .subscribe(layers => {\n            const collection = this.instance.getLayers();\n            collection.clear();\n            collection.extend(layers);\n        });\n        this.interactionComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.interactionComponents), filter(() => !this.interactions), map((components) => components.map(c => c.instance)), map((interactions) => defaults().extend(interactions).getArray()), distinctUntilChanged())\n            .subscribe(interactions => {\n            const collection = this.instance.getInteractions();\n            collection.clear();\n            collection.extend(interactions);\n        });\n        this.controlComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.controlComponents), filter(() => !this.controls), map((components) => components.map(c => c.instance)), distinctUntilChanged())\n            .subscribe(controls => {\n            const collection = this.instance.getControls();\n            collection.clear();\n            collection.extend(controls);\n        });\n        this.overlayComponents.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.overlayComponents), filter(() => !this.overlays), map((components) => components.map(c => c.instance)), distinctUntilChanged())\n            .subscribe(overlays => {\n            const collection = this.instance.getOverlays();\n            collection.clear();\n            collection.extend(overlays);\n        });\n    }\n    ngAfterViewInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance.updateSize();\n        });\n    }\n    ngOnDestroy() {\n        this.instance.setTarget(undefined);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    createInstance() {\n        const target = this.elementRef.nativeElement.firstElementChild;\n        this.instance = new Map(Object.assign(Object.assign({}, this), { target }));\n        this.instance.on('change', (event) => this.change$.emit(event));\n        this.instance.on('change:layergroup', (event) => this.changeLayerGroup$.emit(event));\n        this.instance.on('change:size', (event) => this.changeSize$.emit(event));\n        this.instance.on('change:target', (event) => this.changeTarget$.emit(event));\n        this.instance.on('change:view', (event) => this.changeView$.emit(event));\n        this.instance.on('click', (event) => this.click$.emit(event));\n        this.instance.on('dblclick', (event) => this.dblclick$.emit(event));\n        this.instance.on('error', (event) => this.error$.emit(event));\n        this.instance.on('moveend', (event) => this.moveend$.emit(event));\n        this.instance.on('movestart', (event) => this.movestart$.emit(event));\n        this.instance.on('pointerdrag', (event) => this.pointerdrag$.emit(event));\n        this.instance.on('pointermove', (event) => this.pointermove$.emit(event));\n        this.instance.on('postcompose', (event) => this.postcompose$.emit(event));\n        this.instance.on('postrender', (event) => this.postrender$.emit(event));\n        this.instance.on('precompose', (event) => this.precompose$.emit(event));\n        this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n        this.instance.on('rendercomplete', (event) => this.rendercomplete$.emit(event));\n        this.instance.on('singleclick', (event) => this.singleclick$.emit(event));\n    }\n}\nMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: MapComponent, selector: \"ol-map\", inputs: { width: [\"olWidth\", \"width\"], height: [\"olHeight\", \"height\"], controls: [\"olControls\", \"controls\"], pixelRatio: [\"olPixelRatio\", \"pixelRatio\"], interactions: [\"olInteractions\", \"interactions\"], keyboardEventTarget: [\"olKeyboardEventTarget\", \"keyboardEventTarget\"], layers: [\"olLayers\", \"layers\"], maxTilesLoading: [\"olMaxTilesLoading\", \"maxTilesLoading\"], moveTolerance: [\"olMoveTolerance\", \"moveTolerance\"], overlays: [\"olVverlays\", \"overlays\"], target: [\"olTarget\", \"target\"], view: [\"olView\", \"view\"] }, outputs: { change$: \"olOnChange\", changeLayerGroup$: \"olOnChangeLayerGroup\", changeSize$: \"olOnChangeSize\", changeTarget$: \"olOnChangeTarget\", changeView$: \"olOnChangeView\", click$: \"olOnClick\", dblclick$: \"olOnDblclick\", error$: \"olOnError\", moveend$: \"olOnMoveend\", movestart$: \"olOnMovestart\", pointerdrag$: \"olOnPointerdrag\", pointermove$: \"olOnPointermove\", postcompose$: \"olOnPostcompose\", postrender$: \"olOnPostrender\", precompose$: \"olOnPrecompose\", propertychange$: \"olOnPropertychange\", rendercomplete$: \"olOnRendercomplete\", singleclick$: \"olOnSingleclick\" }, host: { properties: { \"style.display\": \"'block'\", \"style.width\": \"width\", \"style.height\": \"height\" } }, queries: [{ propertyName: \"layerComponents\", predicate: LAYER_PROVIDER }, { propertyName: \"interactionComponents\", predicate: InteractionComponent, descendants: true }, { propertyName: \"controlComponents\", predicate: ControlComponent, descendants: true }, { propertyName: \"overlayComponents\", predicate: OverlayComponent, descendants: true }], exportAs: [\"olMap\"], usesOnChanges: true, ngImport: i0, template: `\n    <div [style.width]=\"'100%'\" [style.height]=\"'100%'\"></div>\n    <ng-content></ng-content>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-map',\n                    exportAs: 'olMap',\n                    template: `\n    <div [style.width]=\"'100%'\" [style.height]=\"'100%'\"></div>\n    <ng-content></ng-content>\n  `,\n                    styles: [],\n                    host: {\n                        '[style.display]': `'block'`,\n                        '[style.width]': `width`,\n                        '[style.height]': `height`\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { width: [{\n                type: Input,\n                args: ['olWidth']\n            }], height: [{\n                type: Input,\n                args: ['olHeight']\n            }], controls: [{\n                type: Input,\n                args: ['olControls']\n            }], pixelRatio: [{\n                type: Input,\n                args: ['olPixelRatio']\n            }], interactions: [{\n                type: Input,\n                args: ['olInteractions']\n            }], keyboardEventTarget: [{\n                type: Input,\n                args: ['olKeyboardEventTarget']\n            }], layers: [{\n                type: Input,\n                args: ['olLayers']\n            }], maxTilesLoading: [{\n                type: Input,\n                args: ['olMaxTilesLoading']\n            }], moveTolerance: [{\n                type: Input,\n                args: ['olMoveTolerance']\n            }], overlays: [{\n                type: Input,\n                args: ['olVverlays']\n            }], target: [{\n                type: Input,\n                args: ['olTarget']\n            }], view: [{\n                type: Input,\n                args: ['olView']\n            }], change$: [{\n                type: Output,\n                args: ['olOnChange']\n            }], changeLayerGroup$: [{\n                type: Output,\n                args: ['olOnChangeLayerGroup']\n            }], changeSize$: [{\n                type: Output,\n                args: ['olOnChangeSize']\n            }], changeTarget$: [{\n                type: Output,\n                args: ['olOnChangeTarget']\n            }], changeView$: [{\n                type: Output,\n                args: ['olOnChangeView']\n            }], click$: [{\n                type: Output,\n                args: ['olOnClick']\n            }], dblclick$: [{\n                type: Output,\n                args: ['olOnDblclick']\n            }], error$: [{\n                type: Output,\n                args: ['olOnError']\n            }], moveend$: [{\n                type: Output,\n                args: ['olOnMoveend']\n            }], movestart$: [{\n                type: Output,\n                args: ['olOnMovestart']\n            }], pointerdrag$: [{\n                type: Output,\n                args: ['olOnPointerdrag']\n            }], pointermove$: [{\n                type: Output,\n                args: ['olOnPointermove']\n            }], postcompose$: [{\n                type: Output,\n                args: ['olOnPostcompose']\n            }], postrender$: [{\n                type: Output,\n                args: ['olOnPostrender']\n            }], precompose$: [{\n                type: Output,\n                args: ['olOnPrecompose']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olOnPropertychange']\n            }], rendercomplete$: [{\n                type: Output,\n                args: ['olOnRendercomplete']\n            }], singleclick$: [{\n                type: Output,\n                args: ['olOnSingleclick']\n            }], layerComponents: [{\n                type: ContentChildren,\n                args: [LAYER_PROVIDER]\n            }], interactionComponents: [{\n                type: ContentChildren,\n                args: [InteractionComponent, { descendants: true }]\n            }], controlComponents: [{\n                type: ContentChildren,\n                args: [ControlComponent, { descendants: true }]\n            }], overlayComponents: [{\n                type: ContentChildren,\n                args: [OverlayComponent, { descendants: true }]\n            }] } });\n\nclass MapModule {\n}\nMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapModule, declarations: [MapComponent], imports: [CommonModule], exports: [MapComponent] });\nMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: MapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        MapComponent\n                    ],\n                    exports: [\n                        MapComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });\n\nclass ClusterSourceComponent extends VectorSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Cluster(this);\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { distance, source } = changes, others = __rest(changes, [\"distance\", \"source\"]);\n        if (this.instance) {\n            if (distance)\n                this.instance.setDistance(distance.currentValue);\n            if (source)\n                this.instance.setSource(source.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n    ngAfterContentInit() {\n        this.sources.changes\n            .pipe(takeUntil(this.destroy$), startWith(this.sources), map((sources) => { var _a; return (_a = sources.last) === null || _a === void 0 ? void 0 : _a.instance; }), distinctUntilChanged())\n            .subscribe(source => this.instance.setSource(source));\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nClusterSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nClusterSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ClusterSourceComponent, selector: \"ol-cluster-source\", inputs: { distance: [\"olDistance\", \"distance\"], geometryFunction: [\"olGeometryFunction\", \"geometryFunction\"], source: [\"olSource\", \"source\"] }, providers: [{\n            provide: VectorSourceComponent,\n            useExisting: forwardRef(() => ClusterSourceComponent),\n            multi: true\n        }], queries: [{ propertyName: \"sources\", predicate: VectorSourceComponent }], exportAs: [\"olClusterSource\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-cluster-source',\n                    exportAs: 'olClusterSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: VectorSourceComponent,\n                            useExisting: forwardRef(() => ClusterSourceComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { distance: [{\n                type: Input,\n                args: ['olDistance']\n            }], geometryFunction: [{\n                type: Input,\n                args: ['olGeometryFunction']\n            }], source: [{\n                type: Input,\n                args: ['olSource']\n            }], sources: [{\n                type: ContentChildren,\n                args: [VectorSourceComponent]\n            }] } });\n\nclass ClusterSourceModule {\n}\nClusterSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nClusterSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceModule, declarations: [ClusterSourceComponent], imports: [CommonModule], exports: [ClusterSourceComponent] });\nClusterSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ClusterSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ClusterSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ClusterSourceComponent\n                    ]\n                }]\n        }] });\n\nclass ImageWMSSourceComponent extends ImageSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new ImageWMS(this);\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { imageLoadFunction, url } = changes, others = __rest(changes, [\"imageLoadFunction\", \"url\"]);\n        if (this.instance) {\n            imageLoadFunction && this.instance.setImageLoadFunction(imageLoadFunction.currentValue);\n            url && this.instance.setUrl(url.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nImageWMSSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nImageWMSSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ImageWMSSourceComponent, selector: \"ol-image-wms-source\", inputs: { crossOrigin: [\"olCrossOrigin\", \"crossOrigin\"], hidpi: [\"olHidpi\", \"hidpi\"], serverType: [\"olServerType\", \"serverType\"], imageLoadFunction: [\"olImageLoadFunction\", \"imageLoadFunction\"], params: [\"olParams\", \"params\"], ratio: [\"olRatio\", \"ratio\"], url: [\"olUrl\", \"url\"] }, providers: [{\n            provide: ImageSourceComponent,\n            useExisting: forwardRef(() => ImageWMSSourceComponent),\n            multi: true\n        }], exportAs: [\"olImageWMSSource\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-image-wms-source',\n                    exportAs: 'olImageWMSSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: ImageSourceComponent,\n                            useExisting: forwardRef(() => ImageWMSSourceComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { crossOrigin: [{\n                type: Input,\n                args: ['olCrossOrigin']\n            }], hidpi: [{\n                type: Input,\n                args: ['olHidpi']\n            }], serverType: [{\n                type: Input,\n                args: ['olServerType']\n            }], imageLoadFunction: [{\n                type: Input,\n                args: ['olImageLoadFunction']\n            }], params: [{\n                type: Input,\n                args: ['olParams']\n            }], ratio: [{\n                type: Input,\n                args: ['olRatio']\n            }], url: [{\n                type: Input,\n                args: ['olUrl']\n            }] } });\n\nclass ImageWMSSourceModule {\n}\nImageWMSSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nImageWMSSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceModule, declarations: [ImageWMSSourceComponent], imports: [CommonModule], exports: [ImageWMSSourceComponent] });\nImageWMSSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageWMSSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ImageWMSSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ImageWMSSourceComponent\n                    ]\n                }]\n        }] });\n\nclass TileImageSourceComponent extends UrlTileSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new TileImageSource(this);\n            }\n            super.ngOnInit();\n        });\n    }\n}\nTileImageSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nTileImageSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: TileImageSourceComponent, selector: \"ol-tile-image-source\", inputs: { crossOrigin: \"crossOrigin\", imageSmoothing: \"imageSmoothing\", reprojectionErrorThreshold: \"reprojectionErrorThreshold\", tileClass: \"tileClass\" }, exportAs: [\"olTileImageSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-tile-image-source',\n                    exportAs: 'olTileImageSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { crossOrigin: [{\n                type: Input\n            }], imageSmoothing: [{\n                type: Input\n            }], reprojectionErrorThreshold: [{\n                type: Input\n            }], tileClass: [{\n                type: Input\n            }] } });\n\nclass TileImageSourceModule {\n}\nTileImageSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTileImageSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceModule, declarations: [TileImageSourceComponent], imports: [CommonModule], exports: [TileImageSourceComponent] });\nTileImageSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TileImageSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TileImageSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        TileImageSourceComponent\n                    ]\n                }]\n        }] });\n\nclass XYZSourceComponent extends TileImageSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new XYZSource(this);\n            }\n            super.ngOnInit();\n        });\n    }\n}\nXYZSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nXYZSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: XYZSourceComponent, selector: \"ol-xyz-source\", inputs: { maxZoom: [\"olMaxZoom\", \"maxZoom\"], minZoom: [\"olMinZoom\", \"minZoom\"], maxResolution: [\"olMaxResolution\", \"maxResolution\"], tileSize: [\"olTileSize\", \"tileSize\"] }, providers: [{\n            provide: TileSourceComponent,\n            useExisting: forwardRef(() => XYZSourceComponent),\n            multi: true\n        }], exportAs: [\"olXYZSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-xyz-source',\n                    exportAs: 'olXYZSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: TileSourceComponent,\n                            useExisting: forwardRef(() => XYZSourceComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { maxZoom: [{\n                type: Input,\n                args: ['olMaxZoom']\n            }], minZoom: [{\n                type: Input,\n                args: ['olMinZoom']\n            }], maxResolution: [{\n                type: Input,\n                args: ['olMaxResolution']\n            }], tileSize: [{\n                type: Input,\n                args: ['olTileSize']\n            }] } });\n\nclass XYZSourceModule {\n}\nXYZSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nXYZSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceModule, declarations: [XYZSourceComponent], imports: [CommonModule], exports: [XYZSourceComponent] });\nXYZSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: XYZSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        XYZSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        XYZSourceComponent\n                    ]\n                }]\n        }] });\n\nclass OSMSourceComponent extends XYZSourceComponent {\n    constructor(ngZone) {\n        super(ngZone);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new OSM(this);\n            super.ngOnInit();\n        });\n    }\n}\nOSMSourceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nOSMSourceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: OSMSourceComponent, selector: \"ol-osm-source\", providers: [{\n            provide: TileSourceComponent,\n            useExisting: forwardRef(() => OSMSourceComponent),\n            multi: true\n        }], exportAs: [\"olOSMSource\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-osm-source',\n                    exportAs: 'olOSMSource',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: TileSourceComponent,\n                            useExisting: forwardRef(() => OSMSourceComponent),\n                            multi: true\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\nclass OSMSourceModule {\n}\nOSMSourceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOSMSourceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceModule, declarations: [OSMSourceComponent], imports: [CommonModule], exports: [OSMSourceComponent] });\nOSMSourceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: OSMSourceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        OSMSourceComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        OSMSourceComponent\n                    ]\n                }]\n        }] });\n\nclass ImageStyleComponent {\n    constructor(ngZone, host) {\n        this.ngZone = ngZone;\n        this.host = host;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.host.instance.setImage(this.instance);\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'opacity':\n                        this.instance.setOpacity(val);\n                        break;\n                    case 'rotateWithView':\n                        this.instance.setRotateWithView(val);\n                        break;\n                    case 'rotation':\n                        this.instance.setRotation(val);\n                        break;\n                    case 'scale':\n                        this.instance.setScale(val);\n                        break;\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.host.instance.setImage(null);\n    }\n}\nImageStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent }], target: i0.ɵɵFactoryTarget.Component });\nImageStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ImageStyleComponent, selector: \"ol-image-style\", inputs: { opacity: [\"olOpacity\", \"opacity\"], rotateWithView: [\"olRotateWithView\", \"rotateWithView\"], rotation: [\"olRotation\", \"rotation\"], scale: [\"olScale\", \"scale\"], displacement: [\"olDisplacement\", \"displacement\"], declutterMode: [\"olDeclutterMode\", \"declutterMode\"] }, exportAs: [\"olImageStyle\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-image-style',\n                    exportAs: 'olImageStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent }]; }, propDecorators: { opacity: [{\n                type: Input,\n                args: ['olOpacity']\n            }], rotateWithView: [{\n                type: Input,\n                args: ['olRotateWithView']\n            }], rotation: [{\n                type: Input,\n                args: ['olRotation']\n            }], scale: [{\n                type: Input,\n                args: ['olScale']\n            }], displacement: [{\n                type: Input,\n                args: ['olDisplacement']\n            }], declutterMode: [{\n                type: Input,\n                args: ['olDeclutterMode']\n            }] } });\n\nclass ImageStyleModule {\n}\nImageStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nImageStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleModule, declarations: [ImageStyleComponent], imports: [CommonModule], exports: [ImageStyleComponent] });\nImageStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ImageStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ImageStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        ImageStyleComponent\n                    ]\n                }]\n        }] });\n\nclass RegularShapeStyleComponent extends ImageStyleComponent {\n    constructor(ngZone, host) {\n        super(ngZone, host);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            if (!this.instance) {\n                this.instance = new RegularShape(this);\n            }\n            super.ngOnInit();\n        });\n    }\n    setFill(fill) {\n        this.fill = fill;\n        this.ngOnInit();\n    }\n    setStroke(stroke) {\n        this.stroke = stroke;\n        this.ngOnInit();\n    }\n}\nRegularShapeStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent }], target: i0.ɵɵFactoryTarget.Component });\nRegularShapeStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: RegularShapeStyleComponent, selector: \"ol-regular-shape-style\", inputs: { fill: [\"olFill\", \"fill\"], points: [\"olPoints\", \"points\"], radius: [\"olRadius\", \"radius\"], radius1: [\"olRadius1\", \"radius1\"], radius2: [\"olRadius2\", \"radius2\"], angle: [\"olAngle\", \"angle\"], stroke: [\"olStroke\", \"stroke\"] }, exportAs: [\"olRegularShapeStyle\"], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-regular-shape-style',\n                    exportAs: 'olRegularShapeStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent }]; }, propDecorators: { fill: [{\n                type: Input,\n                args: ['olFill']\n            }], points: [{\n                type: Input,\n                args: ['olPoints']\n            }], radius: [{\n                type: Input,\n                args: ['olRadius']\n            }], radius1: [{\n                type: Input,\n                args: ['olRadius1']\n            }], radius2: [{\n                type: Input,\n                args: ['olRadius2']\n            }], angle: [{\n                type: Input,\n                args: ['olAngle']\n            }], stroke: [{\n                type: Input,\n                args: ['olStroke']\n            }] } });\n\nclass RegularShapeStyleModule {\n}\nRegularShapeStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRegularShapeStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleModule, declarations: [RegularShapeStyleComponent], imports: [CommonModule], exports: [RegularShapeStyleComponent] });\nRegularShapeStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: RegularShapeStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        RegularShapeStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        RegularShapeStyleComponent\n                    ]\n                }]\n        }] });\n\nclass CircleStyleComponent extends RegularShapeStyleComponent {\n    constructor(ngZone, host) {\n        super(ngZone, host);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new CircleStyle(this);\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { radius } = changes, others = __rest(changes, [\"radius\"]);\n        if (this.instance && radius) {\n            this.instance.setRadius(radius.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nCircleStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent }], target: i0.ɵɵFactoryTarget.Component });\nCircleStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: CircleStyleComponent, selector: \"ol-circle-style\", inputs: { radius: [\"olRadius\", \"radius\"] }, providers: [{\n            provide: RegularShapeStyleComponent,\n            useExisting: forwardRef(() => CircleStyleComponent),\n            multi: false\n        }], exportAs: [\"olCircleStyle\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-circle-style',\n                    exportAs: 'olCircleStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: RegularShapeStyleComponent,\n                            useExisting: forwardRef(() => CircleStyleComponent),\n                            multi: false\n                        }]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent }]; }, propDecorators: { radius: [{\n                type: Input,\n                args: ['olRadius']\n            }] } });\n\nclass CircleStyleModule {\n}\nCircleStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCircleStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleModule, declarations: [CircleStyleComponent], imports: [CommonModule], exports: [CircleStyleComponent] });\nCircleStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: CircleStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CircleStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        CircleStyleComponent\n                    ]\n                }]\n        }] });\n\nclass TextStyleComponent {\n    constructor(ngZone, host) {\n        this.ngZone = ngZone;\n        this.host = host;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Text(this);\n            this.host.instance.setText(this.instance);\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'font':\n                        this.instance.setFont(val);\n                        break;\n                    case 'maxAngle':\n                        this.instance.setMaxAngle(val);\n                        break;\n                    case 'offsetX':\n                        this.instance.setOffsetX(val);\n                        break;\n                    case 'offsetY':\n                        this.instance.setOffsetY(val);\n                        break;\n                    case 'overflow':\n                        this.instance.setOverflow(val);\n                        break;\n                    case 'placement':\n                        this.instance.setPlacement(val);\n                        break;\n                    case 'scale':\n                        this.instance.setScale(val);\n                        break;\n                    case 'rotateWithView':\n                        this.instance.setRotateWithView(val);\n                        break;\n                    case 'rotation':\n                        this.instance.setRotation(val);\n                        break;\n                    case 'text':\n                        this.instance.setText(val);\n                        break;\n                    case 'textAlign':\n                        this.instance.setTextAlign(val);\n                        break;\n                    case 'textBaseline':\n                        this.instance.setTextBaseline(val);\n                        break;\n                    case 'fill':\n                        this.instance.setFill(val);\n                        break;\n                    case 'stroke':\n                        this.instance.setStroke(val);\n                        break;\n                    case 'backgroundFill':\n                        this.instance.setBackgroundFill(val);\n                        break;\n                    case 'backgroundStroke':\n                        this.instance.setBackgroundStroke(val);\n                        break;\n                    case 'padding':\n                        this.instance.setPadding(val);\n                        break;\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.host.instance.setText(null);\n    }\n}\nTextStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent }], target: i0.ɵɵFactoryTarget.Component });\nTextStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: TextStyleComponent, selector: \"ol-text-style\", inputs: { font: [\"olFont\", \"font\"], maxAngle: [\"olMaxAngle\", \"maxAngle\"], offsetX: [\"olOffsetX\", \"offsetX\"], offsetY: [\"olOffsetY\", \"offsetY\"], overflow: [\"olOverflow\", \"overflow\"], placement: [\"olPlacement\", \"placement\"], scale: [\"olScale\", \"scale\"], rotateWithView: [\"olRotateWithView\", \"rotateWithView\"], rotation: [\"olRotation\", \"rotation\"], text: [\"olText\", \"text\"], textAlign: [\"olTextAlign\", \"textAlign\"], textBaseline: [\"olTextBaseline\", \"textBaseline\"], fill: [\"olFill\", \"fill\"], stroke: [\"olStroke\", \"stroke\"], backgroundFill: [\"olBackgroundFill\", \"backgroundFill\"], backgroundStroke: [\"olBackgroundStroke\", \"backgroundStroke\"], padding: [\"olPadding\", \"padding\"] }, exportAs: [\"olTextStyle\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-text-style',\n                    exportAs: 'olTextStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent }]; }, propDecorators: { font: [{\n                type: Input,\n                args: ['olFont']\n            }], maxAngle: [{\n                type: Input,\n                args: ['olMaxAngle']\n            }], offsetX: [{\n                type: Input,\n                args: ['olOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['olOffsetY']\n            }], overflow: [{\n                type: Input,\n                args: ['olOverflow']\n            }], placement: [{\n                type: Input,\n                args: ['olPlacement']\n            }], scale: [{\n                type: Input,\n                args: ['olScale']\n            }], rotateWithView: [{\n                type: Input,\n                args: ['olRotateWithView']\n            }], rotation: [{\n                type: Input,\n                args: ['olRotation']\n            }], text: [{\n                type: Input,\n                args: ['olText']\n            }], textAlign: [{\n                type: Input,\n                args: ['olTextAlign']\n            }], textBaseline: [{\n                type: Input,\n                args: ['olTextBaseline']\n            }], fill: [{\n                type: Input,\n                args: ['olFill']\n            }], stroke: [{\n                type: Input,\n                args: ['olStroke']\n            }], backgroundFill: [{\n                type: Input,\n                args: ['olBackgroundFill']\n            }], backgroundStroke: [{\n                type: Input,\n                args: ['olBackgroundStroke']\n            }], padding: [{\n                type: Input,\n                args: ['olPadding']\n            }] } });\n\nclass TextStyleModule {\n}\nTextStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleModule, declarations: [TextStyleComponent], imports: [CommonModule], exports: [TextStyleComponent] });\nTextStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: TextStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        TextStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        TextStyleComponent\n                    ]\n                }]\n        }] });\n\nclass FillStyleComponent {\n    constructor(ngZone, styleHost, textHost, regularShapeHost) {\n        this.ngZone = ngZone;\n        this.type = 'fill';\n        this.host = regularShapeHost || textHost || styleHost;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Fill(this);\n            if (this.type === 'text-background-fill') {\n                this.host.instance.setBackgroundFill(this.instance);\n            }\n            else if (this.type === 'fill') {\n                if (this.host instanceof RegularShapeStyleComponent) {\n                    this.host.setFill(this.instance);\n                }\n                else {\n                    this.host.instance.setFill(this.instance);\n                }\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const { color } = changes;\n        if (color)\n            this.instance.setColor(color.currentValue);\n    }\n    ngOnDestroy() {\n        const nullVal = null;\n        if (this.type === 'text-background-fill') {\n            this.host.instance.setBackgroundFill(nullVal);\n        }\n        else if (this.type === 'fill') {\n            if (this.host instanceof RegularShapeStyleComponent) {\n                this.host.setFill(nullVal);\n            }\n            else {\n                this.host.instance.setFill(nullVal);\n            }\n        }\n    }\n}\nFillStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent, optional: true }, { token: TextStyleComponent, optional: true }, { token: RegularShapeStyleComponent, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nFillStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: FillStyleComponent, selector: \"ol-fill-style\", inputs: { color: [\"olColor\", \"color\"], type: [\"olType\", \"type\"] }, exportAs: [\"olFillStyle\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-fill-style',\n                    exportAs: 'olFillStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: StyleComponent, decorators: [{\n                        type: Optional\n                    }] }, { type: TextStyleComponent, decorators: [{\n                        type: Optional\n                    }] }, { type: RegularShapeStyleComponent, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { color: [{\n                type: Input,\n                args: ['olColor']\n            }], type: [{\n                type: Input,\n                args: ['olType']\n            }] } });\n\nclass FillStyleModule {\n}\nFillStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFillStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleModule, declarations: [FillStyleComponent], imports: [CommonModule], exports: [FillStyleComponent] });\nFillStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: FillStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        FillStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        FillStyleComponent\n                    ]\n                }]\n        }] });\n\nclass IconStyleComponent extends ImageStyleComponent {\n    constructor(ngZone, host) {\n        super(ngZone, host);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Icon(this);\n            super.ngOnInit();\n        });\n    }\n    ngOnChanges(changes) {\n        const { anchor } = changes, others = __rest(changes, [\"anchor\"]);\n        if (this.instance && anchor) {\n            this.instance.setAnchor(anchor.currentValue);\n        }\n        super.ngOnChanges(others);\n    }\n}\nIconStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent }], target: i0.ɵɵFactoryTarget.Component });\nIconStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: IconStyleComponent, selector: \"ol-icon-style\", inputs: { anchor: [\"olAnchor\", \"anchor\"], anchorOrigin: [\"olAnchorOrigin\", \"anchorOrigin\"], anchorXUnits: [\"olAnchorXUnits\", \"anchorXUnits\"], anchorYUnits: [\"olAnchorYUnits\", \"anchorYUnits\"], color: [\"olColor\", \"color\"], crossOrigin: [\"olCrossOrigin\", \"crossOrigin\"], img: [\"olImg\", \"img\"], offset: [\"olOffset\", \"offset\"], offsetOrigin: [\"olOffsetOrigin\", \"offsetOrigin\"], size: [\"olSize\", \"size\"], imgSize: [\"olImgSize\", \"imgSize\"], src: [\"olSrc\", \"src\"] }, exportAs: [\"olIconStyle\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-icon-style',\n                    exportAs: 'olIconStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: StyleComponent }]; }, propDecorators: { anchor: [{\n                type: Input,\n                args: ['olAnchor']\n            }], anchorOrigin: [{\n                type: Input,\n                args: ['olAnchorOrigin']\n            }], anchorXUnits: [{\n                type: Input,\n                args: ['olAnchorXUnits']\n            }], anchorYUnits: [{\n                type: Input,\n                args: ['olAnchorYUnits']\n            }], color: [{\n                type: Input,\n                args: ['olColor']\n            }], crossOrigin: [{\n                type: Input,\n                args: ['olCrossOrigin']\n            }], img: [{\n                type: Input,\n                args: ['olImg']\n            }], offset: [{\n                type: Input,\n                args: ['olOffset']\n            }], offsetOrigin: [{\n                type: Input,\n                args: ['olOffsetOrigin']\n            }], size: [{\n                type: Input,\n                args: ['olSize']\n            }], imgSize: [{\n                type: Input,\n                args: ['olImgSize']\n            }], src: [{\n                type: Input,\n                args: ['olSrc']\n            }] } });\n\nclass IconStyleModule {\n}\nIconStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nIconStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleModule, declarations: [IconStyleComponent], imports: [CommonModule], exports: [IconStyleComponent] });\nIconStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: IconStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        IconStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        IconStyleComponent\n                    ]\n                }]\n        }] });\n\nclass StrokeStyleComponent {\n    constructor(ngZone, styleHost, textHost, regularShapeHost) {\n        this.ngZone = ngZone;\n        this.type = 'stroke';\n        this.host = regularShapeHost || textHost || styleHost;\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.instance = new Stroke(this);\n            if (this.type === 'stroke') {\n                if (this.host instanceof RegularShapeStyleComponent) {\n                    this.host.setStroke(this.instance);\n                }\n                else {\n                    this.host.instance.setStroke(this.instance);\n                }\n            }\n            else if (this.type === 'text-background-stroke') {\n                this.host.instance.setBackgroundStroke(this.instance);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'color':\n                        this.instance.setColor(val);\n                        break;\n                    case 'lineCap':\n                        this.instance.setLineCap(val);\n                        break;\n                    case 'lineJoin':\n                        this.instance.setLineJoin(val);\n                        break;\n                    case 'lineDash':\n                        this.instance.setLineDash(val);\n                        break;\n                    case 'lineDashOffset':\n                        this.instance.setLineDashOffset(val);\n                        break;\n                    case 'miterLimit':\n                        this.instance.setMiterLimit(val);\n                        break;\n                    case 'width':\n                        this.instance.setWidth(val);\n                        break;\n                }\n            }\n        }\n    }\n    ngOnDestroy() {\n        const nullVal = null;\n        if (this.type === 'stroke') {\n            if (this.host instanceof RegularShapeStyleComponent) {\n                this.host.setStroke(nullVal);\n            }\n            else {\n                this.host.instance.setStroke(nullVal);\n            }\n        }\n        else if (this.type === 'text-background-stroke') {\n            this.host.instance.setBackgroundStroke(nullVal);\n        }\n    }\n}\nStrokeStyleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleComponent, deps: [{ token: i0.NgZone }, { token: StyleComponent, optional: true }, { token: TextStyleComponent, optional: true }, { token: RegularShapeStyleComponent, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nStrokeStyleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: StrokeStyleComponent, selector: \"ol-stroke-style\", inputs: { color: [\"olColor\", \"color\"], lineCap: [\"olLineCap\", \"lineCap\"], lineJoin: [\"olLineJoin\", \"lineJoin\"], lineDash: [\"olLineDash\", \"lineDash\"], lineDashOffset: [\"olLineDashOffset\", \"lineDashOffset\"], miterLimit: [\"olMiterLimit\", \"miterLimit\"], width: [\"olWidth\", \"width\"], type: [\"olType\", \"type\"] }, exportAs: [\"olStrokeStyle\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-stroke-style',\n                    exportAs: 'olStrokeStyle',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: StyleComponent, decorators: [{\n                        type: Optional\n                    }] }, { type: TextStyleComponent, decorators: [{\n                        type: Optional\n                    }] }, { type: RegularShapeStyleComponent, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { color: [{\n                type: Input,\n                args: ['olColor']\n            }], lineCap: [{\n                type: Input,\n                args: ['olLineCap']\n            }], lineJoin: [{\n                type: Input,\n                args: ['olLineJoin']\n            }], lineDash: [{\n                type: Input,\n                args: ['olLineDash']\n            }], lineDashOffset: [{\n                type: Input,\n                args: ['olLineDashOffset']\n            }], miterLimit: [{\n                type: Input,\n                args: ['olMiterLimit']\n            }], width: [{\n                type: Input,\n                args: ['olWidth']\n            }], type: [{\n                type: Input,\n                args: ['olType']\n            }] } });\n\nclass StrokeStyleModule {\n}\nStrokeStyleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nStrokeStyleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleModule, declarations: [StrokeStyleComponent], imports: [CommonModule], exports: [StrokeStyleComponent] });\nStrokeStyleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: StrokeStyleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        StrokeStyleComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ],\n                    exports: [\n                        StrokeStyleComponent\n                    ]\n                }]\n        }] });\n\nclass ViewComponent {\n    constructor(ngZone, host) {\n        this.ngZone = ngZone;\n        this.host = host;\n        this.change$ = new EventEmitter();\n        this.changeCenter$ = new EventEmitter();\n        this.changeResolution$ = new EventEmitter();\n        this.changeRotation$ = new EventEmitter();\n        this.error$ = new EventEmitter();\n        this.propertychange$ = new EventEmitter();\n        if (!this.host) {\n            throw new Error(\"The view component needs to be nested in the map component.\");\n        }\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.createInstance();\n        });\n    }\n    ngOnChanges(changes) {\n        if (!this.instance)\n            return;\n        const properties = {};\n        for (const key in changes) {\n            if (Object.prototype.hasOwnProperty.call(changes, key)) {\n                const val = changes[key].currentValue;\n                switch (key) {\n                    case 'center':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setCenter(val);\n                        });\n                        break;\n                    case 'constrainResolution':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setConstrainResolution(val);\n                        });\n                        break;\n                    case 'maxZoom':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setMaxZoom(val);\n                        });\n                        break;\n                    case 'minZoom':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setMinZoom(val);\n                        });\n                        break;\n                    case 'resolution':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setResolution(val);\n                        });\n                        break;\n                    case 'rotation':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setRotation(val);\n                        });\n                        break;\n                    case 'zoom':\n                        this.ngZone.runOutsideAngular(() => {\n                            this.instance.setZoom(val);\n                        });\n                        break;\n                    default:\n                        properties[key] = val;\n                        break;\n                }\n            }\n        }\n        if (Object.keys(properties).length > 0) {\n            this.ngZone.runOutsideAngular(() => {\n                this.instance.setProperties(properties);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.host.instance.setView(null);\n    }\n    createInstance() {\n        this.instance = new View(this);\n        this.instance.on('change', (event) => this.change$.emit(event));\n        this.instance.on('change:center', (event) => this.changeCenter$.emit(event));\n        this.instance.on('change:resolution', (event) => this.changeResolution$.emit(event));\n        this.instance.on('change:rotation', (event) => this.changeRotation$.emit(event));\n        this.instance.on('error', (event) => this.error$.emit(event));\n        this.instance.on('propertychange', (event) => this.propertychange$.emit(event));\n        this.host.instance.setView(this.instance);\n    }\n}\nViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewComponent, deps: [{ token: i0.NgZone }, { token: MapComponent }], target: i0.ɵɵFactoryTarget.Component });\nViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: ViewComponent, selector: \"ol-view\", inputs: { center: [\"olCenter\", \"center\"], constrainRotation: [\"olConstrainRotation\", \"constrainRotation\"], enableRotation: [\"olEnableRotation\", \"enableRotation\"], extent: [\"olExtent\", \"extent\"], constrainOnlyCenter: [\"olConstrainOnlyCenter\", \"constrainOnlyCenter\"], smoothExtentConstraint: [\"olSmoothExtentConstraint\", \"smoothExtentConstraint\"], maxResolution: [\"olMaxResolution\", \"maxResolution\"], minResolution: [\"olMinResolution\", \"minResolution\"], maxZoom: [\"olMaxZoom\", \"maxZoom\"], minZoom: [\"olMinZoom\", \"minZoom\"], multiWorld: [\"olMultiWorld\", \"multiWorld\"], constrainResolution: [\"olConstrainResolution\", \"constrainResolution\"], smoothResolutionConstraint: [\"olSmoothResolutionConstraint\", \"smoothResolutionConstraint\"], showFullExtent: [\"olShowFullExtent\", \"showFullExtent\"], projection: [\"olProjection\", \"projection\"], resolution: [\"olResolution\", \"resolution\"], resolutions: [\"olResolutions\", \"resolutions\"], rotation: [\"olRotation\", \"rotation\"], zoom: [\"olZoom\", \"zoom\"], zoomFactor: [\"olZoomFactor\", \"zoomFactor\"], padding: [\"olPadding\", \"padding\"] }, outputs: { change$: \"olOnChange\", changeCenter$: \"olOnChangeCenter\", changeResolution$: \"olOnChangeResolution\", changeRotation$: \"olOnChangeRotation\", error$: \"olOnError\", propertychange$: \"olOnPropertychange\" }, exportAs: [\"olView\"], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ol-view',\n                    exportAs: 'olView',\n                    template: `<ng-content></ng-content>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: MapComponent }]; }, propDecorators: { center: [{\n                type: Input,\n                args: ['olCenter']\n            }], constrainRotation: [{\n                type: Input,\n                args: ['olConstrainRotation']\n            }], enableRotation: [{\n                type: Input,\n                args: ['olEnableRotation']\n            }], extent: [{\n                type: Input,\n                args: ['olExtent']\n            }], constrainOnlyCenter: [{\n                type: Input,\n                args: ['olConstrainOnlyCenter']\n            }], smoothExtentConstraint: [{\n                type: Input,\n                args: ['olSmoothExtentConstraint']\n            }], maxResolution: [{\n                type: Input,\n                args: ['olMaxResolution']\n            }], minResolution: [{\n                type: Input,\n                args: ['olMinResolution']\n            }], maxZoom: [{\n                type: Input,\n                args: ['olMaxZoom']\n            }], minZoom: [{\n                type: Input,\n                args: ['olMinZoom']\n            }], multiWorld: [{\n                type: Input,\n                args: ['olMultiWorld']\n            }], constrainResolution: [{\n                type: Input,\n                args: ['olConstrainResolution']\n            }], smoothResolutionConstraint: [{\n                type: Input,\n                args: ['olSmoothResolutionConstraint']\n            }], showFullExtent: [{\n                type: Input,\n                args: ['olShowFullExtent']\n            }], projection: [{\n                type: Input,\n                args: ['olProjection']\n            }], resolution: [{\n                type: Input,\n                args: ['olResolution']\n            }], resolutions: [{\n                type: Input,\n                args: ['olResolutions']\n            }], rotation: [{\n                type: Input,\n                args: ['olRotation']\n            }], zoom: [{\n                type: Input,\n                args: ['olZoom']\n            }], zoomFactor: [{\n                type: Input,\n                args: ['olZoomFactor']\n            }], padding: [{\n                type: Input,\n                args: ['olPadding']\n            }], change$: [{\n                type: Output,\n                args: ['olOnChange']\n            }], changeCenter$: [{\n                type: Output,\n                args: ['olOnChangeCenter']\n            }], changeResolution$: [{\n                type: Output,\n                args: ['olOnChangeResolution']\n            }], changeRotation$: [{\n                type: Output,\n                args: ['olOnChangeRotation']\n            }], error$: [{\n                type: Output,\n                args: ['olOnError']\n            }], propertychange$: [{\n                type: Output,\n                args: ['olOnPropertychange']\n            }] } });\n\nclass ViewModule {\n}\nViewModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nViewModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewModule, declarations: [ViewComponent], imports: [CommonModule], exports: [ViewComponent] });\nViewModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: ViewModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        ViewComponent\n                    ],\n                    exports: [\n                        ViewComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                }]\n        }] });\n\nclass NgOpenlayersModule {\n}\nNgOpenlayersModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NgOpenlayersModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgOpenlayersModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NgOpenlayersModule });\nNgOpenlayersModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NgOpenlayersModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NgOpenlayersModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [],\n                    imports: [],\n                    exports: []\n                }]\n        }] });\n\n/*\n * Public API Surface of ng-openlayers\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseImageLayerComponent, BaseImageLayerModule, BaseLayerComponent, BaseLayerModule, BaseLayerRef, BaseTileLayerComponent, BaseTileLayerModule, BaseVectorLayerComponent, BaseVectorLayerModule, CircleStyleComponent, CircleStyleModule, ClusterSourceComponent, ClusterSourceModule, ControlComponent, ControlModule, CoordinateToStringHdmsModule, CoordinateToStringHdmsPipe, CoordinateToStringXYModule, CoordinateToStringXYPipe, DataTileSourceComponent, DataTileSourceModule, DrawInteractionComponent, DrawInteractionModule, FillStyleComponent, FillStyleModule, FromLonLatModule, FromLonLatPipe, GeoTIFFSourceComponent, GeoTIFFSourceModule, GroupLayerComponent, GroupLayerModule, IconStyleComponent, IconStyleModule, ImageLayerComponent, ImageLayerModule, ImageSourceComponent, ImageSourceModule, ImageStyleComponent, ImageStyleModule, ImageWMSSourceComponent, ImageWMSSourceModule, InheritExtentModule, InheritExtentPipe, InteractionComponent, InteractionModule, LAYER_PROVIDER, LayerComponent, LayerModule, MapComponent, MapModule, ModifyInteractionComponent, ModifyInteractionModule, MousePositionComponent, MousePositionModule, NgOpenlayersModule, OSMSourceComponent, OSMSourceModule, OverlayComponent, OverlayContentDirective, OverlayModule, PinchZoomInteractionComponent, PinchZoomInteractionModule, PointerInteractionComponent, PointerInteractionModule, RegularShapeStyleComponent, RegularShapeStyleModule, ScaleLineComponent, ScaleLineModule, SelectInteractionComponent, SelectInteractionModule, SnapInteractionComponent, SnapInteractionModule, SourceComponent, SourceModule, StrokeStyleComponent, StrokeStyleModule, StyleComponent, StyleModule, TextStyleComponent, TextStyleModule, TileImageSourceComponent, TileImageSourceModule, TileLayerComponent, TileLayerModule, TileSourceComponent, TileSourceModule, ToLonLatModule, ToLonLatPipe, TransformExtentModule, TransformExtentPipe, UrlTileSourceComponent, UrlTileSourceModule, VectorLayerComponent, VectorLayerModule, VectorSourceComponent, VectorSourceModule, VectorTileLayerComponent, VectorTileLayerModule, VectorTileSourceComponent, VectorTileSourceModule, ViewComponent, ViewModule, WebGLTileLayerComponent, WebGLTileLayerModule, XYZSourceComponent, XYZSourceModule, ZoomComponent, ZoomModule, degreesToStringHDMS };\n//# sourceMappingURL=sspingme-ng-openlayers.mjs.map\n","map":{"version":3,"file":"sspingme-ng-openlayers.mjs","sources":["../../../projects/ng-openlayers/src/control/control/control.component.ts","../../../projects/ng-openlayers/src/control/control/control.module.ts","../../../projects/ng-openlayers/src/control/mouse-position/mouse-position.component.ts","../../../projects/ng-openlayers/src/control/mouse-position/mouse-position.module.ts","../../../projects/ng-openlayers/src/control/scale-line/scale-line.component.ts","../../../projects/ng-openlayers/src/control/scale-line/scale-line.module.ts","../../../projects/ng-openlayers/src/control/zoom/zoom.component.ts","../../../projects/ng-openlayers/src/control/zoom/zoom.module.ts","../../../projects/ng-openlayers/src/core/layer/layer.abstract.ts","../../../projects/ng-openlayers/src/core/layer/layer.provider.ts","../../../projects/ng-openlayers/src/core/pipes/coordinate-to-string-hdms/coordinate-to-string-hdms.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/coordinate-to-string-hdms/coordinate-to-string-hdms.module.ts","../../../projects/ng-openlayers/src/core/pipes/coordinate-to-string-xy/coordinate-to-string-xy.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/coordinate-to-string-xy/coordinate-to-string-xy.module.ts","../../../projects/ng-openlayers/src/core/pipes/from-lon-lat/from-lon-lat.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/from-lon-lat/from-lon-lat.module.ts","../../../projects/ng-openlayers/src/core/pipes/inherit-extent/inherit-extent.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/inherit-extent/inherit-extent.module.ts","../../../projects/ng-openlayers/src/core/pipes/to-lon-lat/to-lon-lat.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/to-lon-lat/to-lon-lat.module.ts","../../../projects/ng-openlayers/src/core/pipes/transform-extent/transform-extent.pipe.ts","../../../projects/ng-openlayers/src/core/pipes/transform-extent/transform-extent.module.ts","../../../projects/ng-openlayers/src/interaction/interaction/interaction.component.ts","../../../projects/ng-openlayers/src/interaction/interaction/interaction.module.ts","../../../projects/ng-openlayers/src/interaction/pointer-interaction/pointer-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/pointer-interaction/pointer-interaction.module.ts","../../../projects/ng-openlayers/src/interaction/draw-interaction/draw-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/draw-interaction/draw-interaction.module.ts","../../../projects/ng-openlayers/src/interaction/modify-interaction/modify-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/modify-interaction/modify-interaction.module.ts","../../../projects/ng-openlayers/src/interaction/pinch-zoom-interaction/pinch-zoom-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/pinch-zoom-interaction/pinch-zoom-interaction.module.ts","../../../projects/ng-openlayers/src/interaction/select-interaction/select-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/select-interaction/select-interaction.module.ts","../../../projects/ng-openlayers/src/interaction/snap-interaction/snap-interaction.component.ts","../../../projects/ng-openlayers/src/interaction/snap-interaction/snap-interaction.module.ts","../../../projects/ng-openlayers/src/source/source/source.component.ts","../../../projects/ng-openlayers/src/source/source/source.module.ts","../../../projects/ng-openlayers/src/source/image-source/image-source.component.ts","../../../projects/ng-openlayers/src/source/image-source/image-source.module.ts","../../../projects/ng-openlayers/src/layer/base-layer/base-layer.component.ts","../../../projects/ng-openlayers/src/layer/base-layer/base-layer.module.ts","../../../projects/ng-openlayers/src/layer/layer/layer.component.ts","../../../projects/ng-openlayers/src/layer/layer/layer.module.ts","../../../projects/ng-openlayers/src/layer/base-image-layer/base-image-layer.component.ts","../../../projects/ng-openlayers/src/layer/base-image-layer/base-image-layer.module.ts","../../../projects/ng-openlayers/src/source/tile-source/tile-source.component.ts","../../../projects/ng-openlayers/src/source/tile-source/tile-source.module.ts","../../../projects/ng-openlayers/src/layer/base-tile-layer/base-tile-layer.component.ts","../../../projects/ng-openlayers/src/layer/base-tile-layer/base-tile-layer.module.ts","../../../projects/ng-openlayers/src/source/vector-source/vector-source.component.ts","../../../projects/ng-openlayers/src/source/vector-source/vector-source.module.ts","../../../projects/ng-openlayers/src/style/style/style.component.ts","../../../projects/ng-openlayers/src/style/style/style.module.ts","../../../projects/ng-openlayers/src/layer/base-vector-layer/base-vector-layer.component.ts","../../../projects/ng-openlayers/src/layer/base-vector-layer/base-vector-layer.module.ts","../../../projects/ng-openlayers/src/layer/group-layer/group-layer.component.ts","../../../projects/ng-openlayers/src/layer/group-layer/group-layer.module.ts","../../../projects/ng-openlayers/src/layer/image-layer/image-layer.component.ts","../../../projects/ng-openlayers/src/layer/image-layer/image-layer.module.ts","../../../projects/ng-openlayers/src/layer/tile-layer/tile-layer.component.ts","../../../projects/ng-openlayers/src/layer/tile-layer/tile-layer.module.ts","../../../projects/ng-openlayers/src/layer/vector-layer/vector-layer.component.ts","../../../projects/ng-openlayers/src/layer/vector-layer/vector-layer.module.ts","../../../projects/ng-openlayers/src/source/url-tile-source/url-tile-source.component.ts","../../../projects/ng-openlayers/src/source/url-tile-source/url-tile-source.module.ts","../../../projects/ng-openlayers/src/source/vector-tile-source/vector-tile-source.component.ts","../../../projects/ng-openlayers/src/source/vector-tile-source/vector-tile-source.module.ts","../../../projects/ng-openlayers/src/layer/vector-tile-layer/vector-tile-layer.component.ts","../../../projects/ng-openlayers/src/layer/vector-tile-layer/vector-tile-layer.module.ts","../../../projects/ng-openlayers/src/source/data-tile-source/data-tile-source.component.ts","../../../projects/ng-openlayers/src/source/data-tile-source/data-tile-source.module.ts","../../../projects/ng-openlayers/src/source/geo-tiff-source/geo-tiff-source.component.ts","../../../projects/ng-openlayers/src/source/geo-tiff-source/geo-tiff-source.module.ts","../../../projects/ng-openlayers/src/layer/webgl-tile-layer/webgl-tile-layer.component.ts","../../../projects/ng-openlayers/src/layer/webgl-tile-layer/webgl-tile-layer.module.ts","../../../projects/ng-openlayers/src/overlay/overlay-content.directive.ts","../../../projects/ng-openlayers/src/overlay/overlay.component.ts","../../../projects/ng-openlayers/src/overlay/overlay.module.ts","../../../projects/ng-openlayers/src/map/map.component.ts","../../../projects/ng-openlayers/src/map/map.module.ts","../../../projects/ng-openlayers/src/source/cluster-source/cluster-source.component.ts","../../../projects/ng-openlayers/src/source/cluster-source/cluster-source.module.ts","../../../projects/ng-openlayers/src/source/image-wms-source/image-wms-source.component.ts","../../../projects/ng-openlayers/src/source/image-wms-source/image-wms-source.module.ts","../../../projects/ng-openlayers/src/source/tile-image-source/tile-image-source.component.ts","../../../projects/ng-openlayers/src/source/tile-image-source/tile-image-source.module.ts","../../../projects/ng-openlayers/src/source/xyz-source/xyz-source.component.ts","../../../projects/ng-openlayers/src/source/xyz-source/xyz-source.module.ts","../../../projects/ng-openlayers/src/source/osm-source/osm-source.component.ts","../../../projects/ng-openlayers/src/source/osm-source/osm-source.module.ts","../../../projects/ng-openlayers/src/style/image-style/image-style.component.ts","../../../projects/ng-openlayers/src/style/image-style/image-style.module.ts","../../../projects/ng-openlayers/src/style/regular-shape-style/regular-shape-style.component.ts","../../../projects/ng-openlayers/src/style/regular-shape-style/regular-shape-style.module.ts","../../../projects/ng-openlayers/src/style/circle-style/circle-style.component.ts","../../../projects/ng-openlayers/src/style/circle-style/circle-style.module.ts","../../../projects/ng-openlayers/src/style/text-style/text-style.component.ts","../../../projects/ng-openlayers/src/style/text-style/text-style.module.ts","../../../projects/ng-openlayers/src/style/fill-style/fill-style.component.ts","../../../projects/ng-openlayers/src/style/fill-style/fill-style.module.ts","../../../projects/ng-openlayers/src/style/icon-style/icon-style.component.ts","../../../projects/ng-openlayers/src/style/icon-style/icon-style.module.ts","../../../projects/ng-openlayers/src/style/stroke-style/stroke-style.component.ts","../../../projects/ng-openlayers/src/style/stroke-style/stroke-style.module.ts","../../../projects/ng-openlayers/src/view/view.component.ts","../../../projects/ng-openlayers/src/view/view.module.ts","../../../projects/ng-openlayers/src/ng-openlayers.module.ts","../../../projects/ng-openlayers/src/public-api.ts","../../../projects/ng-openlayers/src/sspingme-ng-openlayers.ts"],"sourcesContent":["import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { MapEvent } from 'ol';\nimport Control, { Options } from 'ol/control/Control';\nimport BaseEvent from 'ol/events/Event';\nimport { ObjectEvent } from 'ol/Object';\n\n@Component({\n  selector: 'ol-control',\n  exportAs: 'olControl',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ControlComponent implements OnInit, OnChanges, Options {\n\n  @Input('olElement') element?: HTMLElement;\n  @Input('olRender') render?: (p0: MapEvent) => void;\n  @Input('olTarget') target?: HTMLElement | string;\n\n  @Output('olChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n\n  instance!: Control;\n\n  constructor(\n    public elementRef: ElementRef<HTMLDivElement>,\n    public ngZone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.target) this.target = this.elementRef.nativeElement;\n\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new Control(this);\n      }\n      this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n      this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n      this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    const properties: { [key:string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const value = changes[key].currentValue;\n        switch (key) {\n          case 'target':\n            this.instance.setTarget(value);\n            break;\n          default:\n            properties[key] = value;\n            break;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length) {\n      this.instance.setProperties(properties);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlComponent } from './control.component';\n\n\n\n@NgModule({\n  declarations: [\n    ControlComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ControlComponent\n  ]\n})\nexport class ControlModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, Input, Output, EventEmitter, ElementRef, NgZone, OnChanges, SimpleChanges } from '@angular/core';\nimport MousePosition, { Options } from 'ol/control/MousePosition';\nimport { CoordinateFormat } from 'ol/coordinate';\nimport { ObjectEvent } from 'ol/Object';\nimport { ProjectionLike } from 'ol/proj';\nimport { ControlComponent } from '../control';\n\n@Component({\n  selector: 'ol-mouse-position',\n  exportAs: 'olMousePosition',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./mouse-position.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ControlComponent,\n      useExisting: forwardRef(() => MousePositionComponent),\n      multi: true\n    }\n  ]\n})\nexport class MousePositionComponent extends ControlComponent implements OnInit, OnChanges, Options {\n\n  @Input('olClassName') className?: string;\n  @Input('olCoordinateFormat') coordinateFormat?: CoordinateFormat;\n  @Input('olProjection') projection?: ProjectionLike;\n  @Input('olUndefinedHTML') undefinedHTML?: string;\n\n  @Output('olChangeCoordinateFormat') changeCoordinateFormat$ = new EventEmitter<ObjectEvent>();\n  @Output('olChangeProjection') changeProjection$ = new EventEmitter<ObjectEvent>();\n\n  instance!: MousePosition;\n\n  constructor(elementRef: ElementRef<HTMLDivElement>, ngZone: NgZone) {\n    super(elementRef, ngZone);\n    this.elementRef.nativeElement.classList.add('ol-mouse-position');\n  }\n\n  ngOnInit(): void {\n    if (!this.target) this.target = this.elementRef.nativeElement;\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new MousePosition(this);\n      this.instance.on('change:coordinateFormat', (event: ObjectEvent) => this.changeCoordinateFormat$.emit(event));\n      this.instance.on('change:projection', (event: ObjectEvent) => this.changeProjection$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { coordinateFormat, projection, ...others } = changes;\n    if (this.instance && coordinateFormat) this.instance.setCoordinateFormat(coordinateFormat.currentValue);\n    if (this.instance && projection) this.instance.setProjection(projection.currentValue);\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MousePositionComponent } from './mouse-position.component';\n\n\n\n@NgModule({\n  declarations: [\n    MousePositionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    MousePositionComponent\n  ]\n})\nexport class MousePositionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, Input, Output, EventEmitter, ElementRef, NgZone, OnChanges, SimpleChanges } from '@angular/core';\nimport ScaleLine, { Options, Units } from 'ol/control/ScaleLine';\nimport { ObjectEvent } from 'ol/Object';\nimport { ControlComponent } from '../control';\n\n@Component({\n  selector: 'ol-scale-line',\n  exportAs: 'olScaleLine',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./scale-line.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ControlComponent,\n      useExisting: forwardRef(() => ScaleLineComponent),\n      multi: true\n    }\n  ]\n})\nexport class ScaleLineComponent extends ControlComponent implements OnInit, OnChanges, Options {\n\n  @Input('olClassName') className?: string;\n  @Input('olMinWidth') minWidth?: number;\n  @Input('olUnits') units?: Units | string;\n  @Input('olBar') bar?: boolean;\n  @Input('olSteps') steps?: number;\n  @Input('olText') text?: boolean;\n  @Input('olDpi') dpi?: number;\n\n  @Output('olChangeUnits') changeUnits$ = new EventEmitter<ObjectEvent>();\n\n  instance!: ScaleLine\n\n  constructor(elementRef: ElementRef<HTMLDivElement>, ngZone: NgZone) {\n    super(elementRef, ngZone);\n    this.elementRef.nativeElement.classList.add('ol-control-scale-line');\n  }\n\n  ngOnInit(): void {\n    if (!this.target) this.target = this.elementRef.nativeElement;\n\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new ScaleLine(this);\n      this.instance.on('change:units', (event: ObjectEvent) => this.changeUnits$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { dpi, units, ...others } = changes;\n\n    if (this.instance && dpi) this.instance.setDpi(dpi.currentValue);\n    if (this.instance && units) this.instance.setUnits(units.currentValue);\n\n    super.ngOnChanges(changes);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScaleLineComponent } from './scale-line.component';\n\n\n\n@NgModule({\n  declarations: [\n    ScaleLineComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ScaleLineComponent\n  ]\n})\nexport class ScaleLineModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, ElementRef, NgZone, Input } from '@angular/core';\nimport Zoom, { Options } from 'ol/control/Zoom';\nimport { ControlComponent } from '../control';\n\n@Component({\n  selector: 'ol-zoom',\n  exportAs: 'olZoom',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./zoom.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ControlComponent,\n      useExisting: forwardRef(() => ZoomComponent),\n      multi: true\n    }\n  ]\n})\nexport class ZoomComponent extends ControlComponent implements OnInit, Options {\n\n  @Input('olDuration') duration?: number;\n  @Input('olClassName') className?: string;\n  @Input('olZoomInClassName') zoomInClassName?: string;\n  @Input('olZoomOutClassName') zoomOutClassName?: string;\n  @Input('olZoomInLabel') zoomInLabel?: string | HTMLElement;\n  @Input('olZoomOutLabel') zoomOutLabel?: string | HTMLElement;\n  @Input('olZoomInTipLabel') zoomInTipLabel?: string;\n  @Input('olZoomOutTipLabel') zoomOutTipLabel?: string;\n  @Input('olDelta') delta?: number;\n\n  instance!: Zoom;\n\n  constructor(elementRef: ElementRef<HTMLDivElement>, ngZone: NgZone) {\n    super(elementRef, ngZone);\n    this.elementRef.nativeElement.classList.add('ol-control-zoom');\n  }\n\n  ngOnInit(): void {\n    if (!this.target) this.target = this.elementRef.nativeElement;\n\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Zoom(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ZoomComponent } from './zoom.component';\n\n\n\n@NgModule({\n  declarations: [\n    ZoomComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ZoomComponent\n  ]\n})\nexport class ZoomModule { }\n","import BaseLayer from \"ol/layer/Base\";\n\nexport abstract class BaseLayerRef {\n  abstract instance: BaseLayer;\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { BaseLayerRef } from \"./layer.abstract\";\n\nexport const LAYER_PROVIDER = new InjectionToken<BaseLayerRef>('Layer Provider');\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Coordinate } from 'ol/coordinate';\nimport { modulo } from 'ol/math';\nimport { padNumber } from 'ol/string';\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} string.\n */\n export function degreesToStringHDMS(\n   hemispheres: 'NS'|'EW',\n   degrees: number,\n   options?: {\n     template?: string,\n     fractionDigits?: number\n   }): string {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const template: string = options && typeof options.template === 'string'\n    ? options.template\n    : '{H} {D}\\u00b0{M}\\u2032{S}\\u2033';\n  const dflPrecision = options && typeof options.fractionDigits === 'number' ? options.fractionDigits : 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return template\n    .replace('{H}', normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n    .replace('{D}', `${deg}`)\n    .replace('{M}', padNumber(min, 2))\n    .replace('{S}', padNumber(sec, 2, dflPrecision));\n}\n\n@Pipe({\n  name: 'coordinateToStringHdms'\n})\nexport class CoordinateToStringHdmsPipe implements PipeTransform {\n\n  transform(value: Coordinate, opt_fractionDigits?: number): string {\n    return [\n      degreesToStringHDMS('EW', value[0], { fractionDigits: opt_fractionDigits }),\n      degreesToStringHDMS('NS', value[1], { fractionDigits: opt_fractionDigits })\n    ]\n    .join(', ');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoordinateToStringHdmsPipe } from './coordinate-to-string-hdms.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    CoordinateToStringHdmsPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CoordinateToStringHdmsPipe\n  ]\n})\nexport class CoordinateToStringHdmsModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Coordinate, format } from 'ol/coordinate';\n\n@Pipe({\n  name: 'coordinateToStringXY',\n  pure: true\n})\nexport class CoordinateToStringXYPipe implements PipeTransform {\n\n  transform(value: Coordinate, opt_fractionDigits?: number): string {\n    return format(value, `{x}º, {y}º`, opt_fractionDigits);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoordinateToStringXYPipe } from './coordinate-to-string-xy.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    CoordinateToStringXYPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CoordinateToStringXYPipe\n  ]\n})\nexport class CoordinateToStringXYModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Coordinate } from 'ol/coordinate';\nimport { fromLonLat, ProjectionLike } from 'ol/proj';\n\n@Pipe({\n  name: 'fromLonLat',\n  pure: true\n})\nexport class FromLonLatPipe implements PipeTransform {\n\n  transform(coordinate: Coordinate, opt_projection?: ProjectionLike): Coordinate {\n    return fromLonLat(coordinate, opt_projection);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FromLonLatPipe } from './from-lon-lat.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    FromLonLatPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    FromLonLatPipe\n  ]\n})\nexport class FromLonLatModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Extent } from 'ol/extent';\n\n@Pipe({\n  name: 'inheritExtent'\n})\nexport class InheritExtentPipe implements PipeTransform {\n\n  transform(value: Extent|'inherit'|undefined, inheritExtent: Extent): Extent {\n    return value === 'inherit' ? inheritExtent : value as Extent;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InheritExtentPipe } from './inherit-extent.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    InheritExtentPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    InheritExtentPipe\n  ]\n})\nexport class InheritExtentModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Coordinate } from 'ol/coordinate';\nimport { ProjectionLike, toLonLat } from 'ol/proj';\n\n@Pipe({\n  name: 'toLonLat'\n})\nexport class ToLonLatPipe implements PipeTransform {\n\n  transform(value: Coordinate, opt_projection?: ProjectionLike): Coordinate {\n    return toLonLat(value, opt_projection);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToLonLatPipe } from './to-lon-lat.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    ToLonLatPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ToLonLatPipe\n  ]\n})\nexport class ToLonLatModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Extent } from 'ol/extent';\nimport { ProjectionLike, transformExtent } from 'ol/proj';\n\n@Pipe({\n  name: 'transformExtent',\n  pure: true\n})\nexport class TransformExtentPipe implements PipeTransform {\n\n  transform(extent: Extent, ...args: unknown[]): Extent {\n    const source: ProjectionLike = args[0] !== undefined ? args[0] as ProjectionLike : 'EPSG:4326';\n    const destination: ProjectionLike = args[1] !== undefined ? args[1] as ProjectionLike : 'EPSG:3857';\n    const stops: number = args[2] as number;\n    return transformExtent(extent, source, destination, stops);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TransformExtentPipe } from './transform-extent.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    TransformExtentPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TransformExtentPipe\n  ]\n})\nexport class TransformExtentModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, NgZone, Output, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { MapBrowserEvent } from 'ol';\nimport BaseEvent from 'ol/events/Event';\nimport Interaction, { InteractionOptions } from 'ol/interaction/Interaction';\nimport { ObjectEvent } from 'ol/Object';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'ol-interaction',\n  exportAs: 'olInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InteractionComponent implements OnInit, OnChanges, OnDestroy, InteractionOptions {\n\n  @Input('olHandleEvent') handleEvent!: (p0: MapBrowserEvent<UIEvent>) => boolean;\n  @Input('olActive') active: boolean = true;\n\n  @Output('olChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olChangeActive') changeActive$ = new EventEmitter<ObjectEvent>();\n  @Output('olError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n\n  instance!: Interaction;\n  public readonly destroy$ = new Subject<void>();\n\n  constructor(public ngZone: NgZone) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new Interaction(this);\n      }\n      this.instance.setActive(this.active);\n      this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n      this.instance.on('change:active', (event: ObjectEvent) => this.changeActive$.emit(event));\n      this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n      this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    const properties: { [key:string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const value = changes[key].currentValue;\n        if (key === 'active') {\n          this.instance.setActive(value);\n        } else {\n          properties[key] = value;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length) {\n      this.instance.setProperties(properties);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InteractionComponent } from './interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    InteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    InteractionComponent\n  ]\n})\nexport class InteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, NgZone, Input, forwardRef } from '@angular/core';\nimport { MapBrowserEvent } from 'ol';\nimport PointerInteraction, { Options } from 'ol/interaction/Pointer';\nimport { InteractionComponent } from '../interaction';\n\n@Component({\n  selector: 'ol-pointer-interaction',\n  exportAs: 'olPointerInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: InteractionComponent,\n    useExisting: forwardRef(() => PointerInteractionComponent),\n    multi: true\n  }]\n})\nexport class PointerInteractionComponent extends InteractionComponent implements OnInit, Options {\n\n  @Input('olHandleDownEvent') handleDownEvent?: (p0: MapBrowserEvent<UIEvent>) => boolean;\n  @Input('olHandleDragEvent') handleDragEvent?: (p0: MapBrowserEvent<UIEvent>) => void;\n  @Input('olHandleMoveEvent') handleMoveEvent?: (p0: MapBrowserEvent<UIEvent>) => void;\n  @Input('olHandleUpEvent') handleUpEvent?: (p0: MapBrowserEvent<UIEvent>) => boolean;\n  @Input('olStopDown') stopDown?: (p0: boolean) => boolean;\n\n  instance!: PointerInteraction;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new PointerInteraction(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PointerInteractionComponent } from './pointer-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    PointerInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PointerInteractionComponent\n  ]\n})\nexport class PointerInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, NgZone, forwardRef, Input, Output, EventEmitter } from '@angular/core';\nimport { Collection, Feature } from 'ol';\nimport { Condition } from 'ol/events/condition';\nimport Geometry from 'ol/geom/Geometry';\nimport Draw, { DrawEvent, GeometryFunction } from 'ol/interaction/Draw';\nimport VectorSource from 'ol/source/Vector';\nimport { StyleLike } from 'ol/style/Style';\nimport { GeometryType } from '../../core/models';\nimport { InteractionComponent } from '../interaction';\nimport { PointerInteractionComponent } from '../pointer-interaction';\n\nexport type DrawInteractionType\n  = 'Circle'\n  | 'LineString'\n  | 'Point'\n  | 'Polygon';\n\n@Component({\n  selector: 'ol-draw-interaction',\n  exportAs: 'olDrawInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: InteractionComponent,\n      useExisting: forwardRef(() => DrawInteractionComponent),\n      multi: true\n    },\n    {\n      provide: PointerInteractionComponent,\n      useExisting: forwardRef(() => DrawInteractionComponent),\n      multi: true\n    }\n  ]\n})\nexport class DrawInteractionComponent extends PointerInteractionComponent implements OnInit {\n\n  @Input('olType') type!: DrawInteractionType;\n  @Input('olClickTolerance') clickTolerance?: number;\n  @Input('olFeatures') features?: Collection<Feature<Geometry>>;\n  @Input('olSource') source?: VectorSource<Geometry>;\n  @Input('olDragVertexDelay') dragVertexDelay?: number;\n  @Input('olSnapTolerance') snapTolerance?: number;\n  @Input('olStopClick') stopClick?: boolean;\n  @Input('olMaxPoints') maxPoints?: number;\n  @Input('olMinPoints') minPoints?: number;\n  @Input('olFinishCondition') finishCondition?: Condition;\n  @Input('olStyle') style?: StyleLike;\n  @Input('olGeometryFunction') geometryFunction?: GeometryFunction;\n  @Input('olGeometryName') geometryName?: string;\n  @Input('olCondition') condition?: Condition;\n  @Input('olFreehand') freehand?: boolean;\n  @Input('olFreehandCondition') freehandCondition?: Condition;\n  @Input('olWrapX') wrapX?: boolean;\n\n  @Output('olDrawabort') drawabort$ = new EventEmitter<DrawEvent>();\n  @Output('olDrawend') drawend$ = new EventEmitter<DrawEvent>();\n  @Output('olDrawstart') drawstart$ = new EventEmitter<DrawEvent>();\n\n  instance!: Draw;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      const type = this.type as GeometryType;\n      this.instance = new Draw({ ...this, type });\n      this.instance.on('drawabort', (event: DrawEvent) => this.drawabort$.emit(event));\n      this.instance.on('drawend', (event: DrawEvent) => this.drawend$.emit(event));\n      this.instance.on('drawstart', (event: DrawEvent) => this.drawstart$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DrawInteractionComponent } from './draw-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    DrawInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DrawInteractionComponent\n  ]\n})\nexport class DrawInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone, Input, Output, EventEmitter } from '@angular/core';\nimport { Collection, Feature } from 'ol';\nimport { Condition } from 'ol/events/condition';\nimport Geometry from 'ol/geom/Geometry';\nimport Modify, { ModifyEvent, Options } from 'ol/interaction/Modify';\nimport BaseVectorLayer from 'ol/layer/BaseVector';\nimport CanvasVectorImageLayerRenderer from 'ol/renderer/canvas/VectorImageLayer';\nimport CanvasVectorLayerRenderer from 'ol/renderer/canvas/VectorLayer';\nimport CanvasVectorTileLayerRenderer from 'ol/renderer/canvas/VectorTileLayer';\nimport WebGLPointsLayerRenderer from 'ol/renderer/webgl/PointsLayer';\nimport VectorSource from 'ol/source/Vector';\nimport VectorTile from 'ol/source/VectorTile';\nimport { StyleLike } from 'ol/style/Style';\nimport { InteractionComponent } from '../interaction';\nimport { PointerInteractionComponent } from '../pointer-interaction';\n\n@Component({\n  selector: 'ol-modify-interaction',\n  exportAs: 'olModifyInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: InteractionComponent,\n      useExisting: forwardRef(() => ModifyInteractionComponent),\n      multi: true\n    },\n    {\n      provide: PointerInteractionComponent,\n      useExisting: forwardRef(() => ModifyInteractionComponent),\n      multi: true\n    }\n  ]\n})\nexport class ModifyInteractionComponent extends PointerInteractionComponent implements OnInit, Options {\n\n  @Input('olCondition') condition?: Condition;\n  @Input('olCeleteCondition') deleteCondition?: Condition;\n  @Input('olInsertVertexCondition') insertVertexCondition?: Condition;\n  @Input('olPixelTolerance') pixelTolerance?: number;\n  @Input('olStyle') style?: StyleLike;\n  @Input('olSource') source?: VectorSource<Geometry>;\n  @Input('olHitDetection') hitDetection?: boolean | BaseVectorLayer<VectorSource<Geometry> | VectorTile, CanvasVectorLayerRenderer | CanvasVectorTileLayerRenderer | CanvasVectorImageLayerRenderer | WebGLPointsLayerRenderer>;\n  @Input('olFeatures') features?: Collection<Feature<Geometry>>;\n  @Input('olWrapX') wrapX?: boolean;\n\n  @Output('olModifyend') modifyend$ = new EventEmitter<ModifyEvent>();\n  @Output('olModifystart') modifystart$ = new EventEmitter<ModifyEvent>();\n\n  instance!: Modify;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Modify(this);\n      this.instance.on('modifyend', (event: ModifyEvent) => this.modifyend$.emit(event));\n      this.instance.on('modifystart', (event: ModifyEvent) => this.modifystart$.emit(event));\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModifyInteractionComponent } from './modify-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    ModifyInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ModifyInteractionComponent\n  ]\n})\nexport class ModifyInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, Input, NgZone } from '@angular/core';\nimport PinchZoom, { Options } from 'ol/interaction/PinchZoom';\nimport { InteractionComponent } from '../interaction';\nimport { PointerInteractionComponent } from '../pointer-interaction';\n\n@Component({\n  selector: 'ol-pinch-zoom-interaction',\n  exportAs: 'olPinchZoomInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: InteractionComponent,\n    useExisting: forwardRef(() => PinchZoomInteractionComponent),\n    multi: true\n  }]\n})\nexport class PinchZoomInteractionComponent extends PointerInteractionComponent implements OnInit, Options {\n\n  @Input('olDuration') duration?: number;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new PinchZoom(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PinchZoomInteractionComponent } from './pinch-zoom-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    PinchZoomInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PinchZoomInteractionComponent\n  ]\n})\nexport class PinchZoomInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { Collection, Feature } from 'ol';\nimport { Condition } from 'ol/events/condition';\nimport Geometry from 'ol/geom/Geometry';\nimport Select, { FilterFunction, Options, SelectEvent } from 'ol/interaction/Select';\nimport Layer from 'ol/layer/Layer';\nimport Source from 'ol/source/Source';\nimport { StyleLike } from 'ol/style/Style';\nimport { InteractionComponent } from '../interaction';\n\n@Component({\n  selector: 'ol-select-interaction',\n  exportAs: 'olSelectInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: InteractionComponent,\n    useExisting: forwardRef(() => SelectInteractionComponent),\n    multi: true\n  }]\n})\nexport class SelectInteractionComponent extends InteractionComponent implements OnInit, OnChanges, Options {\n\n  @Input('olAddCondition') addCondition?: Condition;\n  @Input('olCondition') condition?: Condition;\n  @Input('olLayers') layers?: Layer<Source>[] | ((p0: Layer<Source>) => boolean);\n  @Input('olStyle') style?: StyleLike;\n  @Input('olRemoveCondition') removeCondition?: Condition;\n  @Input('olToggleCondition') toggleCondition?: Condition;\n  @Input('olMulti') multi?: boolean;\n  @Input('olFeatures') features?: Collection<Feature<Geometry>>;\n  @Input('olFilter') filter?: FilterFunction;\n  @Input('olHitTolerance') hitTolerance?: number;\n\n  @Output('olSelect') select$ = new EventEmitter<SelectEvent>();\n\n  instance!: Select;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Select(this);\n      this.instance.on('select', (event: SelectEvent) => this.select$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { hitTolerance, ...others } = changes;\n    if (this.instance) {\n      if (hitTolerance) this.instance.setHitTolerance(hitTolerance.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelectInteractionComponent } from './select-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    SelectInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SelectInteractionComponent\n  ]\n})\nexport class SelectInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone, Input } from '@angular/core';\nimport { Collection, Feature } from 'ol';\nimport Geometry from 'ol/geom/Geometry';\nimport Snap, { Options } from 'ol/interaction/Snap';\nimport VectorSource from 'ol/source/Vector';\nimport { InteractionComponent } from '../interaction';\nimport { PointerInteractionComponent } from '../pointer-interaction';\n\n@Component({\n  selector: 'ol-snap-interaction',\n  exportAs: 'olSnapInteraction',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: InteractionComponent,\n      useExisting: forwardRef(() => SnapInteractionComponent),\n      multi: true\n    },\n    {\n      provide: PointerInteractionComponent,\n      useExisting: forwardRef(() => SnapInteractionComponent),\n      multi: true\n    }\n  ]\n})\nexport class SnapInteractionComponent extends PointerInteractionComponent implements OnInit, Options {\n\n  @Input('olFeatures') features?: Collection<Feature<Geometry>>;\n  @Input('olEdge') edge?: boolean;\n  @Input('olVertex') vertex?: boolean;\n  @Input('olPixelTolerance') pixelTolerance?: number;\n  @Input('olSource') source?: VectorSource<Geometry>;\n\n  instance!: Snap;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Snap(this);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SnapInteractionComponent } from './snap-interaction.component';\n\n\n\n@NgModule({\n  declarations: [\n    SnapInteractionComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SnapInteractionComponent\n  ]\n})\nexport class SnapInteractionModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, OnChanges, SimpleChanges, NgZone } from '@angular/core';\nimport BaseEvent from 'ol/events/Event';\nimport { ObjectEvent } from 'ol/Object';\nimport { ProjectionLike } from 'ol/proj';\nimport Source, { AttributionLike, Options } from 'ol/source/Source';\nimport { State } from './source.model';\n\n@Component({\n  selector: 'ol-source',\n  exportAs: 'olSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SourceComponent implements OnInit, OnChanges, Options {\n\n  @Input('olAttributions') attributions?: AttributionLike;\n  @Input('olAttributionsCollapsible') attributionsCollapsible?: boolean;\n  @Input('olProjection') projection?: ProjectionLike;\n  @Input('olState') state?: State;\n  @Input('olWrapX') wrapX?: boolean;\n\n  @Output('olOnChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olOnError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olOnPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n\n  instance!: Source;\n\n  constructor(public ngZone: NgZone) { }\n\n  ngOnInit(): void {\n    this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n    this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n\n    const properties: { [key: string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        if (key === 'attributions') {\n          this.instance.setAttributions(val);\n        } else if (key === 'state') {\n          this.instance.setState(val);\n        } else {\n          properties[key] = val;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length > 0) {\n      this.instance.setProperties(properties);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SourceComponent } from './source.component';\n\n\n\n@NgModule({\n  declarations: [\n    SourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SourceComponent\n  ]\n})\nexport class SourceModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, OnInit, NgZone } from '@angular/core';\nimport ImageSource, { ImageSourceEvent, Options } from 'ol/source/Image';\nimport { SourceComponent } from '../source';\n\n@Component({\n  selector: 'ol-image-source',\n  exportAs: 'olImageSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageSourceComponent extends SourceComponent implements OnInit, Options {\n\n  @Input('olImageSmoothing') imageSmoothing?: boolean;\n  @Input('olResolutions') resolutions?: number[];\n\n  @Output('imageloadend') imageloadend$ = new EventEmitter<ImageSourceEvent>();\n  @Output('imageloaderror') imageloaderror$ = new EventEmitter<ImageSourceEvent>();\n  @Output('imageloadstart') imageloadstart$ = new EventEmitter<ImageSourceEvent>();\n\n  instance!: ImageSource;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    if (this.instance) {\n      this.instance.on('imageloadend', (event: ImageSourceEvent) => this.imageloadend$.emit(event));\n      this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.imageloaderror$.emit(event));\n      this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.imageloadstart$.emit(event));\n    }\n    super.ngOnInit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageSourceComponent } from './image-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    ImageSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ImageSourceComponent\n  ]\n})\nexport class ImageSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, SimpleChanges, Input, Output, EventEmitter, forwardRef, OnDestroy, NgZone } from '@angular/core';\nimport BaseEvent from 'ol/events/Event';\nimport { Extent } from 'ol/extent';\nimport BaseLayer, { Options } from 'ol/layer/Base';\nimport { ObjectEvent } from 'ol/Object';\nimport { Subject } from 'rxjs';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\n\n@Component({\n  selector: 'ol-base-layer',\n  exportAs: 'olBaseLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => BaseLayerComponent),\n    multi: true\n  }]\n})\nexport class BaseLayerComponent implements OnInit, OnChanges, OnDestroy, BaseLayerRef, Options {\n\n  @Input('olClassName') className?: string;\n  @Input('olOpacity') opacity?: number;\n  @Input('olVisible') visible?: boolean;\n  @Input('olExtent') extent?: Extent;\n  @Input('olZIndex') zIndex?: number;\n  @Input('olMinResolution') minResolution?: number;\n  @Input('olMaxResolution') maxResolution?: number;\n  @Input('olMinZoom') minZoom?: number;\n  @Input('olMaxZoom') maxZoom?: number;\n\n  @Output('olOnChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olOnChangeExtent') changeExtent$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeMaxResolution') changeMaxResolution$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeMaxZoom') changeMaxZoom$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeMinResolution') changeMinResolution$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeMinZoom') changeMinZoom$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeOpacity') changeOpacity$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeSource') changeSource$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeVisible') changeVisible$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeZIndex') changeZIndex$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olOnPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n\n  instance!: BaseLayer;\n  destroy$ = new Subject<void>();\n\n  constructor(public ngZone: NgZone) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new BaseLayer(this);\n      }\n      this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n      this.instance.on('change:extent', (event: ObjectEvent) => this.changeExtent$.emit(event));\n      this.instance.on('change:maxResolution', (event: ObjectEvent) => this.changeMaxResolution$.emit(event));\n      this.instance.on('change:maxZoom', (event: ObjectEvent) => this.changeMaxZoom$.emit(event));\n      this.instance.on('change:minResolution', (event: ObjectEvent) => this.changeMinResolution$.emit(event));\n      this.instance.on('change:minZoom', (event: ObjectEvent) => this.changeMinZoom$.emit(event));\n      this.instance.on('change:opacity', (event: ObjectEvent) => this.changeOpacity$.emit(event));\n      this.instance.on('change:visible', (event: ObjectEvent) => this.changeVisible$.emit(event));\n      this.instance.on('change:zIndex', (event: ObjectEvent) => this.changeZIndex$.emit(event));\n      this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n      this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n\n    const properties: { [key: string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n\n        switch (key) {\n          case 'extent':\n            this.instance.setExtent(val);\n            break;\n          case 'maxResolution':\n            this.instance.setMaxResolution(val);\n            break;\n          case 'maxZoom':\n            this.instance.setMaxZoom(val);\n            break;\n          case 'minResolution':\n            this.instance.setMinResolution(val);\n            break;\n          case 'minZoom':\n            this.instance.setMinZoom(val);\n            break;\n          case 'opacity':\n            this.instance.setOpacity(val);\n            break;\n          case 'visible':\n            this.instance.setVisible(val);\n            break;\n          case 'zIndex':\n            this.instance.setZIndex(val);\n            break;\n          default:\n            properties[key] = val;\n            break;\n        }\n\n      }\n    }\n\n    if (Object.keys(properties).length > 0) {\n      this.instance.setProperties(properties);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseLayerComponent } from './base-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    BaseLayerComponent\n  ],\n  exports: [\n    BaseLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class BaseLayerModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, OnChanges, SimpleChanges, Output, EventEmitter, OnInit, forwardRef, AfterContentInit, ContentChildren, QueryList, NgZone } from '@angular/core';\nimport { PluggableMap } from 'ol';\nimport Layer, { Options, RenderFunction } from 'ol/layer/Layer';\nimport RenderEvent from 'ol/render/Event';\nimport Source from 'ol/source/Source';\nimport { distinctUntilChanged, map, startWith, takeUntil } from 'rxjs/operators';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { SourceComponent } from '../../source/source';\nimport { BaseLayerComponent } from '../base-layer';\n\n@Component({\n  selector: 'ol-layer',\n  exportAs: 'olLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => LayerComponent),\n    multi: true\n  }]\n})\nexport class LayerComponent extends BaseLayerComponent implements OnInit, OnChanges, AfterContentInit, BaseLayerRef, Options<Source> {\n\n  @Input('olSource') source?: Source;\n  @Input('olMap') map?: PluggableMap;\n  @Input('olRender') render?: RenderFunction;\n\n  @Output('olOnPostrender') postrender$ = new EventEmitter<RenderEvent>();\n  @Output('olOnPrerender') prerender$ = new EventEmitter<RenderEvent>();\n\n  @ContentChildren(SourceComponent) sourceComponents!: QueryList<SourceComponent>;\n\n  instance!: Layer<Source>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new Layer(this);\n      }\n      this.instance.on('postrender', (event: RenderEvent) => this.postrender$.emit(event));\n      this.instance.on('prerender', (event: RenderEvent) => this.prerender$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { source, map, ...others } = changes;\n\n    if (this.instance && source) this.instance.setSource(source.currentValue);\n    if (this.instance && map) this.instance.setMap(source.currentValue);\n\n    super.ngOnChanges(others);\n  }\n\n  ngAfterContentInit(): void {\n    this.sourceComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.sourceComponents),\n        map((sources: QueryList<SourceComponent>) => sources.last?.instance),\n        distinctUntilChanged()\n      )\n      .subscribe(source => this.instance.setSource(source));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayerComponent } from './layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    LayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LayerComponent\n  ]\n})\nexport class LayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, Input, ContentChildren, QueryList, NgZone } from '@angular/core';\nimport BaseImageLayer, { Options } from 'ol/layer/BaseImage';\nimport LayerRenderer from 'ol/renderer/Layer';\nimport ImageSource from 'ol/source/Image';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { ImageSourceComponent } from '../../source/image-source';\nimport { LayerComponent } from '../layer';\n\n@Component({\n  selector: 'ol-base-image-layer',\n  exportAs: 'olBaseImageLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => BaseImageLayerComponent),\n    multi: true\n  }]\n})\nexport class BaseImageLayerComponent<ImageSourceType extends ImageSource, RendererType extends LayerRenderer<any>> extends LayerComponent implements OnInit, BaseLayerRef, Options<ImageSourceType> {\n\n  @Input('olSource') source?: ImageSourceType;\n\n  @ContentChildren(ImageSourceComponent) sources!: QueryList<ImageSourceComponent>;\n\n  instance!: BaseImageLayer<ImageSourceType, RendererType>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    if (!this.instance) {\n      this.ngZone.runOutsideAngular(() => this.instance = new BaseImageLayer<ImageSourceType, RendererType>(this));\n    }\n    super.ngOnInit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseImageLayerComponent } from './base-image-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    BaseImageLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BaseImageLayerComponent\n  ]\n})\nexport class BaseImageLayerModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgZone } from '@angular/core';\nimport TileSource, { Options } from 'ol/source/Tile';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { SourceComponent } from '../source';\n\n@Component({\n  selector: 'ol-tile-source',\n  exportAs: 'olTileSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TileSourceComponent extends SourceComponent implements Options {\n\n  @Input() cacheSize?: number;\n  @Input() opaque?: boolean;\n  @Input() tilePixelRatio?: number;\n  @Input() tileGrid?: TileGrid;\n  @Input() transition?: number;\n  @Input() key?: string;\n  @Input() zDirection?: number;\n\n  instance!: TileSource;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TileSourceComponent } from './tile-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    TileSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TileSourceComponent\n  ]\n})\nexport class TileSourceModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, SimpleChanges, Input, Output, EventEmitter, OnInit, forwardRef, ContentChildren, QueryList, NgZone } from '@angular/core';\nimport BaseTileLayer, { Options } from 'ol/layer/BaseTile';\nimport { ObjectEvent } from 'ol/Object';\nimport LayerRenderer from 'ol/renderer/Layer';\nimport TileSource from 'ol/source/Tile';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { SourceComponent } from '../../source/source';\nimport { TileSourceComponent } from '../../source/tile-source';\nimport { LayerComponent } from '../layer';\n\n@Component({\n  selector: 'ol-base-tile-layer',\n  exportAs: 'olBaseTileLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => BaseTileLayerComponent),\n    multi: true\n  }]\n})\nexport class BaseTileLayerComponent<TileSourceType extends TileSource, RendererType extends LayerRenderer<any>> extends LayerComponent implements OnInit, OnChanges, BaseLayerRef, Options<TileSourceType> {\n\n  @Input('olPreload') preload?: number;\n  @Input('olSource') source?: TileSourceType;\n  @Input('olUseInterimTilesOnError') useInterimTilesOnError?: boolean;\n\n  @Output('olOnChangePreload') changePreload$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeUseInterimTilesOnError') changeUseInterimTilesOnError$ = new EventEmitter<ObjectEvent>();\n\n  @ContentChildren(TileSourceComponent) sourceComponents!: QueryList<SourceComponent>;\n\n  instance!: BaseTileLayer<TileSourceType, RendererType>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new BaseTileLayer(this);\n      }\n      this.instance.on('change:preload', (event: ObjectEvent) => this.changePreload$.emit(event));\n      this.instance.on('change:useInterimTilesOnError', (event: ObjectEvent) => this.changeUseInterimTilesOnError$.emit(event));\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { preload, useInterimTilesOnError, ...others } = changes;\n\n    if (this.instance && preload) this.instance.setPreload(preload.currentValue);\n    if (this.instance && useInterimTilesOnError) this.instance.setUseInterimTilesOnError(useInterimTilesOnError.currentValue);\n\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseTileLayerComponent } from './base-tile-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    BaseTileLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BaseTileLayerComponent\n  ]\n})\nexport class BaseTileLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, Input, SimpleChanges, Output, EventEmitter, NgZone } from '@angular/core';\nimport { Collection, Feature } from 'ol';\nimport BaseEvent from 'ol/events/Event';\nimport { FeatureLoader, FeatureUrlFunction } from 'ol/featureloader';\nimport FeatureFormat from 'ol/format/Feature';\nimport Geometry from 'ol/geom/Geometry';\nimport VectorSource, { LoadingStrategy, Options, VectorSourceEvent } from 'ol/source/Vector';\nimport { SourceComponent } from '../source';\n\n@Component({\n  selector: 'ol-vector-source',\n  exportAs: 'olVectorSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VectorSourceComponent extends SourceComponent implements OnInit, OnChanges, Options {\n\n  @Input('olFeatures') features?: Feature<Geometry>[] | Collection<Feature<Geometry>>;\n  @Input('olFormat') format?: FeatureFormat;\n  @Input('olLoader') loader?: FeatureLoader;\n  @Input('olOverlaps') overlaps?: boolean;\n  @Input('olStrategy') strategy?: LoadingStrategy;\n  @Input('olUrl') url?: string | FeatureUrlFunction;\n  @Input('olUseSpatialIndex') useSpatialIndex?: boolean;\n\n  @Output('olOnAddfeature') addfeature$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n  @Output('olOnChangefeature') changefeature$ = new EventEmitter<BaseEvent>();\n  @Output('olOnClear') clear$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n  @Output('olOnFeaturesloadend') featuresloadend$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n  @Output('olOnFeaturesloaderror') featuresloaderror$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n  @Output('olOnFeaturesloadstart') featuresloadstart$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n  @Output('olOnRemovefeature') removefeature$ = new EventEmitter<VectorSourceEvent<Geometry>>();\n\n  instance!: VectorSource<Geometry>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new VectorSource(this);\n      }\n      this.instance.on('addfeature', (event: VectorSourceEvent<Geometry>) => this.addfeature$.emit(event));\n      this.instance.on('changefeature', (event: BaseEvent) => this.changefeature$.emit(event));\n      this.instance.on('clear', (event: VectorSourceEvent<Geometry>) => this.clear$.emit(event));\n      this.instance.on('featuresloadend', (event: VectorSourceEvent<Geometry>) => this.featuresloadend$.emit(event));\n      this.instance.on('featuresloaderror', (event: VectorSourceEvent<Geometry>) => this.featuresloaderror$.emit(event));\n      this.instance.on('featuresloadstart', (event: VectorSourceEvent<Geometry>) => this.featuresloadstart$.emit(event));\n      this.instance.on('removefeature', (event: VectorSourceEvent<Geometry>) => this.removefeature$.emit(event));\n\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { loader, url, features, ...others } = changes;\n    if (this.instance) {\n      if (loader) this.instance.setLoader(loader.currentValue);\n      if (url) this.instance.setUrl(url.currentValue);\n      if (features) {\n        this.instance.clear();\n        this.instance.addFeatures(features.currentValue);\n      }\n    }\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VectorSourceComponent } from './vector-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    VectorSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    VectorSourceComponent\n  ]\n})\nexport class VectorSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, SimpleChanges, Input, NgZone } from '@angular/core';\nimport Geometry from 'ol/geom/Geometry';\nimport Style, { GeometryFunction, Options, RenderFunction } from 'ol/style/Style';\nimport Stroke from 'ol/style/Stroke';\nimport Fill from 'ol/style/Fill';\nimport ImageStyle from 'ol/style/Image';\nimport Text from 'ol/style/Text';\n\n@Component({\n  selector: 'ol-style',\n  exportAs: 'olStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StyleComponent implements OnInit, OnChanges, Options {\n\n  @Input('olGeometry') geometry?: string | Geometry | GeometryFunction;\n  @Input('olFill') fill?: Fill;\n  @Input('olImage') image?: ImageStyle;\n  @Input('olRenderer') renderer?: RenderFunction;\n  @Input('olStroke') stroke?: Stroke;\n  @Input('olText') text?: Text;\n  @Input('olZIndex') zIndex?: number;\n\n  instance!: Style;\n\n  constructor(private ngZone: NgZone) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Style(this);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'geometry':\n            this.instance.setGeometry(val);\n            break;\n          case 'fill':\n            this.instance.setFill(val);\n            break;\n          case 'image':\n            this.instance.setImage(val);\n            break;\n          case 'renderer':\n            this.instance.setRenderer(val);\n            break;\n          case 'stroke':\n            this.instance.setStroke(val);\n            break;\n          case 'text':\n            this.instance.setText(val);\n            break;\n          case 'zIndex':\n            this.instance.setZIndex(val);\n            break;\n        }\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StyleComponent } from './style.component';\n\n\n\n@NgModule({\n  declarations: [\n    StyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    StyleComponent\n  ]\n})\nexport class StyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, OnChanges, Input, SimpleChanges, ContentChildren, QueryList, AfterContentInit, NgZone } from '@angular/core';\nimport Geometry from 'ol/geom/Geometry';\nimport BaseVectorLayer, { Options } from 'ol/layer/BaseVector';\nimport { OrderFunction } from 'ol/render';\nimport CanvasVectorImageLayerRenderer from 'ol/renderer/canvas/VectorImageLayer';\nimport CanvasVectorLayerRenderer from 'ol/renderer/canvas/VectorLayer';\nimport CanvasVectorTileLayerRenderer from 'ol/renderer/canvas/VectorTileLayer';\nimport WebGLPointsLayerRenderer from 'ol/renderer/webgl/PointsLayer';\nimport VectorSource from 'ol/source/Vector';\nimport VectorTile from 'ol/source/VectorTile';\nimport Style, { StyleLike } from 'ol/style/Style';\nimport { distinctUntilChanged, map, startWith, takeUntil } from 'rxjs/operators';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { SourceComponent } from '../../source/source';\nimport { VectorSourceComponent } from '../../source/vector-source';\nimport { StyleComponent } from '../../style/style';\nimport { LayerComponent } from '../layer';\n\n@Component({\n  selector: 'ol-base-vector-layer',\n  exportAs: 'olBaseVectorLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => BaseVectorLayerComponent),\n    multi: true\n  }]\n})\nexport class BaseVectorLayerComponent<\n  VectorSourceType extends VectorSource<Geometry> | VectorTile, \n  RendererType extends CanvasVectorLayerRenderer | CanvasVectorTileLayerRenderer | CanvasVectorImageLayerRenderer | WebGLPointsLayerRenderer\n> extends LayerComponent implements OnInit, OnChanges, AfterContentInit, BaseLayerRef, Options<VectorSource<any> | VectorTile> {\n\n  @Input('olRenderOrder') renderOrder?: OrderFunction;\n  @Input('olRenderBuffer') renderBuffer?: number;\n  @Input('olSource') source?: VectorSource<Geometry>|any;\n  @Input('olDeclutter') declutter?: boolean;\n  @Input('olStyle') style?: StyleLike;\n  @Input('olUpdateWhileAnimating') updateWhileAnimating?: boolean;\n  @Input('olUpdateWhileInteracting') updateWhileInteracting?: boolean;\n\n  @ContentChildren(VectorSourceComponent) sources!: QueryList<SourceComponent>;\n  @ContentChildren(StyleComponent) styles!: QueryList<StyleComponent>;\n\n  instance!: BaseVectorLayer<VectorSourceType, RendererType>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new BaseVectorLayer(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { style, ...others } = changes;\n    if (this.instance && style) {\n      this.instance.setStyle(style.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n  ngAfterContentInit(): void {\n    this.styles.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.styles),\n        map((styles: QueryList<StyleComponent>) => styles.map(s => s.instance)),\n        map((styles: Style[]) => styles && styles.length ? styles : this.style),\n        distinctUntilChanged()\n      )\n      .subscribe(styles => this.instance.setStyle(styles));\n    super.ngAfterContentInit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseVectorLayerComponent } from './base-vector-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    BaseVectorLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BaseVectorLayerComponent\n  ]\n})\nexport class BaseVectorLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, forwardRef, Input, Output, EventEmitter, SimpleChanges, ContentChildren, QueryList, AfterContentChecked, OnDestroy, AfterContentInit, NgZone } from '@angular/core';\nimport { Collection } from 'ol';\nimport BaseLayer from 'ol/layer/Base';\nimport GroupLayer, { Options } from 'ol/layer/Group';\nimport { ObjectEvent } from 'ol/Object';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, takeUntil } from 'rxjs/operators';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { BaseLayerComponent } from '../base-layer';\n\n@Component({\n  selector: 'ol-group-layer',\n  exportAs: 'olGroupLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => GroupLayerComponent),\n    multi: true\n  }]\n})\nexport class GroupLayerComponent extends BaseLayerComponent implements OnInit, OnChanges, AfterContentInit, OnDestroy, BaseLayerRef, Options {\n\n  @Input('olLayers') layers?: BaseLayer[] | Collection<BaseLayer>;\n\n  @Output('olOnChangeLayers') changeLayers$ = new EventEmitter<ObjectEvent>();\n\n  @ContentChildren(LAYER_PROVIDER) layerComponents!: QueryList<BaseLayerRef>;\n\n  instance!: GroupLayer;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new GroupLayer(this);\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { layers, ...others } = changes;\n\n    if (this.instance && layers) this.instance.setLayers(layers.currentValue);\n\n    super.ngOnChanges(others);\n  }\n\n  ngAfterContentInit(): void {\n    this.layerComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.layerComponents),\n        map((components: QueryList<BaseLayerRef>) => components.map(c => c.instance)),\n        distinctUntilChanged()\n      )\n      .subscribe(layers => {\n        const collection = this.instance.getLayers();\n        collection.clear();\n        collection.extend(layers);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GroupLayerComponent } from './group-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    GroupLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    GroupLayerComponent\n  ]\n})\nexport class GroupLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone } from '@angular/core';\nimport ImageLayer from 'ol/layer/Image';\nimport CanvasImageLayerRenderer from 'ol/renderer/canvas/ImageLayer';\nimport ImageSource from 'ol/source/Image';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { BaseImageLayerComponent } from '../base-image-layer';\n\n@Component({\n  selector: 'ol-image-layer',\n  exportAs: 'olImageLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => ImageLayerComponent),\n    multi: true\n  }, {\n    provide: BaseImageLayerComponent,\n    useExisting: forwardRef(() => ImageLayerComponent),\n    multi: false\n  }]\n})\nexport class ImageLayerComponent extends BaseImageLayerComponent<ImageSource, CanvasImageLayerRenderer> implements OnInit, BaseLayerRef  {\n\n  instance!: ImageLayer<ImageSource>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => this.instance = new ImageLayer(this));\n    super.ngOnInit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageLayerComponent } from './image-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    ImageLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ImageLayerComponent\n  ]\n})\nexport class ImageLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone } from '@angular/core';\nimport TileLayer from 'ol/layer/Tile';\nimport LayerRenderer from 'ol/renderer/Layer';\nimport TileSource from 'ol/source/Tile';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { BaseTileLayerComponent } from '../base-tile-layer';\n\n@Component({\n  selector: 'ol-tile-layer',\n  exportAs: 'olTileLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => TileLayerComponent),\n    multi: true\n  }, {\n    provide: BaseTileLayerComponent,\n    useExisting: forwardRef(() => TileLayerComponent),\n    multi: false\n  }]\n})\nexport class TileLayerComponent extends BaseTileLayerComponent<TileSource, LayerRenderer<any>> implements OnInit, BaseLayerRef  {\n\n  instance!: TileLayer<TileSource>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new TileLayer(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TileLayerComponent } from './tile-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    TileLayerComponent\n  ],\n  exports: [\n    TileLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class TileLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone } from '@angular/core';\nimport Geometry from 'ol/geom/Geometry';\nimport VectorLayer from 'ol/layer/Vector';\nimport CanvasVectorLayerRenderer from 'ol/renderer/canvas/VectorLayer';\nimport VectorSource from 'ol/source/Vector';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../../core/layer';\nimport { BaseVectorLayerComponent } from '../base-vector-layer';\n\n@Component({\n  selector: 'ol-vector-layer',\n  exportAs: 'olVectorLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => VectorLayerComponent),\n    multi: true\n  }]\n})\nexport class VectorLayerComponent extends BaseVectorLayerComponent<VectorSource<Geometry>, CanvasVectorLayerRenderer> implements OnInit, BaseLayerRef {\n\n  instance!: VectorLayer<VectorSource<Geometry>>;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new VectorLayer(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VectorLayerComponent } from './vector-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    VectorLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    VectorLayerComponent\n  ]\n})\nexport class VectorLayerModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnInit, NgZone } from '@angular/core';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport UrlTile, { Options } from 'ol/source/UrlTile';\nimport { LoadFunction, UrlFunction } from 'ol/Tile';\nimport { TileSourceComponent } from '../tile-source';\n\n@Component({\n  selector: 'ol-url-tile-source',\n  exportAs: 'olUrlTileSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UrlTileSourceComponent extends TileSourceComponent implements OnInit, OnChanges, Options {\n\n  @Input('olTileLoadFunction') tileLoadFunction!: LoadFunction;\n  @Input('olTileUrlFunction') tileUrlFunction?: UrlFunction;\n  @Input('olUrl') url?: string;\n  @Input('olUrls') urls?: string[];\n\n  @Output('olOnTileloadend') tileloadend$ = new EventEmitter<TileSourceEvent>();\n  @Output('olOnTileloaderror') tileloaderror$ = new EventEmitter<TileSourceEvent>();\n  @Output('olOnTileloadstart') tileloadstart$ = new EventEmitter<TileSourceEvent>();\n\n  instance!: UrlTile;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new UrlTile(this);\n      }\n      this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileloadend$.emit(event));\n      this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileloaderror$.emit(event));\n      this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileloadstart$.emit(event));\n\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { tileLoadFunction, tileUrlFunction, url, urls, ...others } = changes;\n\n    if (this.instance) {\n      if (tileLoadFunction) this.instance.setTileLoadFunction(tileLoadFunction.currentValue);\n      if (tileUrlFunction) this.instance.setTileUrlFunction(tileUrlFunction.currentValue);\n      if (url) this.instance.setUrl(url.currentValue);\n      if (urls) this.instance.setUrls(urls.currentValue);\n    }\n\n    super.ngOnChanges(others);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UrlTileSourceComponent } from './url-tile-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    UrlTileSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    UrlTileSourceComponent\n  ]\n})\nexport class UrlTileSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, Input, NgZone } from '@angular/core';\nimport { Extent } from 'ol/extent';\nimport FeatureFormat from 'ol/format/Feature';\nimport VectorTile_1 from 'ol/VectorTile';\nimport VectorTile, { Options } from 'ol/source/VectorTile';\nimport { Size } from 'ol/size';\nimport { UrlTileSourceComponent } from '../url-tile-source';\n\n@Component({\n  selector: 'ol-vector-tile-source',\n  exportAs: 'olVectorTileSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VectorTileSourceComponent extends UrlTileSourceComponent implements OnInit, OnChanges, Options {\n\n  @Input('olExtent') extent?: Extent;\n  @Input('olFormat') format?: FeatureFormat;\n  @Input('olOverlaps') overlaps?: boolean;\n  @Input('olTileClass') tileClass?: typeof VectorTile_1;\n  @Input('olMaxZoom') maxZoom?: number;\n  @Input('olMinZoom') minZoom?: number;\n  @Input('olTileSize') tileSize?: number | Size;\n  @Input('olMaxResolution') maxResolution?: number;\n\n  instance!: VectorTile;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new VectorTile(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VectorTileSourceComponent } from './vector-tile-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    VectorTileSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    VectorTileSourceComponent\n  ]\n})\nexport class VectorTileSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, Output, EventEmitter, OnChanges, SimpleChanges, ContentChildren, QueryList, NgZone } from '@angular/core';\nimport VectorTileLayer, { Options } from 'ol/layer/VectorTile';\nimport { ObjectEvent } from 'ol/Object';\nimport CanvasVectorTileLayerRenderer from 'ol/renderer/canvas/VectorTileLayer';\nimport VectorTile from 'ol/source/VectorTile';\nimport { LAYER_PROVIDER } from '../../core/layer';\nimport { SourceComponent } from '../../source/source';\nimport { VectorTileSourceComponent } from '../../source/vector-tile-source';\nimport { BaseVectorLayerComponent } from '../base-vector-layer';\nimport { VectorTileRenderType } from './vector-tile-layer.model';\n\n@Component({\n  selector: 'ol-vector-tile-layer',\n  exportAs: 'olVectorTileLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => VectorTileLayerComponent),\n    multi: true\n  }, {\n    provide: BaseVectorLayerComponent,\n    useExisting: forwardRef(() => VectorTileLayerComponent),\n    multi: false\n  }]\n})\nexport class VectorTileLayerComponent extends BaseVectorLayerComponent<VectorTile, CanvasVectorTileLayerRenderer> implements OnInit, OnChanges, Options {\n\n  @Input('olRenderMode') renderMode?: VectorTileRenderType | string;\n  @Input('olSource') source?: VectorTile;\n  @Input('olPreload') preload?: number;\n  @Input('olUseInterimTilesOnError') useInterimTilesOnError?: boolean;\n\n  @Output('olOnPreload') onPreload$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnUseInterimTilesOnError') onUseInterimTilesOnError$ = new EventEmitter<ObjectEvent>();\n\n  @ContentChildren(VectorTileSourceComponent) sources!: QueryList<SourceComponent>;\n\n  instance!: VectorTileLayer;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    super.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new VectorTileLayer(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { preload, useInterimTilesOnError, ...others } = changes;\n    if (this.instance) {\n      if (preload) this.instance.setPreload(preload.currentValue);\n      if (useInterimTilesOnError) this.instance.setUseInterimTilesOnError(useInterimTilesOnError.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VectorTileLayerComponent } from './vector-tile-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    VectorTileLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    VectorTileLayerComponent\n  ]\n})\nexport class VectorTileLayerModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, NgZone, Input, Output, EventEmitter } from '@angular/core';\nimport { Size } from 'ol/size';\nimport DataTileSource, { Options } from 'ol/source/DataTile';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport { TileSourceComponent } from '../tile-source';\nimport { DataTileSourceLoader } from './data-tile-source.model';\n\n@Component({\n  selector: 'ol-data-tile-source',\n  exportAs: 'olDataTileSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTileSourceComponent extends TileSourceComponent implements OnInit, Options {\n\n  @Input('olLoader') loader?: DataTileSourceLoader;\n  @Input('olMaxZoom') maxZoom?: number;\n  @Input('olMinZoom') minZoom?: number;\n  @Input('olTileSize') tileSize?: number | Size;\n  @Input('olMaxResolution') maxResolution?: number;\n  @Input('olBandCount') bandCount?: number;\n\n  @Output('olTileloadend') tileloadend$ = new EventEmitter<TileSourceEvent>();\n  @Output('olTileloaderror') tileloaderror$ = new EventEmitter<TileSourceEvent>();\n  @Output('olTileloadstart') tileloadstart$ = new EventEmitter<TileSourceEvent>();\n\n  instance!: DataTileSource;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new DataTileSource(this);\n      }\n      this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileloadend$.emit(event));\n      this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileloaderror$.emit(event));\n      this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileloadstart$.emit(event));\n\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTileSourceComponent } from './data-tile-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    DataTileSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DataTileSourceComponent\n  ]\n})\nexport class DataTileSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, NgZone, Input } from '@angular/core';\nimport GeoTIFFSource, { Options, SourceInfo } from 'ol/source/GeoTIFF';\nimport { DataTileSourceComponent } from '../data-tile-source';\n\n@Component({\n  selector: 'ol-geo-tiff-source',\n  exportAs: 'olGeoTIFFSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GeoTIFFSourceComponent extends DataTileSourceComponent implements OnInit, Options {\n\n  @Input('olSources') sources: SourceInfo[] = [];\n  @Input('olConvertToRGB') convertToRGB = false;\n  @Input('olNormalize') normalize = true;\n\n  instance!: GeoTIFFSource;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new GeoTIFFSource(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GeoTIFFSourceComponent } from './geo-tiff-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    GeoTIFFSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    GeoTIFFSourceComponent\n  ]\n})\nexport class GeoTIFFSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone, Input, ContentChildren, QueryList } from '@angular/core';\nimport { Extent } from 'ol/extent';\nimport WebGLTileLayer, { Options, SourceType, Style } from 'ol/layer/WebGLTile';\nimport LayerRenderer from 'ol/renderer/Layer';\nimport { LAYER_PROVIDER } from '../../core';\nimport { GeoTIFFSourceComponent } from '../../source/geo-tiff-source';\nimport { BaseTileLayerComponent } from '../base-tile-layer';\n\n@Component({\n  selector: 'ol-webgl-tile-layer',\n  exportAs: 'olWebGLTileLayer',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: LAYER_PROVIDER,\n    useExisting: forwardRef(() => WebGLTileLayerComponent),\n    multi: true\n  }, {\n    provide: BaseTileLayerComponent,\n    useExisting: forwardRef(() => WebGLTileLayerComponent),\n    multi: false\n  }]\n})\nexport class WebGLTileLayerComponent extends BaseTileLayerComponent<SourceType, LayerRenderer<any>> implements OnInit, Options {\n\n  @Input('olStyle') style?: Style;\n  @Input('olCacheSize') cacheSize?: number;\n  @Input('olSources') sources?: Array<SourceType> | ((extent: Extent, resolution: number) => Array<SourceType>)\n\n  @ContentChildren(GeoTIFFSourceComponent) sourceComponents!: QueryList<GeoTIFFSourceComponent>;\n\n  instance!: WebGLTileLayer;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new WebGLTileLayer(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WebGLTileLayerComponent } from './webgl-tile-layer.component';\n\n\n\n@NgModule({\n  declarations: [\n    WebGLTileLayerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    WebGLTileLayerComponent\n  ]\n})\nexport class WebGLTileLayerModule { }\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[olOverlayContent]',\n  exportAs: 'olOverlayContent'\n})\nexport class OverlayContentDirective {\n\n  constructor(public templateRef: TemplateRef<{}>) {}\n\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ComponentFactoryResolver, ApplicationRef, Injector, ContentChild, TemplateRef, ViewContainerRef, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { DomPortalOutlet, TemplatePortal } from '@angular/cdk/portal'\nimport { Coordinate } from 'ol/coordinate';\nimport Overlay, { Options, PanIntoViewOptions, PanOptions } from 'ol/Overlay';\nimport { OverlayContentDirective } from './overlay-content.directive';\nimport { OverlayPositioning } from './overlay.model';\n\n@Component({\n  selector: 'ol-overlay',\n  exportAs: 'olOverlay',\n  template: `<ng-content></ng-content>`,\n  styles: [\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OverlayComponent implements AfterViewInit, OnChanges, Options {\n\n  @Input('olId') id?: number | string;\n  @Input('olElement') element?: HTMLElement;\n  @Input('olOffset') offset?: number[];\n  @Input('olPosition') position?: Coordinate;\n  @Input('olPositioning') positioning?: OverlayPositioning;\n  @Input('olStopEvent') stopEvent?: boolean;\n  @Input('olInsertFirst') insertFirst?: boolean;\n  @Input('olAutoPan') autoPan?: PanIntoViewOptions | boolean;\n  @Input('olAutoPanAnimation') autoPanAnimation?: PanOptions;\n  @Input('olAutoPanMargin') autoPanMargin?: number;\n  @Input('olAutoPanOptions') autoPanOptions?: PanIntoViewOptions;\n  @Input('olClassName') className?: string;\n\n  @ContentChild(OverlayContentDirective, { static: true, read: TemplateRef }) content!: TemplateRef<{}>;\n\n  instance!: Overlay;\n\n  constructor(\n    private cfr: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n  ) { }\n\n  ngAfterViewInit(): void {\n    const element = this.element || document.createElement('div');\n    const portalOutlet = new DomPortalOutlet(element, this.cfr, this.appRef, this.injector);\n    const portal = new TemplatePortal(this.content, this.viewContainerRef);\n    const componentRef = portalOutlet.attach(portal);\n    this.instance = new Overlay({ ...this, element });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n\n    const properties: { [key: string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'element':\n            this.instance.setElement(val);\n            break;\n          case 'offset':\n            this.instance.setOffset(val);\n            break;\n          case 'position':\n            this.instance.setPosition(val);\n            break;\n          case 'positioning':\n            this.instance.setPositioning(val);\n            break;\n          default:\n            properties[key] = val;\n            break;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length > 0) {\n      this.instance.setProperties(properties);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayComponent } from './overlay.component';\nimport { OverlayContentDirective } from './overlay-content.directive';\n\n\n\n@NgModule({\n  declarations: [\n    OverlayComponent,\n    OverlayContentDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OverlayComponent,\n    OverlayContentDirective\n  ]\n})\nexport class OverlayModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, ElementRef, AfterViewInit, OnChanges, SimpleChanges, NgZone, AfterContentInit, ContentChildren, QueryList, OnDestroy } from '@angular/core';\nimport { Collection, Map, MapBrowserEvent, MapEvent, Overlay, View } from 'ol';\nimport { ObjectEvent } from 'ol/Object';\nimport { MapOptions } from 'ol/PluggableMap';\nimport BaseEvent from 'ol/events/Event';\nimport BaseLayer from 'ol/layer/Base';\nimport { Control } from 'ol/control';\nimport { Interaction, defaults as defaultsInteraction } from 'ol/interaction';\nimport LayerGroup from 'ol/layer/Group';\nimport RenderEvent from 'ol/render/Event';\nimport { BaseLayerRef, LAYER_PROVIDER } from '../core/layer';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, startWith, takeUntil } from 'rxjs/operators';\nimport { InteractionComponent } from '../interaction/interaction';\nimport { ControlComponent } from '../control/control';\nimport { OverlayComponent } from '../overlay';\n\n@Component({\n  selector: 'ol-map',\n  exportAs: 'olMap',\n  template: `\n    <div [style.width]=\"'100%'\" [style.height]=\"'100%'\"></div>\n    <ng-content></ng-content>\n  `,\n  styles: [\n  ],\n  host: {\n    '[style.display]': `'block'`,\n    '[style.width]': `width`,\n    '[style.height]': `height`\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapComponent implements OnInit, OnChanges, AfterContentInit, AfterViewInit, OnDestroy, MapOptions {\n\n  @Input('olWidth') width: string | number = '100%';\n  @Input('olHeight') height: string | number = '100%';\n  @Input('olControls') controls?: Collection<Control> | Control[];\n  @Input('olPixelRatio') pixelRatio?: number;\n  @Input('olInteractions') interactions?: Collection<Interaction> | Interaction[];\n  @Input('olKeyboardEventTarget') keyboardEventTarget?: HTMLElement | Document | string;\n  @Input('olLayers') layers?: BaseLayer[] | Collection<BaseLayer> | LayerGroup;\n  @Input('olMaxTilesLoading') maxTilesLoading?: number;\n  @Input('olMoveTolerance') moveTolerance?: number;\n  @Input('olVverlays') overlays?: Collection<Overlay> | Overlay[];\n  @Input('olTarget') target?: HTMLElement | string;\n  @Input('olView') view?: View;\n\n  @Output('olOnChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olOnChangeLayerGroup') changeLayerGroup$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeSize') changeSize$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeTarget') changeTarget$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeView') changeView$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnClick') click$ = new EventEmitter<MapBrowserEvent<UIEvent>>();\n  @Output('olOnDblclick') dblclick$ = new EventEmitter<MapBrowserEvent<UIEvent>>();\n  @Output('olOnError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olOnMoveend') moveend$ = new EventEmitter<MapEvent>();\n  @Output('olOnMovestart') movestart$ = new EventEmitter<MapEvent>();\n  @Output('olOnPointerdrag') pointerdrag$ = new EventEmitter<MapBrowserEvent<UIEvent>>();\n  @Output('olOnPointermove') pointermove$ = new EventEmitter<MapBrowserEvent<UIEvent>>();\n  @Output('olOnPostcompose') postcompose$ = new EventEmitter<RenderEvent>();\n  @Output('olOnPostrender') postrender$ = new EventEmitter<MapEvent>();\n  @Output('olOnPrecompose') precompose$ = new EventEmitter<RenderEvent>();\n  @Output('olOnPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnRendercomplete') rendercomplete$ = new EventEmitter<RenderEvent>();\n  @Output('olOnSingleclick') singleclick$ = new EventEmitter<MapBrowserEvent<UIEvent>>();\n\n  @ContentChildren(LAYER_PROVIDER) layerComponents!: QueryList<BaseLayerRef>;\n  @ContentChildren(InteractionComponent, { descendants: true }) interactionComponents!: QueryList<InteractionComponent>;\n  @ContentChildren(ControlComponent, { descendants: true }) controlComponents!: QueryList<ControlComponent>;\n  @ContentChildren(OverlayComponent, { descendants: true }) overlayComponents!: QueryList<OverlayComponent>;\n\n  public instance!: Map;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private elementRef: ElementRef<HTMLDivElement>,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.createInstance();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n\n    const properties: { [key: string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n\n        if (key === 'target') {\n          this.ngZone.runOutsideAngular(() => {\n            this.instance.setTarget(val);\n          });\n        } else if (key === 'view') {\n          this.ngZone.runOutsideAngular(() => {\n            this.instance.setView(val);\n          });\n        } else {\n          properties[key] = val;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length > 0) {\n      this.ngZone.runOutsideAngular(() => {\n        this.instance.setProperties(properties);\n      });\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.layerComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.layerComponents),\n        filter(() => !this.layers),\n        map((components: QueryList<BaseLayerRef>) => components.map(c => c.instance)),\n        distinctUntilChanged()\n      )\n      .subscribe(layers => {\n        const collection = this.instance.getLayers();\n        collection.clear();\n        collection.extend(layers);\n      });\n\n    this.interactionComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.interactionComponents),\n        filter(() => !this.interactions),\n        map((components: QueryList<InteractionComponent>) => components.map(c => c.instance)),\n        map((interactions: Interaction[]) => defaultsInteraction().extend(interactions).getArray()),\n        distinctUntilChanged()\n      )\n      .subscribe(interactions => {\n        const collection = this.instance.getInteractions();\n        collection.clear();\n        collection.extend(interactions);\n      });\n\n    this.controlComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.controlComponents),\n        filter(() => !this.controls),\n        map((components: QueryList<ControlComponent>) => components.map(c => c.instance)),\n        distinctUntilChanged()\n      )\n      .subscribe(controls => {\n        const collection = this.instance.getControls();\n        collection.clear();\n        collection.extend(controls);\n      });\n    this.overlayComponents.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.overlayComponents),\n        filter(() => !this.overlays),\n        map((components: QueryList<OverlayComponent>) => components.map(c => c.instance)),\n        distinctUntilChanged()\n      )\n      .subscribe(overlays => {\n        const collection = this.instance.getOverlays();\n        collection.clear();\n        collection.extend(overlays);\n      });\n  }\n\n  ngAfterViewInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance.updateSize();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.instance.setTarget(undefined);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private createInstance(): void {\n    const target: HTMLElement = this.elementRef.nativeElement.firstElementChild as HTMLElement;\n    this.instance = new Map({ ...this, target });\n    this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n    this.instance.on('change:layergroup', (event: ObjectEvent) => this.changeLayerGroup$.emit(event));\n    this.instance.on('change:size', (event: ObjectEvent) => this.changeSize$.emit(event));\n    this.instance.on('change:target', (event: ObjectEvent) => this.changeTarget$.emit(event));\n    this.instance.on('change:view', (event: ObjectEvent) => this.changeView$.emit(event));\n    this.instance.on('click', (event: MapBrowserEvent<UIEvent>) => this.click$.emit(event));\n    this.instance.on('dblclick', (event: MapBrowserEvent<UIEvent>) => this.dblclick$.emit(event));\n    this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n    this.instance.on('moveend', (event: MapEvent) => this.moveend$.emit(event));\n    this.instance.on('movestart', (event: MapEvent) => this.movestart$.emit(event));\n    this.instance.on('pointerdrag', (event: MapBrowserEvent<UIEvent>) => this.pointerdrag$.emit(event));\n    this.instance.on('pointermove', (event: MapBrowserEvent<UIEvent>) => this.pointermove$.emit(event));\n    this.instance.on('postcompose', (event: RenderEvent) => this.postcompose$.emit(event));\n    this.instance.on('postrender', (event: MapEvent) => this.postrender$.emit(event));\n    this.instance.on('precompose', (event: RenderEvent) => this.precompose$.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n    this.instance.on('rendercomplete', (event: RenderEvent) => this.rendercomplete$.emit(event));\n    this.instance.on('singleclick', (event: MapBrowserEvent<UIEvent>) => this.singleclick$.emit(event));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map.component';\n\n\n\n@NgModule({\n  declarations: [\n    MapComponent\n  ],\n  exports: [\n    MapComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class MapModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, Input, SimpleChanges, NgZone, AfterContentInit, ContentChildren, QueryList, OnDestroy, forwardRef } from '@angular/core';\nimport { Feature } from 'ol';\nimport Geometry from 'ol/geom/Geometry';\nimport Point from 'ol/geom/Point';\nimport Cluster, { Options } from 'ol/source/Cluster';\nimport VectorSource from 'ol/source/Vector';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, takeUntil } from 'rxjs/operators';\nimport { SourceComponent } from '../source';\nimport { VectorSourceComponent } from '../vector-source/vector-source.component';\n\n@Component({\n  selector: 'ol-cluster-source',\n  exportAs: 'olClusterSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: VectorSourceComponent,\n    useExisting: forwardRef(() => ClusterSourceComponent),\n    multi: true\n  }]\n})\nexport class ClusterSourceComponent extends VectorSourceComponent implements OnInit, OnChanges, AfterContentInit, OnDestroy, Options {\n\n  @Input('olDistance') distance?: number;\n  @Input('olGeometryFunction') geometryFunction?: (p0: Feature<Geometry>) => Point;\n  @Input('olSource') source?: VectorSource<Geometry>;\n\n  @ContentChildren(VectorSourceComponent) sources!: QueryList<VectorSourceComponent>;\n\n  instance!: Cluster;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Cluster(this);\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { distance, source, ...others } = changes;\n    if (this.instance) {\n      if (distance) this.instance.setDistance(distance.currentValue);\n      if (source) this.instance.setSource(source.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n  ngAfterContentInit(): void {\n    this.sources.changes\n      .pipe(\n        takeUntil(this.destroy$),\n        startWith(this.sources),\n        map((sources: QueryList<VectorSourceComponent>) => sources.last?.instance),\n        distinctUntilChanged()\n      )\n      .subscribe(source => this.instance.setSource(source));\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClusterSourceComponent } from './cluster-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    ClusterSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ClusterSourceComponent\n  ]\n})\nexport class ClusterSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, forwardRef, Input, SimpleChanges, NgZone } from '@angular/core';\nimport { LoadFunction } from 'ol/Image';\nimport ImageWMS, { Options } from 'ol/source/ImageWMS';\nimport { ImageSourceComponent } from '../image-source';\nimport { WMSServerType } from './image-wms-source.model';\n\n@Component({\n  selector: 'ol-image-wms-source',\n  exportAs: 'olImageWMSSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: ImageSourceComponent,\n    useExisting: forwardRef(() => ImageWMSSourceComponent),\n    multi: true\n  }]\n})\nexport class ImageWMSSourceComponent extends ImageSourceComponent implements OnInit, OnChanges, Options {\n\n  @Input('olCrossOrigin') crossOrigin?: string;\n  @Input('olHidpi') hidpi?: boolean;\n  @Input('olServerType') serverType?: WMSServerType;\n  @Input('olImageLoadFunction') imageLoadFunction?: LoadFunction;\n  @Input('olParams') params!: { [key: string]: any };\n  @Input('olRatio') ratio?: number;\n  @Input('olUrl') url!: string;\n\n  instance!: ImageWMS;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new ImageWMS(this);\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { imageLoadFunction, url, ...others } = changes;\n\n    if (this.instance) {\n      imageLoadFunction && this.instance.setImageLoadFunction(imageLoadFunction.currentValue);\n      url && this.instance.setUrl(url.currentValue);\n    }\n\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageWMSSourceComponent } from './image-wms-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    ImageWMSSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ImageWMSSourceComponent\n  ]\n})\nexport class ImageWMSSourceModule { }\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, OnInit, NgZone } from '@angular/core';\nimport ImageTile from 'ol/ImageTile';\nimport TileImageSource, { Options } from 'ol/source/TileImage';\nimport { UrlTileSourceComponent } from '../url-tile-source';\n\n@Component({\n  selector: 'ol-tile-image-source',\n  exportAs: 'olTileImageSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TileImageSourceComponent extends UrlTileSourceComponent implements OnInit, Options {\n\n  @Input() crossOrigin?: string;\n  @Input() imageSmoothing?: boolean;\n  @Input() reprojectionErrorThreshold?: number;\n  @Input() tileClass?: typeof ImageTile;\n\n  instance!: TileImageSource\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new TileImageSource(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TileImageSourceComponent } from './tile-image-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    TileImageSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TileImageSourceComponent\n  ]\n})\nexport class TileImageSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, NgZone } from '@angular/core';\nimport { Size } from 'ol/size';\nimport XYZSource, { Options } from 'ol/source/XYZ';\nimport { TileImageSourceComponent } from '../tile-image-source';\nimport { TileSourceComponent } from '../tile-source';\n\n@Component({\n  selector: 'ol-xyz-source',\n  exportAs: 'olXYZSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: TileSourceComponent,\n    useExisting: forwardRef(() => XYZSourceComponent),\n    multi: true\n  }]\n})\nexport class XYZSourceComponent extends TileImageSourceComponent implements OnInit, Options {\n\n  @Input('olMaxZoom') maxZoom?: number;\n  @Input('olMinZoom') minZoom?: number;\n  @Input('olMaxResolution') maxResolution?: number;\n  @Input('olTileSize') tileSize?: number | Size;\n\n  instance!: XYZSource;\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new XYZSource(this);\n      }\n      super.ngOnInit();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { XYZSourceComponent } from './xyz-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    XYZSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    XYZSourceComponent\n  ]\n})\nexport class XYZSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, NgZone } from '@angular/core';\nimport OSM, { Options } from 'ol/source/OSM';\nimport { TileSourceComponent } from '../tile-source';\nimport { XYZSourceComponent } from '../xyz-source';\n\n@Component({\n  selector: 'ol-osm-source',\n  exportAs: 'olOSMSource',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: TileSourceComponent,\n    useExisting: forwardRef(() => OSMSourceComponent),\n    multi: true\n  }]\n})\nexport class OSMSourceComponent extends XYZSourceComponent implements OnInit, Options {\n\n  instance!: OSM\n\n  constructor(ngZone: NgZone) {\n    super(ngZone);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new OSM(this);\n      super.ngOnInit();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OSMSourceComponent } from './osm-source.component';\n\n\n\n@NgModule({\n  declarations: [\n    OSMSourceComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OSMSourceComponent\n  ]\n})\nexport class OSMSourceModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, OnDestroy, Input, SimpleChanges, NgZone } from '@angular/core';\nimport { Size } from 'ol/size';\nimport ImageStyle, { Options } from 'ol/style/Image';\nimport { StyleComponent } from '../style';\n\n@Component({\n  selector: 'ol-image-style',\n  exportAs: 'olImageStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageStyleComponent implements OnInit, OnChanges, OnDestroy, Options {\n\n  @Input('olOpacity') opacity!: number;\n  @Input('olRotateWithView') rotateWithView!: boolean;\n  @Input('olRotation') rotation!: number;\n  @Input('olScale') scale!: number | Size;\n  @Input('olDisplacement') displacement!: number[];\n  @Input('olDeclutterMode') declutterMode!: 'declutter' | 'obstacle' | 'none' | undefined;\n\n  instance!: ImageStyle;\n\n  constructor(\n    public ngZone: NgZone,\n    private host: StyleComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.host.instance.setImage(this.instance);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'opacity':\n            this.instance.setOpacity(val);\n            break;\n          case 'rotateWithView':\n            this.instance.setRotateWithView(val);\n            break;\n          case 'rotation':\n            this.instance.setRotation(val);\n            break;\n          case 'scale':\n            this.instance.setScale(val);\n            break;\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.host.instance.setImage((null as unknown) as ImageStyle);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageStyleComponent } from './image-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    ImageStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ImageStyleComponent\n  ]\n})\nexport class ImageStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, NgZone } from '@angular/core';\nimport { Fill, Stroke } from 'ol/style';\nimport RegularShape, { Options } from 'ol/style/RegularShape';\nimport { ImageStyleComponent } from '../image-style';\nimport { StyleComponent } from '../style';\n\n@Component({\n  selector: 'ol-regular-shape-style',\n  exportAs: 'olRegularShapeStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RegularShapeStyleComponent extends ImageStyleComponent implements OnInit, Options {\n\n  @Input('olFill') fill?: Fill;\n  @Input('olPoints') points!: number;\n  @Input('olRadius') radius?: number;\n  @Input('olRadius1') radius1?: number;\n  @Input('olRadius2') radius2?: number;\n  @Input('olAngle') angle?: number;\n  @Input('olStroke') stroke?: Stroke;\n\n  instance!: RegularShape;\n\n  constructor(\n    ngZone: NgZone,\n    host: StyleComponent\n  ) {\n    super(ngZone, host);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.instance) {\n        this.instance = new RegularShape(this);\n      }\n      super.ngOnInit();\n    });\n  }\n\n  setFill(fill: Fill): void {\n    this.fill = fill;\n    this.ngOnInit();\n  }\n\n  setStroke(stroke: Stroke): void {\n    this.stroke = stroke;\n    this.ngOnInit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegularShapeStyleComponent } from './regular-shape-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    RegularShapeStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    RegularShapeStyleComponent\n  ]\n})\nexport class RegularShapeStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, OnChanges, Input, SimpleChanges, NgZone } from '@angular/core';\nimport CircleStyle, { Options } from 'ol/style/Circle';\nimport { RegularShapeStyleComponent } from '../regular-shape-style';\nimport { StyleComponent } from '../style';\n\n@Component({\n  selector: 'ol-circle-style',\n  exportAs: 'olCircleStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: RegularShapeStyleComponent,\n    useExisting: forwardRef(() => CircleStyleComponent),\n    multi: false\n  }]\n})\nexport class CircleStyleComponent extends RegularShapeStyleComponent implements OnInit, OnChanges, Options {\n\n  @Input('olRadius') radius!: number;\n\n  instance!: CircleStyle;\n\n  constructor(\n    ngZone: NgZone,\n    host: StyleComponent\n  ) {\n    super(ngZone, host);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new CircleStyle(this);\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { radius, ...others } = changes;\n    if (this.instance && radius) {\n      this.instance.setRadius(radius.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CircleStyleComponent } from './circle-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    CircleStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CircleStyleComponent\n  ]\n})\nexport class CircleStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, OnDestroy, Input, SimpleChanges, NgZone } from '@angular/core';\nimport { Size } from 'ol/size';\nimport { Fill, Stroke } from 'ol/style';\nimport Text, { Options } from 'ol/style/Text';\nimport { TextPlacement } from './text-style.model';\nimport { StyleComponent } from '../style';\n\n@Component({\n  selector: 'ol-text-style',\n  exportAs: 'olTextStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextStyleComponent implements OnInit, OnChanges, OnDestroy, Options {\n\n  @Input('olFont') font?: string;\n  @Input('olMaxAngle') maxAngle?: number;\n  @Input('olOffsetX') offsetX?: number;\n  @Input('olOffsetY') offsetY?: number;\n  @Input('olOverflow') overflow?: boolean;\n  @Input('olPlacement') placement?: TextPlacement | string;\n  @Input('olScale') scale?: number | Size;\n  @Input('olRotateWithView') rotateWithView?: boolean;\n  @Input('olRotation') rotation?: number;\n  @Input('olText') text?: string;\n  @Input('olTextAlign') textAlign?: string;\n  @Input('olTextBaseline') textBaseline?: string;\n  @Input('olFill') fill?: Fill;\n  @Input('olStroke') stroke?: Stroke;\n  @Input('olBackgroundFill') backgroundFill?: Fill;\n  @Input('olBackgroundStroke') backgroundStroke?: Stroke;\n  @Input('olPadding') padding?: number[];\n\n  instance!: Text;\n\n  constructor(\n    private ngZone: NgZone,\n    private host: StyleComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Text(this);\n      this.host.instance.setText(this.instance);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'font':\n            this.instance.setFont(val);\n            break;\n          case 'maxAngle':\n            this.instance.setMaxAngle(val);\n            break;\n          case 'offsetX':\n            this.instance.setOffsetX(val);\n            break;\n          case 'offsetY':\n            this.instance.setOffsetY(val);\n            break;\n          case 'overflow':\n            this.instance.setOverflow(val);\n            break;\n          case 'placement':\n            this.instance.setPlacement(val);\n            break;\n          case 'scale':\n            this.instance.setScale(val);\n            break;\n          case 'rotateWithView':\n            this.instance.setRotateWithView(val);\n            break;\n          case 'rotation':\n            this.instance.setRotation(val);\n            break;\n          case 'text':\n            this.instance.setText(val);\n            break;\n          case 'textAlign':\n            this.instance.setTextAlign(val);\n            break;\n          case 'textBaseline':\n            this.instance.setTextBaseline(val);\n            break;\n          case 'fill':\n            this.instance.setFill(val);\n            break;\n          case 'stroke':\n            this.instance.setStroke(val);\n            break;\n          case 'backgroundFill':\n            this.instance.setBackgroundFill(val);\n            break;\n          case 'backgroundStroke':\n            this.instance.setBackgroundStroke(val);\n            break;\n          case 'padding':\n            this.instance.setPadding(val);\n            break;\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.host.instance.setText((null as unknown) as Text);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextStyleComponent } from './text-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    TextStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextStyleComponent\n  ]\n})\nexport class TextStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, OnDestroy, Input, Optional, SimpleChanges, NgZone } from '@angular/core';\nimport { Color } from 'ol/color';\nimport { ColorLike } from 'ol/colorlike';\nimport Fill, { Options } from 'ol/style/Fill';\nimport { RegularShapeStyleComponent } from '../regular-shape-style';\nimport { StyleComponent } from '../style';\nimport { TextStyleComponent } from '../text-style';\n\n@Component({\n  selector: 'ol-fill-style',\n  exportAs: 'olFillStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FillStyleComponent implements OnInit, OnChanges, OnDestroy, Options {\n\n  @Input('olColor') color?: Color | ColorLike;\n  @Input('olType') type: 'text-background-fill'|'fill' = 'fill';\n\n  instance!: Fill;\n  private host!: StyleComponent|TextStyleComponent|RegularShapeStyleComponent;\n\n  constructor(\n    private ngZone: NgZone,\n    @Optional() styleHost: StyleComponent,\n    @Optional() textHost: TextStyleComponent,\n    @Optional() regularShapeHost: RegularShapeStyleComponent\n  ) {\n    this.host = regularShapeHost || textHost || styleHost;\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Fill(this);\n      if (this.type === 'text-background-fill') {\n        (this.host as TextStyleComponent).instance.setBackgroundFill(this.instance);\n      } else if (this.type === 'fill') {\n        if (this.host instanceof RegularShapeStyleComponent) {\n          this.host.setFill(this.instance);\n        } else {\n          this.host.instance.setFill(this.instance);\n        }\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    const { color } = changes;\n    if (color) this.instance.setColor(color.currentValue);\n  }\n\n  ngOnDestroy(): void {\n    const nullVal = (null as unknown) as Fill;\n    if (this.type === 'text-background-fill') {\n      (this.host as TextStyleComponent).instance.setBackgroundFill(nullVal);\n    } else if (this.type === 'fill') {\n      if (this.host instanceof RegularShapeStyleComponent) {\n        this.host.setFill(nullVal);\n      } else {\n        this.host.instance.setFill(nullVal);\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FillStyleComponent } from './fill-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    FillStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    FillStyleComponent\n  ]\n})\nexport class FillStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, Input, SimpleChanges, NgZone } from '@angular/core';\nimport { Color } from 'ol/color';\nimport { Size } from 'ol/size';\nimport Icon, { Options } from 'ol/style/Icon';\nimport { IconAnchorUnits, IconOrigin } from './icon-style.model';\nimport { ImageStyleComponent } from '../image-style';\nimport { StyleComponent } from '../style';\n\n@Component({\n  selector: 'ol-icon-style',\n  exportAs: 'olIconStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IconStyleComponent extends ImageStyleComponent implements OnInit, OnChanges, Options {\n\n  @Input('olAnchor') anchor?: number[];\n  @Input('olAnchorOrigin') anchorOrigin?: IconOrigin;\n  @Input('olAnchorXUnits') anchorXUnits?: IconAnchorUnits;\n  @Input('olAnchorYUnits') anchorYUnits?: IconAnchorUnits;\n  @Input('olColor') color?: Color | string;\n  @Input('olCrossOrigin') crossOrigin?: string;\n  @Input('olImg') img?: HTMLImageElement | HTMLCanvasElement;\n  @Input('olOffset') offset?: number[];\n  @Input('olOffsetOrigin') offsetOrigin?: IconOrigin;\n  @Input('olSize') size?: Size;\n  @Input('olImgSize') imgSize?: Size;\n  @Input('olSrc') src?: string;\n\n  instance!: Icon;\n\n  constructor(\n    ngZone: NgZone,\n    host: StyleComponent\n  ) {\n    super(ngZone, host);\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Icon(this);\n      super.ngOnInit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { anchor, ...others } = changes;\n    if (this.instance && anchor) {\n      this.instance.setAnchor(anchor.currentValue);\n    }\n    super.ngOnChanges(others);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconStyleComponent } from './icon-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    IconStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    IconStyleComponent\n  ]\n})\nexport class IconStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnChanges, OnDestroy, Input, Optional, SimpleChanges, NgZone } from '@angular/core';\nimport { Color } from 'ol/color';\nimport { ColorLike } from 'ol/colorlike';\nimport Stroke, { Options } from 'ol/style/Stroke';\nimport { RegularShapeStyleComponent } from '../regular-shape-style';\nimport { StyleComponent } from '../style';\nimport { TextStyleComponent } from '../text-style';\n\n@Component({\n  selector: 'ol-stroke-style',\n  exportAs: 'olStrokeStyle',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StrokeStyleComponent implements OnInit, OnChanges, OnDestroy, Options {\n\n  @Input('olColor') color?: Color | ColorLike;\n  @Input('olLineCap') lineCap?: CanvasLineCap;\n  @Input('olLineJoin') lineJoin?: CanvasLineJoin;\n  @Input('olLineDash') lineDash?: number[];\n  @Input('olLineDashOffset') lineDashOffset?: number;\n  @Input('olMiterLimit') miterLimit?: number;\n  @Input('olWidth') width?: number;\n  @Input('olType') type: 'text-background-stroke'|'stroke' = 'stroke';\n\n  instance!: Stroke;\n  private host!: StyleComponent|TextStyleComponent|RegularShapeStyleComponent;\n\n  constructor(\n    private ngZone: NgZone,\n    @Optional() styleHost: StyleComponent,\n    @Optional() textHost: TextStyleComponent,\n    @Optional() regularShapeHost: RegularShapeStyleComponent\n  ) {\n    this.host = regularShapeHost || textHost || styleHost;\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.instance = new Stroke(this);\n      if (this.type === 'stroke') {\n        if (this.host instanceof RegularShapeStyleComponent) {\n          this.host.setStroke(this.instance);\n        } else {\n          this.host.instance.setStroke(this.instance);\n        }\n      } else if (this.type === 'text-background-stroke') {\n        (this.host as TextStyleComponent).instance.setBackgroundStroke(this.instance);\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'color':\n            this.instance.setColor(val);\n            break;\n          case 'lineCap':\n            this.instance.setLineCap(val);\n            break;\n          case 'lineJoin':\n            this.instance.setLineJoin(val);\n            break;\n          case 'lineDash':\n            this.instance.setLineDash(val);\n            break;\n          case 'lineDashOffset':\n            this.instance.setLineDashOffset(val);\n            break;\n          case 'miterLimit':\n            this.instance.setMiterLimit(val);\n            break;\n          case 'width':\n            this.instance.setWidth(val);\n            break;\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    const nullVal = (null as unknown) as Stroke;\n    if (this.type === 'stroke') {\n      if (this.host instanceof RegularShapeStyleComponent) {\n        this.host.setStroke(nullVal);\n      } else {\n        this.host.instance.setStroke(nullVal);\n      }\n    } else if (this.type === 'text-background-stroke') {\n      (this.host as TextStyleComponent).instance.setBackgroundStroke(nullVal);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StrokeStyleComponent } from './stroke-style.component';\n\n\n\n@NgModule({\n  declarations: [\n    StrokeStyleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    StrokeStyleComponent\n  ]\n})\nexport class StrokeStyleModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges, NgZone } from '@angular/core';\nimport { Coordinate } from 'ol/coordinate';\nimport BaseEvent from 'ol/events/Event';\nimport { Extent } from 'ol/extent';\nimport { ObjectEvent } from 'ol/Object';\nimport { ProjectionLike } from 'ol/proj';\nimport View, { ViewOptions } from 'ol/View';\nimport { MapComponent } from '../map';\n\n@Component({\n  selector: 'ol-view',\n  exportAs: 'olView',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy, ViewOptions {\n\n  @Input('olCenter') center?: Coordinate;\n  @Input('olConstrainRotation') constrainRotation?: boolean | number;\n  @Input('olEnableRotation') enableRotation?: boolean;\n  @Input('olExtent') extent?: Extent;\n  @Input('olConstrainOnlyCenter') constrainOnlyCenter?: boolean;\n  @Input('olSmoothExtentConstraint') smoothExtentConstraint?: boolean;\n  @Input('olMaxResolution') maxResolution?: number;\n  @Input('olMinResolution') minResolution?: number;\n  @Input('olMaxZoom') maxZoom?: number;\n  @Input('olMinZoom') minZoom?: number;\n  @Input('olMultiWorld') multiWorld?: boolean;\n  @Input('olConstrainResolution') constrainResolution?: boolean;\n  @Input('olSmoothResolutionConstraint') smoothResolutionConstraint?: boolean;\n  @Input('olShowFullExtent') showFullExtent?: boolean;\n  @Input('olProjection') projection?: ProjectionLike;\n  @Input('olResolution') resolution?: number;\n  @Input('olResolutions') resolutions?: number[];\n  @Input('olRotation') rotation?: number;\n  @Input('olZoom') zoom?: number;\n  @Input('olZoomFactor') zoomFactor?: number;\n  @Input('olPadding') padding?: number[];\n\n  @Output('olOnChange') change$ = new EventEmitter<BaseEvent>();\n  @Output('olOnChangeCenter') changeCenter$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeResolution') changeResolution$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnChangeRotation') changeRotation$ = new EventEmitter<ObjectEvent>();\n  @Output('olOnError') error$ = new EventEmitter<BaseEvent>();\n  @Output('olOnPropertychange') propertychange$ = new EventEmitter<ObjectEvent>();\n\n  instance!: View;\n\n  constructor(\n    private ngZone: NgZone,\n    private host: MapComponent\n  ) {\n    if (!this.host) {\n      throw new Error(\"The view component needs to be nested in the map component.\");\n    }\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.createInstance();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.instance) return;\n\n    const properties: { [key: string]: any } = {};\n\n    for (const key in changes) {\n      if (Object.prototype.hasOwnProperty.call(changes, key)) {\n        const val = changes[key].currentValue;\n        switch (key) {\n          case 'center':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setCenter(val);\n            });\n            break;\n          case 'constrainResolution':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setConstrainResolution(val);\n            });\n            break;\n          case 'maxZoom':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setMaxZoom(val);\n            });\n            break;\n          case 'minZoom':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setMinZoom(val);\n            });\n            break;\n          case 'resolution':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setResolution(val);\n            });\n            break;\n          case 'rotation':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setRotation(val);\n            });\n            break;\n          case 'zoom':\n            this.ngZone.runOutsideAngular(() => {\n              this.instance.setZoom(val);\n            });\n            break;\n          default:\n            properties[key] = val;\n            break;\n        }\n      }\n    }\n\n    if (Object.keys(properties).length > 0) {\n      this.ngZone.runOutsideAngular(() => {\n        this.instance.setProperties(properties);\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.host.instance.setView((null as unknown) as View);\n  }\n\n  private createInstance(): void {\n    this.instance = new View(this);\n    this.instance.on('change', (event: BaseEvent) => this.change$.emit(event));\n    this.instance.on('change:center', (event: ObjectEvent) => this.changeCenter$.emit(event));\n    this.instance.on('change:resolution', (event: ObjectEvent) => this.changeResolution$.emit(event));\n    this.instance.on('change:rotation', (event: ObjectEvent) => this.changeRotation$.emit(event));\n    this.instance.on('error', (event: BaseEvent) => this.error$.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.propertychange$.emit(event));\n    this.host.instance.setView(this.instance);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewComponent } from './view.component';\n\n\n\n@NgModule({\n  declarations: [\n    ViewComponent\n  ],\n  exports: [\n    ViewComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ViewModule { }\n","import { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [\n\n  ],\n  imports: [\n  ],\n  exports: [\n\n  ]\n})\nexport class NgOpenlayersModule { }\n","/*\n * Public API Surface of ng-openlayers\n */\nexport * from './control/control';\nexport * from './control/mouse-position';\nexport * from './control/scale-line';\nexport * from './control/zoom';\nexport * from './core';\nexport * from './interaction/draw-interaction';\nexport * from './interaction/interaction';\nexport * from './interaction/modify-interaction';\nexport * from './interaction/pinch-zoom-interaction';\nexport * from './interaction/pointer-interaction';\nexport * from './interaction/select-interaction';\nexport * from './interaction/snap-interaction';\nexport * from './layer/base-image-layer';\nexport * from './layer/base-layer';\nexport * from './layer/base-tile-layer';\nexport * from './layer/base-vector-layer';\nexport * from './layer/group-layer';\nexport * from './layer/image-layer';\nexport * from './layer/layer';\nexport * from './layer/tile-layer';\nexport * from './layer/vector-layer';\nexport * from './layer/vector-tile-layer';\nexport * from './layer/webgl-tile-layer';\nexport * from './map';\nexport * from './overlay';\nexport * from './source/cluster-source';\nexport * from './source/data-tile-source';\nexport * from './source/geo-tiff-source';\nexport * from './source/image-source';\nexport * from './source/image-wms-source';\nexport * from './source/osm-source';\nexport * from './source/source';\nexport * from './source/tile-image-source';\nexport * from './source/tile-source';\nexport * from './source/url-tile-source';\nexport * from './source/vector-source';\nexport * from './source/vector-tile-source';\nexport * from './source/xyz-source';\nexport * from './style/circle-style';\nexport * from './style/fill-style';\nexport * from './style/icon-style';\nexport * from './style/image-style';\nexport * from './style/regular-shape-style';\nexport * from './style/stroke-style';\nexport * from './style/style';\nexport * from './style/text-style';\nexport * from './view';\nexport * from './ng-openlayers.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["defaultsInteraction","i1.StyleComponent","i2.TextStyleComponent","i3.RegularShapeStyleComponent","i1.MapComponent"],"mappings":"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"}}}